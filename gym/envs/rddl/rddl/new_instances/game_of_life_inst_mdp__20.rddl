non-fluents nf_game_of_life_inst_mdp__20 {
	domain = game_of_life_mdp;
	objects {
		x_pos : {x1,x2,x3,x4,x5};
		y_pos : {y1,y2,y3,y4,y5};
	};
	non-fluents {
		NOISE-PROB(x1,y1) = 0.045448;
		NEIGHBOR(x1,y1,x2,y1);
		NEIGHBOR(x1,y1,x1,y2);
		NOISE-PROB(x1,y2) = 0.058168;
		NEIGHBOR(x1,y2,x1,y1);
		NEIGHBOR(x1,y2,x2,y2);
		NEIGHBOR(x1,y2,x1,y3);
		NOISE-PROB(x1,y3) = 0.062060;
		NEIGHBOR(x1,y3,x1,y2);
		NEIGHBOR(x1,y3,x2,y3);
		NEIGHBOR(x1,y3,x1,y4);
		NOISE-PROB(x1,y4) = 0.047607;
		NEIGHBOR(x1,y4,x1,y3);
		NEIGHBOR(x1,y4,x2,y4);
		NOISE-PROB(x1,y5) = 0.049379;
		NEIGHBOR(x1,y5,x1,y4);
		NEIGHBOR(x1,y5,x2,y5);
		NOISE-PROB(x2,y1) = 0.041784;
		NEIGHBOR(x2,y1,x1,y1);
		NEIGHBOR(x2,y1,x3,y1);
		NEIGHBOR(x2,y1,x2,y2);
		NOISE-PROB(x2,y2) = 0.040793;
		NEIGHBOR(x2,y2,x1,y2);
		NEIGHBOR(x2,y2,x2,y1);
		NEIGHBOR(x2,y2,x3,y2);
		NEIGHBOR(x2,y2,x2,y3);
		NOISE-PROB(x2,y3) = 0.040347;
		NEIGHBOR(x2,y3,x1,y3);
		NEIGHBOR(x2,y3,x2,y2);
		NEIGHBOR(x2,y3,x3,y3);
		NEIGHBOR(x2,y3,x2,y4);
		NOISE-PROB(x2,y4) = 0.047228;
		NEIGHBOR(x2,y4,x1,y4);
		NEIGHBOR(x2,y4,x2,y3);
		NEIGHBOR(x2,y4,x3,y4);
		NOISE-PROB(x2,y5) = 0.041063;
		NEIGHBOR(x2,y5,x1,y5);
		NEIGHBOR(x2,y5,x2,y4);
		NEIGHBOR(x2,y5,x3,y5);
		NOISE-PROB(x3,y1) = 0.064854;
		NEIGHBOR(x3,y1,x2,y1);
		NEIGHBOR(x3,y1,x4,y1);
		NEIGHBOR(x3,y1,x3,y2);
		NOISE-PROB(x3,y2) = 0.055349;
		NEIGHBOR(x3,y2,x2,y2);
		NEIGHBOR(x3,y2,x3,y1);
		NEIGHBOR(x3,y2,x4,y2);
		NEIGHBOR(x3,y2,x3,y3);
		NOISE-PROB(x3,y3) = 0.062727;
		NEIGHBOR(x3,y3,x2,y3);
		NEIGHBOR(x3,y3,x3,y2);
		NEIGHBOR(x3,y3,x4,y3);
		NEIGHBOR(x3,y3,x3,y4);
		NOISE-PROB(x3,y4) = 0.049494;
		NEIGHBOR(x3,y4,x2,y4);
		NEIGHBOR(x3,y4,x3,y3);
		NEIGHBOR(x3,y4,x4,y4);
		NOISE-PROB(x3,y5) = 0.064498;
		NEIGHBOR(x3,y5,x2,y5);
		NEIGHBOR(x3,y5,x3,y4);
		NEIGHBOR(x3,y5,x4,y5);
		NOISE-PROB(x4,y1) = 0.059959;
		NEIGHBOR(x4,y1,x3,y1);
		NEIGHBOR(x4,y1,x4,y2);
		NOISE-PROB(x4,y2) = 0.055223;
		NEIGHBOR(x4,y2,x3,y2);
		NEIGHBOR(x4,y2,x4,y1);
		NEIGHBOR(x4,y2,x4,y3);
		NOISE-PROB(x4,y3) = 0.064585;
		NEIGHBOR(x4,y3,x3,y3);
		NEIGHBOR(x4,y3,x4,y2);
		NEIGHBOR(x4,y3,x4,y4);
		NOISE-PROB(x4,y4) = 0.045860;
		NEIGHBOR(x4,y4,x3,y4);
		NEIGHBOR(x4,y4,x4,y3);
		NOISE-PROB(x4,y5) = 0.048423;
		NEIGHBOR(x4,y5,x3,y5);
		NEIGHBOR(x4,y5,x4,y4);
		NOISE-PROB(x5,y1) = 0.056288;
		NEIGHBOR(x5,y1,x4,y1);
		NEIGHBOR(x5,y1,x5,y2);
		NOISE-PROB(x5,y2) = 0.061370;
		NEIGHBOR(x5,y2,x4,y2);
		NEIGHBOR(x5,y2,x5,y1);
		NEIGHBOR(x5,y2,x5,y3);
		NOISE-PROB(x5,y3) = 0.057301;
		NEIGHBOR(x5,y3,x4,y3);
		NEIGHBOR(x5,y3,x5,y2);
		NEIGHBOR(x5,y3,x5,y4);
		NOISE-PROB(x5,y4) = 0.046772;
		NEIGHBOR(x5,y4,x4,y4);
		NEIGHBOR(x5,y4,x5,y3);
		NOISE-PROB(x5,y5) = 0.045734;
		NEIGHBOR(x5,y5,x4,y5);
		NEIGHBOR(x5,y5,x5,y4);

	};
}

instance game_of_life_inst_mdp__20 {
	domain = game_of_life_mdp;
	non-fluents = nf_game_of_life_inst_mdp__20;
	init-state {
		alive(x1,y1);
		alive(x1,y4);
		alive(x1,y5);
		alive(x2,y1);
		alive(x2,y5);
		alive(x3,y1);
		alive(x3,y2);
		alive(x3,y4);
		alive(x4,y2);
		alive(x4,y4);
		alive(x5,y3);
		alive(x5,y4);
	};

	max-nondef-actions = 1;
	horizon  = 40;
	discount = 1.0;
}
