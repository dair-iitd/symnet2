#####TASK##### Here
## name
skill_teaching_inst_mdp__5001
## horizon
100
## discount factor
1
## number of action fluents
28
## number of det state fluents
56
## number of prob state fluents
28
## number of preconds
0
## number of actions
29
## number of hashing functions
85
## initial state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## 1 if task is deterministic
0
## 1 if state hashing possible
0
## 1 if kleene state hashing possible
0


#####ACTION FLUENTS#####
## index
0
## name
askProb(s0)
## number of values
2
## values
0 false
1 true

## index
1
## name
askProb(s1)
## number of values
2
## values
0 false
1 true

## index
2
## name
askProb(s10)
## number of values
2
## values
0 false
1 true

## index
3
## name
askProb(s11)
## number of values
2
## values
0 false
1 true

## index
4
## name
askProb(s12)
## number of values
2
## values
0 false
1 true

## index
5
## name
askProb(s13)
## number of values
2
## values
0 false
1 true

## index
6
## name
askProb(s2)
## number of values
2
## values
0 false
1 true

## index
7
## name
askProb(s3)
## number of values
2
## values
0 false
1 true

## index
8
## name
askProb(s4)
## number of values
2
## values
0 false
1 true

## index
9
## name
askProb(s5)
## number of values
2
## values
0 false
1 true

## index
10
## name
askProb(s6)
## number of values
2
## values
0 false
1 true

## index
11
## name
askProb(s7)
## number of values
2
## values
0 false
1 true

## index
12
## name
askProb(s8)
## number of values
2
## values
0 false
1 true

## index
13
## name
askProb(s9)
## number of values
2
## values
0 false
1 true

## index
14
## name
giveHint(s0)
## number of values
2
## values
0 false
1 true

## index
15
## name
giveHint(s1)
## number of values
2
## values
0 false
1 true

## index
16
## name
giveHint(s10)
## number of values
2
## values
0 false
1 true

## index
17
## name
giveHint(s11)
## number of values
2
## values
0 false
1 true

## index
18
## name
giveHint(s12)
## number of values
2
## values
0 false
1 true

## index
19
## name
giveHint(s13)
## number of values
2
## values
0 false
1 true

## index
20
## name
giveHint(s2)
## number of values
2
## values
0 false
1 true

## index
21
## name
giveHint(s3)
## number of values
2
## values
0 false
1 true

## index
22
## name
giveHint(s4)
## number of values
2
## values
0 false
1 true

## index
23
## name
giveHint(s5)
## number of values
2
## values
0 false
1 true

## index
24
## name
giveHint(s6)
## number of values
2
## values
0 false
1 true

## index
25
## name
giveHint(s7)
## number of values
2
## values
0 false
1 true

## index
26
## name
giveHint(s8)
## number of values
2
## values
0 false
1 true

## index
27
## name
giveHint(s9)
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####
## index
0
## name
hintDelayVar(s0)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(14))
## hash index
0
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
1
## name
hintDelayVar(s1)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(15))
## hash index
1
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 1
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
2
## name
hintDelayVar(s10)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(16))
## hash index
2
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 1
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
3
## name
hintDelayVar(s11)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(17))
## hash index
3
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 1
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
4
## name
hintDelayVar(s12)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(18))
## hash index
4
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
5
## name
hintDelayVar(s13)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(19))
## hash index
5
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
6
## name
hintDelayVar(s2)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(20))
## hash index
6
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
7
## name
hintDelayVar(s3)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(21))
## hash index
7
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
8
## name
hintDelayVar(s4)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(22))
## hash index
8
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
9
## name
hintDelayVar(s5)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(23))
## hash index
9
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
10
## name
hintDelayVar(s6)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(24))
## hash index
10
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
11
## name
hintDelayVar(s7)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(25))
## hash index
11
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
12
## name
hintDelayVar(s8)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(26))
## hash index
12
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
13
## name
hintDelayVar(s9)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(27))
## hash index
13
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
14
## name
hintedRight(s0)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(14))
## hash index
14
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
15
## name
hintedRight(s1)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(15))
## hash index
15
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 1
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
16
## name
hintedRight(s10)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(16) $s(80))
## hash index
16
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 1
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
17
## name
hintedRight(s11)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(17) $s(71) $s(77) $s(83))
## hash index
17
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 1
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
18
## name
hintedRight(s12)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(18) $s(77))
## hash index
18
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
19
## name
hintedRight(s13)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(19) $s(81) $s(74))
## hash index
19
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
20
## name
hintedRight(s2)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(20) $s(70) $s(71))
## hash index
20
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
21
## name
hintedRight(s3)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(21) $s(70) $s(71))
## hash index
21
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
22
## name
hintedRight(s4)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(22) $s(70) $s(71) $s(76))
## hash index
22
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
23
## name
hintedRight(s5)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(23) $s(70) $s(76))
## hash index
23
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
24
## name
hintedRight(s6)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(24) $s(77))
## hash index
24
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
25
## name
hintedRight(s7)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(25) $s(70) $s(76))
## hash index
25
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
26
## name
hintedRight(s8)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(26) $s(70) $s(77))
## hash index
26
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
27
## name
hintedRight(s9)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(27) $s(77))
## hash index
27
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
28
## name
proficiencyMed(s0)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(42)) $s(28)) : $c(1)) (and($s(42) $s(14)) : $c(1)) (and($s(42) $s(56)) : $c(1)) ($s(70) : $c(1)) ($c(1) : and($s(28) $s(42) $s(0))) )
## hash index
28
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
29
## name
proficiencyMed(s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(43)) $s(29)) : $c(1)) (and($s(43) $s(15)) : $c(1)) (and($s(43) $s(57)) : $c(1)) ($s(71) : $c(1)) ($c(1) : and($s(29) $s(43) $s(1))) )
## hash index
29
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
30
## name
proficiencyMed(s10)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(44)) $s(30)) : $c(1)) (and($s(44) $s(16)) : $c(1)) (and($s(44) $s(58)) : $c(1)) ($s(72) : $c(1)) ($c(1) : and($s(30) $s(44) $s(2))) )
## hash index
30
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
31
## name
proficiencyMed(s11)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(45)) $s(31)) : $c(1)) (and($s(45) $s(17)) : $c(1)) (and($s(45) $s(59)) : $c(1)) ($s(73) : $c(1)) ($c(1) : and($s(31) $s(45) $s(3))) )
## hash index
31
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
32
## name
proficiencyMed(s12)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(46)) $s(32)) : $c(1)) (and($s(46) $s(18)) : $c(1)) (and($s(46) $s(60)) : $c(1)) ($s(74) : $c(1)) ($c(1) : and($s(32) $s(46) $s(4))) )
## hash index
32
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
33
## name
proficiencyMed(s13)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(47)) $s(33)) : $c(1)) (and($s(47) $s(19)) : $c(1)) (and($s(47) $s(61)) : $c(1)) ($s(75) : $c(1)) ($c(1) : and($s(33) $s(47) $s(5))) )
## hash index
33
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
34
## name
proficiencyMed(s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(48)) $s(34)) : $c(1)) (and($s(48) $s(20)) : $c(1)) (and($s(48) $s(62)) : $c(1)) ($s(76) : $c(1)) ($c(1) : and($s(34) $s(48) $s(6))) )
## hash index
34
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
35
## name
proficiencyMed(s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(49)) $s(35)) : $c(1)) (and($s(49) $s(21)) : $c(1)) (and($s(49) $s(63)) : $c(1)) ($s(77) : $c(1)) ($c(1) : and($s(35) $s(49) $s(7))) )
## hash index
35
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
36
## name
proficiencyMed(s4)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(50)) $s(36)) : $c(1)) (and($s(50) $s(22)) : $c(1)) (and($s(50) $s(64)) : $c(1)) ($s(78) : $c(1)) ($c(1) : and($s(36) $s(50) $s(8))) )
## hash index
36
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
37
## name
proficiencyMed(s5)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(51)) $s(37)) : $c(1)) (and($s(51) $s(23)) : $c(1)) (and($s(51) $s(65)) : $c(1)) ($s(79) : $c(1)) ($c(1) : and($s(37) $s(51) $s(9))) )
## hash index
37
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
38
## name
proficiencyMed(s6)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(52)) $s(38)) : $c(1)) (and($s(52) $s(24)) : $c(1)) (and($s(52) $s(66)) : $c(1)) ($s(80) : $c(1)) ($c(1) : and($s(38) $s(52) $s(10))) )
## hash index
38
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
39
## name
proficiencyMed(s7)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(53)) $s(39)) : $c(1)) (and($s(53) $s(25)) : $c(1)) (and($s(53) $s(67)) : $c(1)) ($s(81) : $c(1)) ($c(1) : and($s(39) $s(53) $s(11))) )
## hash index
39
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
40
## name
proficiencyMed(s8)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(54)) $s(40)) : $c(1)) (and($s(54) $s(26)) : $c(1)) (and($s(54) $s(68)) : $c(1)) ($s(82) : $c(1)) ($c(1) : and($s(40) $s(54) $s(12))) )
## hash index
40
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
41
## name
proficiencyMed(s9)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(55)) $s(41)) : $c(1)) (and($s(55) $s(27)) : $c(1)) (and($s(55) $s(69)) : $c(1)) ($s(83) : $c(1)) ($c(1) : and($s(41) $s(55) $s(13))) )
## hash index
41
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
42
## name
updateTurn(s0)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) or($a(0) $a(14)))
## hash index
42
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 2

## index
43
## name
updateTurn(s1)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) or($a(1) $a(15)))
## hash index
43
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 1
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 2
28 0

## index
44
## name
updateTurn(s10)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) or($a(2) $a(16)))
## hash index
44
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 1
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 2
27 0
28 0

## index
45
## name
updateTurn(s11)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) or($a(3) $a(17)))
## hash index
45
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 1
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 2
26 0
27 0
28 0

## index
46
## name
updateTurn(s12)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) or($a(4) $a(18)))
## hash index
46
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 2
25 0
26 0
27 0
28 0

## index
47
## name
updateTurn(s13)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) or($a(5) $a(19)))
## hash index
47
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 2
24 0
25 0
26 0
27 0
28 0

## index
48
## name
updateTurn(s2)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) or($a(6) $a(20)))
## hash index
48
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 2
23 0
24 0
25 0
26 0
27 0
28 0

## index
49
## name
updateTurn(s3)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) or($a(7) $a(21)))
## hash index
49
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 2
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
50
## name
updateTurn(s4)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) or($a(8) $a(22)))
## hash index
50
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 2
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
51
## name
updateTurn(s5)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) or($a(9) $a(23)))
## hash index
51
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 2
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
52
## name
updateTurn(s6)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) or($a(10) $a(24)))
## hash index
52
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 2
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
53
## name
updateTurn(s7)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) or($a(11) $a(25)))
## hash index
53
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 2
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
54
## name
updateTurn(s8)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) or($a(12) $a(26)))
## hash index
54
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 2
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
55
## name
updateTurn(s9)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) or($a(13) $a(27)))
## hash index
55
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 2
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0



#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
answeredRight(s0)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(0) $s(70)) : Bernoulli($c(0.8650489))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(0) $s(28)) : Bernoulli($c(0.65))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(0) $s(28) $a(0)) : $c(0)) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(0)) : Bernoulli($c(0.6345974))) ($c(1) : $c(0)) )
## hash index
56
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 1

## index
1
## name
answeredRight(s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(1) $s(71)) : Bernoulli($c(0.8660778))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(1) $s(29)) : Bernoulli($c(0.65))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(1) $s(29) $a(1)) : $c(0)) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(1)) : Bernoulli($c(0.61824644))) ($c(1) : $c(0)) )
## hash index
57
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 1
28 0

## index
2
## name
answeredRight(s10)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(2) $s(72)) : Bernoulli($c(0.88768065))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(2) $s(30) $s(80)) : Bernoulli($c(0.65))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(2) $s(30) $a(2)) : Bernoulli($c(0.603980231285095))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(2) $s(80)) : Bernoulli($c(0.6177482))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(2) $a(2)) : Bernoulli($c(0.613591009378433))) ($c(1) : $c(0)) )
## hash index
58
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 1
27 0
28 0

## index
3
## name
answeredRight(s11)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(3) $s(73)) : Bernoulli($c(0.9105373))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(3) $s(31) $s(71) $s(77) $s(83)) : Bernoulli($c(0.65))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(3) $s(31) $a(3)) : Bernoulli($c(0.572140637040138))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(3) $s(71) $s(77) $s(83)) : Bernoulli($c(0.55647755))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(3) $a(3)) : Bernoulli($c(0.393909859657288))) ($c(1) : $c(0)) )
## hash index
59
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 1
26 0
27 0
28 0

## index
4
## name
answeredRight(s12)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(4) $s(74)) : Bernoulli($c(0.9608451))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(4) $s(32) $s(77)) : Bernoulli($c(0.65))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(4) $s(32) $a(4)) : Bernoulli($c(0.568255597352982))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(4) $s(77)) : Bernoulli($c(0.5971347))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(4) $a(4)) : Bernoulli($c(0.518851840496063))) ($c(1) : $c(0)) )
## hash index
60
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 1
25 0
26 0
27 0
28 0

## index
5
## name
answeredRight(s13)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(5) $s(75)) : Bernoulli($c(0.9628922))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(5) $s(33) $s(81) $s(74)) : Bernoulli($c(0.65))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(5) $s(33) $a(5)) : Bernoulli($c(0.480107176303864))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(5) $s(81) $s(74)) : Bernoulli($c(0.6018253))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(5) $a(5)) : Bernoulli($c(0.465420174598694))) ($c(1) : $c(0)) )
## hash index
61
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 1
24 0
25 0
26 0
27 0
28 0

## index
6
## name
answeredRight(s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(6) $s(76)) : Bernoulli($c(0.9408046))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(6) $s(34) $s(70) $s(71)) : Bernoulli($c(0.65))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(6) $s(34) $a(6)) : Bernoulli($c(0.48905668258667))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(6) $s(70) $s(71)) : Bernoulli($c(0.5994211))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(6) $a(6)) : Bernoulli($c(0.5622931599617))) ($c(1) : $c(0)) )
## hash index
62
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 1
23 0
24 0
25 0
26 0
27 0
28 0

## index
7
## name
answeredRight(s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(7) $s(77)) : Bernoulli($c(0.8806903))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(7) $s(35) $s(70) $s(71)) : Bernoulli($c(0.65))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(7) $s(35) $a(7)) : Bernoulli($c(0.48627861738205))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(7) $s(70) $s(71)) : Bernoulli($c(0.57262987))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(7) $a(7)) : Bernoulli($c(0.510700583457947))) ($c(1) : $c(0)) )
## hash index
63
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
8
## name
answeredRight(s4)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(8) $s(78)) : Bernoulli($c(0.9146578))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(8) $s(36) $s(70) $s(71) $s(76)) : Bernoulli($c(0.65))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(8) $s(36) $a(8)) : Bernoulli($c(0.569946840405464))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(8) $s(70) $s(71) $s(76)) : Bernoulli($c(0.58077246))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(8) $a(8)) : Bernoulli($c(0.403281158208847))) ($c(1) : $c(0)) )
## hash index
64
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
9
## name
answeredRight(s5)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(9) $s(79)) : Bernoulli($c(0.9184007))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(9) $s(37) $s(70) $s(76)) : Bernoulli($c(0.65))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(9) $s(37) $a(9)) : Bernoulli($c(0.583414340019226))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(9) $s(70) $s(76)) : Bernoulli($c(0.6032023))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(9) $a(9)) : Bernoulli($c(0.449350821971893))) ($c(1) : $c(0)) )
## hash index
65
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 1
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
10
## name
answeredRight(s6)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(10) $s(80)) : Bernoulli($c(0.96212584))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(10) $s(38) $s(77)) : Bernoulli($c(0.65))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(10) $s(38) $a(10)) : Bernoulli($c(0.643297165632248))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(10) $s(77)) : Bernoulli($c(0.50969297))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(10) $a(10)) : Bernoulli($c(0.484273481369019))) ($c(1) : $c(0)) )
## hash index
66
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 1
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
11
## name
answeredRight(s7)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(11) $s(81)) : Bernoulli($c(0.9363634))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(11) $s(39) $s(70) $s(76)) : Bernoulli($c(0.65))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(11) $s(39) $a(11)) : Bernoulli($c(0.493179333209991))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(11) $s(70) $s(76)) : Bernoulli($c(0.64859205))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(11) $a(11)) : Bernoulli($c(0.532632207870483))) ($c(1) : $c(0)) )
## hash index
67
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 1
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
12
## name
answeredRight(s8)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(12) $s(82)) : Bernoulli($c(0.93022335))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(12) $s(40) $s(70) $s(77)) : Bernoulli($c(0.65))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(12) $s(40) $a(12)) : Bernoulli($c(0.607417166233063))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(12) $s(70) $s(77)) : Bernoulli($c(0.6082461))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(12) $a(12)) : Bernoulli($c(0.584056544303894))) ($c(1) : $c(0)) )
## hash index
68
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 1
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
13
## name
answeredRight(s9)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(13) $s(83)) : Bernoulli($c(0.87389535))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(13) $s(41) $s(77)) : Bernoulli($c(0.65))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(13) $s(41) $a(13)) : Bernoulli($c(0.568335497379303))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(13) $s(77)) : Bernoulli($c(0.51530665))) (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47)) $a(13) $a(13)) : Bernoulli($c(0.471626150608063))) ($c(1) : $c(0)) )
## hash index
69
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 1
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
14
## name
proficiencyHigh(s0)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47))) : $s(70)) (and(~($s(42)) $s(70)) : Bernoulli($c(0.954021772742271))) (and($s(28) $s(42) $s(56)) : $c(1)) ($c(1) : and($s(70) $s(42) or($s(0) $s(56)))) )
## hash index
70
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
15
## name
proficiencyHigh(s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47))) : $s(71)) (and(~($s(43)) $s(71)) : Bernoulli($c(0.985862043499947))) (and($s(29) $s(43) $s(57)) : $c(1)) ($c(1) : and($s(71) $s(43) or($s(1) $s(57)))) )
## hash index
71
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
16
## name
proficiencyHigh(s10)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47))) : $s(72)) (and(~($s(44)) $s(72)) : Bernoulli($c(0.99))) (and($s(30) $s(44) $s(58)) : $c(1)) ($c(1) : and($s(72) $s(44) or($s(2) $s(58)))) )
## hash index
72
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
17
## name
proficiencyHigh(s11)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47))) : $s(73)) (and(~($s(45)) $s(73)) : Bernoulli($c(0.99))) (and($s(31) $s(45) $s(59)) : $c(1)) ($c(1) : and($s(73) $s(45) or($s(3) $s(59)))) )
## hash index
73
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
18
## name
proficiencyHigh(s12)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47))) : $s(74)) (and(~($s(46)) $s(74)) : Bernoulli($c(0.974266862869263))) (and($s(32) $s(46) $s(60)) : $c(1)) ($c(1) : and($s(74) $s(46) or($s(4) $s(60)))) )
## hash index
74
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
19
## name
proficiencyHigh(s13)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47))) : $s(75)) (and(~($s(47)) $s(75)) : Bernoulli($c(0.973517733812332))) (and($s(33) $s(47) $s(61)) : $c(1)) ($c(1) : and($s(75) $s(47) or($s(5) $s(61)))) )
## hash index
75
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
20
## name
proficiencyHigh(s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47))) : $s(76)) (and(~($s(48)) $s(76)) : Bernoulli($c(0.978033298254013))) (and($s(34) $s(48) $s(62)) : $c(1)) ($c(1) : and($s(76) $s(48) or($s(6) $s(62)))) )
## hash index
76
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
21
## name
proficiencyHigh(s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47))) : $s(77)) (and(~($s(49)) $s(77)) : Bernoulli($c(0.95641011595726))) (and($s(35) $s(49) $s(63)) : $c(1)) ($c(1) : and($s(77) $s(49) or($s(7) $s(63)))) )
## hash index
77
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
22
## name
proficiencyHigh(s4)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47))) : $s(78)) (and(~($s(50)) $s(78)) : Bernoulli($c(0.99))) (and($s(36) $s(50) $s(64)) : $c(1)) ($c(1) : and($s(78) $s(50) or($s(8) $s(64)))) )
## hash index
78
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
23
## name
proficiencyHigh(s5)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47))) : $s(79)) (and(~($s(51)) $s(79)) : Bernoulli($c(0.99))) (and($s(37) $s(51) $s(65)) : $c(1)) ($c(1) : and($s(79) $s(51) or($s(9) $s(65)))) )
## hash index
79
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
24
## name
proficiencyHigh(s6)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47))) : $s(80)) (and(~($s(52)) $s(80)) : Bernoulli($c(0.954397323727608))) (and($s(38) $s(52) $s(66)) : $c(1)) ($c(1) : and($s(80) $s(52) or($s(10) $s(66)))) )
## hash index
80
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
25
## name
proficiencyHigh(s7)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47))) : $s(81)) (and(~($s(53)) $s(81)) : Bernoulli($c(0.974647408723831))) (and($s(39) $s(53) $s(67)) : $c(1)) ($c(1) : and($s(81) $s(53) or($s(11) $s(67)))) )
## hash index
81
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
26
## name
proficiencyHigh(s8)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47))) : $s(82)) (and(~($s(54)) $s(82)) : Bernoulli($c(0.976935642957687))) (and($s(40) $s(54) $s(68)) : $c(1)) ($c(1) : and($s(82) $s(54) or($s(12) $s(68)))) )
## hash index
82
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0

## index
27
## name
proficiencyHigh(s9)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(42)) ~($s(43)) ~($s(48)) ~($s(49)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) ~($s(44)) ~($s(45)) ~($s(46)) ~($s(47))) : $s(83)) (and(~($s(55)) $s(83)) : Bernoulli($c(0.99))) (and($s(41) $s(55) $s(69)) : $c(1)) ($c(1) : and($s(83) $s(55) or($s(13) $s(69)))) )
## hash index
83
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0



#####REWARD#####
## formula
+(*($s(70) $c(1.0512909)) *($s(71) $c(1.2200704)) *($s(76) $c(2.4153125)) *($s(77) $c(2.2309046)) *($s(78) $c(3.2871373)) *($s(79) $c(3.085681)) *($s(80) $c(3.1537533)) *($s(81) $c(3.4297261)) *($s(82) $c(3.4119902)) *($s(83) $c(3.4439273)) *($s(72) $c(4.1415586)) *($s(73) $c(4.3281884)) *($s(74) $c(3.31212)) *($s(75) $c(4.1217847)) -($c(0) *(~($s(28)) $c(1.0512909))) -($c(0) *(~($s(29)) $c(1.2200704))) -($c(0) *(~($s(34)) $c(2.4153125))) -($c(0) *(~($s(35)) $c(2.2309046))) -($c(0) *(~($s(36)) $c(3.2871373))) -($c(0) *(~($s(37)) $c(3.085681))) -($c(0) *(~($s(38)) $c(3.1537533))) -($c(0) *(~($s(39)) $c(3.4297261))) -($c(0) *(~($s(40)) $c(3.4119902))) -($c(0) *(~($s(41)) $c(3.4439273))) -($c(0) *(~($s(30)) $c(4.1415586))) -($c(0) *(~($s(31)) $c(4.3281884))) -($c(0) *(~($s(32)) $c(3.31212))) -($c(0) *(~($s(33)) $c(4.1217847))))
## min
-42.6334453
## max
42.6334453
## independent from actions
1
## hash index
84
## caching type
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
4
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
5
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
6
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
7
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
8
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
9
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
10
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
11
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
12
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
13
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
14
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
15
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
16
## state
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
17
## state
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
18
## state
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
19
## state
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
20
## state
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
21
## state
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
22
## state
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
23
## state
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
24
## state
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
25
## state
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
26
## state
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
27
## state
0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
28
## state
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####
## index
0

## state fluent hash keys (first line is the number of keys)
2
28 1
70 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
1

## state fluent hash keys (first line is the number of keys)
2
29 1
71 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
2

## state fluent hash keys (first line is the number of keys)
2
30 1
72 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
3

## state fluent hash keys (first line is the number of keys)
2
31 1
73 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
4

## state fluent hash keys (first line is the number of keys)
2
32 1
74 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
5

## state fluent hash keys (first line is the number of keys)
2
33 1
75 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
6

## state fluent hash keys (first line is the number of keys)
2
34 1
76 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
7

## state fluent hash keys (first line is the number of keys)
2
35 1
77 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
8

## state fluent hash keys (first line is the number of keys)
2
36 1
78 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
9

## state fluent hash keys (first line is the number of keys)
2
37 1
79 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
10

## state fluent hash keys (first line is the number of keys)
2
38 1
80 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
11

## state fluent hash keys (first line is the number of keys)
2
39 1
81 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
12

## state fluent hash keys (first line is the number of keys)
2
40 1
82 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
13

## state fluent hash keys (first line is the number of keys)
2
41 1
83 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
14

## state fluent hash keys (first line is the number of keys)
1
28 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
15

## state fluent hash keys (first line is the number of keys)
1
29 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
16

## state fluent hash keys (first line is the number of keys)
1
30 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
17

## state fluent hash keys (first line is the number of keys)
1
31 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
18

## state fluent hash keys (first line is the number of keys)
1
32 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
19

## state fluent hash keys (first line is the number of keys)
1
33 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
20

## state fluent hash keys (first line is the number of keys)
1
34 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
21

## state fluent hash keys (first line is the number of keys)
1
35 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
22

## state fluent hash keys (first line is the number of keys)
1
36 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
23

## state fluent hash keys (first line is the number of keys)
1
37 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
24

## state fluent hash keys (first line is the number of keys)
1
38 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
25

## state fluent hash keys (first line is the number of keys)
1
39 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
26

## state fluent hash keys (first line is the number of keys)
1
40 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
27

## state fluent hash keys (first line is the number of keys)
1
41 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
28

## state fluent hash keys (first line is the number of keys)
4
28 4
56 2
70 2
84 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
29

## state fluent hash keys (first line is the number of keys)
4
29 4
57 2
71 2
84 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
30

## state fluent hash keys (first line is the number of keys)
4
30 4
58 2
72 2
84 4
## kleene state fluent hash keys (first line is the number of keys)
0

## index
31

## state fluent hash keys (first line is the number of keys)
4
31 4
59 2
73 2
84 8
## kleene state fluent hash keys (first line is the number of keys)
0

## index
32

## state fluent hash keys (first line is the number of keys)
4
32 4
60 2
74 2
84 16
## kleene state fluent hash keys (first line is the number of keys)
0

## index
33

## state fluent hash keys (first line is the number of keys)
4
33 4
61 2
75 2
84 32
## kleene state fluent hash keys (first line is the number of keys)
0

## index
34

## state fluent hash keys (first line is the number of keys)
4
34 4
62 2
76 2
84 64
## kleene state fluent hash keys (first line is the number of keys)
0

## index
35

## state fluent hash keys (first line is the number of keys)
4
35 4
63 2
77 2
84 128
## kleene state fluent hash keys (first line is the number of keys)
0

## index
36

## state fluent hash keys (first line is the number of keys)
4
36 4
64 2
78 2
84 256
## kleene state fluent hash keys (first line is the number of keys)
0

## index
37

## state fluent hash keys (first line is the number of keys)
4
37 4
65 2
79 2
84 512
## kleene state fluent hash keys (first line is the number of keys)
0

## index
38

## state fluent hash keys (first line is the number of keys)
4
38 4
66 2
80 2
84 1024
## kleene state fluent hash keys (first line is the number of keys)
0

## index
39

## state fluent hash keys (first line is the number of keys)
4
39 4
67 2
81 2
84 2048
## kleene state fluent hash keys (first line is the number of keys)
0

## index
40

## state fluent hash keys (first line is the number of keys)
4
40 4
68 2
82 2
84 4096
## kleene state fluent hash keys (first line is the number of keys)
0

## index
41

## state fluent hash keys (first line is the number of keys)
4
41 4
69 2
83 2
84 8192
## kleene state fluent hash keys (first line is the number of keys)
0

## index
42

## state fluent hash keys (first line is the number of keys)
71
0 2
1 2
2 2
3 2
4 2
5 2
6 2
7 2
8 2
9 2
10 2
11 2
12 2
13 2
14 2
15 2
16 2
17 2
18 2
19 2
20 2
21 2
22 2
23 2
24 2
25 2
26 2
27 2
28 8
42 3
43 3
44 3
45 3
46 3
47 3
48 3
49 3
50 3
51 3
52 3
53 3
54 3
55 3
56 4
57 4
58 4
59 4
60 4
61 4
62 4
63 4
64 4
65 4
66 4
67 4
68 4
69 4
70 4
71 4
72 4
73 4
74 4
75 4
76 4
77 4
78 4
79 4
80 4
81 4
82 4
83 4
## kleene state fluent hash keys (first line is the number of keys)
0

## index
43

## state fluent hash keys (first line is the number of keys)
71
0 4
1 4
2 4
3 4
4 4
5 4
6 4
7 4
8 4
9 4
10 4
11 4
12 4
13 4
14 4
15 4
16 4
17 4
18 4
19 4
20 4
21 4
22 4
23 4
24 4
25 4
26 4
27 4
29 8
42 6
43 6
44 6
45 6
46 6
47 6
48 6
49 6
50 6
51 6
52 6
53 6
54 6
55 6
56 8
57 8
58 8
59 8
60 8
61 8
62 8
63 8
64 8
65 8
66 8
67 8
68 8
69 8
70 8
71 8
72 8
73 8
74 8
75 8
76 8
77 8
78 8
79 8
80 8
81 8
82 8
83 8
## kleene state fluent hash keys (first line is the number of keys)
0

## index
44

## state fluent hash keys (first line is the number of keys)
71
0 8
1 8
2 8
3 8
4 8
5 8
6 8
7 8
8 8
9 8
10 8
11 8
12 8
13 8
14 8
15 8
16 8
17 8
18 8
19 8
20 8
21 8
22 8
23 8
24 8
25 8
26 8
27 8
30 8
42 12
43 12
44 12
45 12
46 12
47 12
48 12
49 12
50 12
51 12
52 12
53 12
54 12
55 12
56 16
57 16
58 16
59 16
60 16
61 16
62 16
63 16
64 16
65 16
66 16
67 16
68 16
69 16
70 16
71 16
72 16
73 16
74 16
75 16
76 16
77 16
78 16
79 16
80 16
81 16
82 16
83 16
## kleene state fluent hash keys (first line is the number of keys)
0

## index
45

## state fluent hash keys (first line is the number of keys)
71
0 16
1 16
2 16
3 16
4 16
5 16
6 16
7 16
8 16
9 16
10 16
11 16
12 16
13 16
14 16
15 16
16 16
17 16
18 16
19 16
20 16
21 16
22 16
23 16
24 16
25 16
26 16
27 16
31 8
42 24
43 24
44 24
45 24
46 24
47 24
48 24
49 24
50 24
51 24
52 24
53 24
54 24
55 24
56 32
57 32
58 32
59 32
60 32
61 32
62 32
63 32
64 32
65 32
66 32
67 32
68 32
69 32
70 32
71 32
72 32
73 32
74 32
75 32
76 32
77 32
78 32
79 32
80 32
81 32
82 32
83 32
## kleene state fluent hash keys (first line is the number of keys)
0

## index
46

## state fluent hash keys (first line is the number of keys)
71
0 32
1 32
2 32
3 32
4 32
5 32
6 32
7 32
8 32
9 32
10 32
11 32
12 32
13 32
14 32
15 32
16 32
17 32
18 32
19 32
20 32
21 32
22 32
23 32
24 32
25 32
26 32
27 32
32 8
42 48
43 48
44 48
45 48
46 48
47 48
48 48
49 48
50 48
51 48
52 48
53 48
54 48
55 48
56 64
57 64
58 64
59 64
60 64
61 64
62 64
63 64
64 64
65 64
66 64
67 64
68 64
69 64
70 64
71 64
72 64
73 64
74 64
75 64
76 64
77 64
78 64
79 64
80 64
81 64
82 64
83 64
## kleene state fluent hash keys (first line is the number of keys)
0

## index
47

## state fluent hash keys (first line is the number of keys)
71
0 64
1 64
2 64
3 64
4 64
5 64
6 64
7 64
8 64
9 64
10 64
11 64
12 64
13 64
14 64
15 64
16 64
17 64
18 64
19 64
20 64
21 64
22 64
23 64
24 64
25 64
26 64
27 64
33 8
42 96
43 96
44 96
45 96
46 96
47 96
48 96
49 96
50 96
51 96
52 96
53 96
54 96
55 96
56 128
57 128
58 128
59 128
60 128
61 128
62 128
63 128
64 128
65 128
66 128
67 128
68 128
69 128
70 128
71 128
72 128
73 128
74 128
75 128
76 128
77 128
78 128
79 128
80 128
81 128
82 128
83 128
## kleene state fluent hash keys (first line is the number of keys)
0

## index
48

## state fluent hash keys (first line is the number of keys)
71
0 128
1 128
2 128
3 128
4 128
5 128
6 128
7 128
8 128
9 128
10 128
11 128
12 128
13 128
14 128
15 128
16 128
17 128
18 128
19 128
20 128
21 128
22 128
23 128
24 128
25 128
26 128
27 128
34 8
42 192
43 192
44 192
45 192
46 192
47 192
48 192
49 192
50 192
51 192
52 192
53 192
54 192
55 192
56 256
57 256
58 256
59 256
60 256
61 256
62 256
63 256
64 256
65 256
66 256
67 256
68 256
69 256
70 256
71 256
72 256
73 256
74 256
75 256
76 256
77 256
78 256
79 256
80 256
81 256
82 256
83 256
## kleene state fluent hash keys (first line is the number of keys)
0

## index
49

## state fluent hash keys (first line is the number of keys)
71
0 256
1 256
2 256
3 256
4 256
5 256
6 256
7 256
8 256
9 256
10 256
11 256
12 256
13 256
14 256
15 256
16 256
17 256
18 256
19 256
20 256
21 256
22 256
23 256
24 256
25 256
26 256
27 256
35 8
42 384
43 384
44 384
45 384
46 384
47 384
48 384
49 384
50 384
51 384
52 384
53 384
54 384
55 384
56 512
57 512
58 512
59 512
60 512
61 512
62 512
63 512
64 512
65 512
66 512
67 512
68 512
69 512
70 512
71 512
72 512
73 512
74 512
75 512
76 512
77 512
78 512
79 512
80 512
81 512
82 512
83 512
## kleene state fluent hash keys (first line is the number of keys)
0

## index
50

## state fluent hash keys (first line is the number of keys)
71
0 512
1 512
2 512
3 512
4 512
5 512
6 512
7 512
8 512
9 512
10 512
11 512
12 512
13 512
14 512
15 512
16 512
17 512
18 512
19 512
20 512
21 512
22 512
23 512
24 512
25 512
26 512
27 512
36 8
42 768
43 768
44 768
45 768
46 768
47 768
48 768
49 768
50 768
51 768
52 768
53 768
54 768
55 768
56 1024
57 1024
58 1024
59 1024
60 1024
61 1024
62 1024
63 1024
64 1024
65 1024
66 1024
67 1024
68 1024
69 1024
70 1024
71 1024
72 1024
73 1024
74 1024
75 1024
76 1024
77 1024
78 1024
79 1024
80 1024
81 1024
82 1024
83 1024
## kleene state fluent hash keys (first line is the number of keys)
0

## index
51

## state fluent hash keys (first line is the number of keys)
71
0 1024
1 1024
2 1024
3 1024
4 1024
5 1024
6 1024
7 1024
8 1024
9 1024
10 1024
11 1024
12 1024
13 1024
14 1024
15 1024
16 1024
17 1024
18 1024
19 1024
20 1024
21 1024
22 1024
23 1024
24 1024
25 1024
26 1024
27 1024
37 8
42 1536
43 1536
44 1536
45 1536
46 1536
47 1536
48 1536
49 1536
50 1536
51 1536
52 1536
53 1536
54 1536
55 1536
56 2048
57 2048
58 2048
59 2048
60 2048
61 2048
62 2048
63 2048
64 2048
65 2048
66 2048
67 2048
68 2048
69 2048
70 2048
71 2048
72 2048
73 2048
74 2048
75 2048
76 2048
77 2048
78 2048
79 2048
80 2048
81 2048
82 2048
83 2048
## kleene state fluent hash keys (first line is the number of keys)
0

## index
52

## state fluent hash keys (first line is the number of keys)
71
0 2048
1 2048
2 2048
3 2048
4 2048
5 2048
6 2048
7 2048
8 2048
9 2048
10 2048
11 2048
12 2048
13 2048
14 2048
15 2048
16 2048
17 2048
18 2048
19 2048
20 2048
21 2048
22 2048
23 2048
24 2048
25 2048
26 2048
27 2048
38 8
42 3072
43 3072
44 3072
45 3072
46 3072
47 3072
48 3072
49 3072
50 3072
51 3072
52 3072
53 3072
54 3072
55 3072
56 4096
57 4096
58 4096
59 4096
60 4096
61 4096
62 4096
63 4096
64 4096
65 4096
66 4096
67 4096
68 4096
69 4096
70 4096
71 4096
72 4096
73 4096
74 4096
75 4096
76 4096
77 4096
78 4096
79 4096
80 4096
81 4096
82 4096
83 4096
## kleene state fluent hash keys (first line is the number of keys)
0

## index
53

## state fluent hash keys (first line is the number of keys)
71
0 4096
1 4096
2 4096
3 4096
4 4096
5 4096
6 4096
7 4096
8 4096
9 4096
10 4096
11 4096
12 4096
13 4096
14 4096
15 4096
16 4096
17 4096
18 4096
19 4096
20 4096
21 4096
22 4096
23 4096
24 4096
25 4096
26 4096
27 4096
39 8
42 6144
43 6144
44 6144
45 6144
46 6144
47 6144
48 6144
49 6144
50 6144
51 6144
52 6144
53 6144
54 6144
55 6144
56 8192
57 8192
58 8192
59 8192
60 8192
61 8192
62 8192
63 8192
64 8192
65 8192
66 8192
67 8192
68 8192
69 8192
70 8192
71 8192
72 8192
73 8192
74 8192
75 8192
76 8192
77 8192
78 8192
79 8192
80 8192
81 8192
82 8192
83 8192
## kleene state fluent hash keys (first line is the number of keys)
0

## index
54

## state fluent hash keys (first line is the number of keys)
71
0 8192
1 8192
2 8192
3 8192
4 8192
5 8192
6 8192
7 8192
8 8192
9 8192
10 8192
11 8192
12 8192
13 8192
14 8192
15 8192
16 8192
17 8192
18 8192
19 8192
20 8192
21 8192
22 8192
23 8192
24 8192
25 8192
26 8192
27 8192
40 8
42 12288
43 12288
44 12288
45 12288
46 12288
47 12288
48 12288
49 12288
50 12288
51 12288
52 12288
53 12288
54 12288
55 12288
56 16384
57 16384
58 16384
59 16384
60 16384
61 16384
62 16384
63 16384
64 16384
65 16384
66 16384
67 16384
68 16384
69 16384
70 16384
71 16384
72 16384
73 16384
74 16384
75 16384
76 16384
77 16384
78 16384
79 16384
80 16384
81 16384
82 16384
83 16384
## kleene state fluent hash keys (first line is the number of keys)
0

## index
55

## state fluent hash keys (first line is the number of keys)
71
0 16384
1 16384
2 16384
3 16384
4 16384
5 16384
6 16384
7 16384
8 16384
9 16384
10 16384
11 16384
12 16384
13 16384
14 16384
15 16384
16 16384
17 16384
18 16384
19 16384
20 16384
21 16384
22 16384
23 16384
24 16384
25 16384
26 16384
27 16384
41 8
42 24576
43 24576
44 24576
45 24576
46 24576
47 24576
48 24576
49 24576
50 24576
51 24576
52 24576
53 24576
54 24576
55 24576
56 32768
57 32768
58 32768
59 32768
60 32768
61 32768
62 32768
63 32768
64 32768
65 32768
66 32768
67 32768
68 32768
69 32768
70 32768
71 32768
72 32768
73 32768
74 32768
75 32768
76 32768
77 32768
78 32768
79 32768
80 32768
81 32768
82 32768
83 32768
## kleene state fluent hash keys (first line is the number of keys)
0


#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0

## state fluent hash keys (first line is the number of keys)
2
28 16
70 65536
## kleene state fluent hash keys (first line is the number of keys)
2
18321408 81
70 43046721

## index
1

## state fluent hash keys (first line is the number of keys)
2
29 16
71 65536
## kleene state fluent hash keys (first line is the number of keys)
2
18351584 81
71 43046721

## index
2

## state fluent hash keys (first line is the number of keys)
2
30 16
72 65536
## kleene state fluent hash keys (first line is the number of keys)
2
18352288 81
72 43046721

## index
3

## state fluent hash keys (first line is the number of keys)
2
31 16
73 65536
## kleene state fluent hash keys (first line is the number of keys)
2
18352720 81
73 43046721

## index
4

## state fluent hash keys (first line is the number of keys)
2
32 16
74 65536
## kleene state fluent hash keys (first line is the number of keys)
2
18353152 81
74 43046721

## index
5

## state fluent hash keys (first line is the number of keys)
2
33 16
75 65536
## kleene state fluent hash keys (first line is the number of keys)
2
18353536 81
75 43046721

## index
6

## state fluent hash keys (first line is the number of keys)
2
34 16
76 65536
## kleene state fluent hash keys (first line is the number of keys)
2
18354080 81
76 43046721

## index
7

## state fluent hash keys (first line is the number of keys)
2
35 16
77 65536
## kleene state fluent hash keys (first line is the number of keys)
2
18354944 81
77 43046721

## index
8

## state fluent hash keys (first line is the number of keys)
2
36 16
78 65536
## kleene state fluent hash keys (first line is the number of keys)
2
18355920 81
78 43046721

## index
9

## state fluent hash keys (first line is the number of keys)
2
37 16
79 65536
## kleene state fluent hash keys (first line is the number of keys)
2
18357744 81
79 43046721

## index
10

## state fluent hash keys (first line is the number of keys)
2
38 16
80 65536
## kleene state fluent hash keys (first line is the number of keys)
2
18358800 81
80 43046721

## index
11

## state fluent hash keys (first line is the number of keys)
2
39 16
81 65536
## kleene state fluent hash keys (first line is the number of keys)
2
18359808 81
81 43046721

## index
12

## state fluent hash keys (first line is the number of keys)
2
40 16
82 65536
## kleene state fluent hash keys (first line is the number of keys)
2
18360768 81
82 43046721

## index
13

## state fluent hash keys (first line is the number of keys)
2
41 16
83 65536
## kleene state fluent hash keys (first line is the number of keys)
2
18361776 81
83 43046721

## index
14

## state fluent hash keys (first line is the number of keys)
16
20 32768
21 32768
22 32768
23 32768
25 32768
26 32768
28 32
56 65536
62 65536
63 65536
64 65536
65 65536
67 65536
68 65536
70 131072
84 16384
## kleene state fluent hash keys (first line is the number of keys)
16
18370880 16986128
21 9565938
22 9565938
23 9565938
25 9565938
26 9565938
28 243
56 28697814
62 28697814
63 28697814
64 28697814
65 28697814
67 28697814
68 28697814
70 129140163
84 4782969

## index
15

## state fluent hash keys (first line is the number of keys)
12
17 32768
20 65536
21 65536
22 65536
29 32
57 65536
59 65536
62 131072
63 131072
64 131072
71 131072
84 32768
## kleene state fluent hash keys (first line is the number of keys)
12
18282224 16986128
20 28697814
21 28697814
22 28697814
29 243
57 28697814
59 28697814
62 86093442
63 86093442
64 86093442
71 129140163
84 14348907

## index
16

## state fluent hash keys (first line is the number of keys)
4
30 32
58 65536
72 131072
84 65536
## kleene state fluent hash keys (first line is the number of keys)
4
17719392 243
58 28697814
72 129140163
84 43046721

## index
17

## state fluent hash keys (first line is the number of keys)
4
31 32
59 131072
73 131072
84 131072
## kleene state fluent hash keys (first line is the number of keys)
4
18365984 243
59 86093442
73 129140163
84 129140163

## index
18

## state fluent hash keys (first line is the number of keys)
6
19 32768
32 32
60 65536
61 65536
74 131072
84 262144
## kleene state fluent hash keys (first line is the number of keys)
6
18414736 16986128
32 243
60 28697814
61 28697814
74 129140163
84 387420489

## index
19

## state fluent hash keys (first line is the number of keys)
4
33 32
61 131072
75 131072
84 524288
## kleene state fluent hash keys (first line is the number of keys)
4
18367120 243
61 86093442
75 129140163
84 1162261467

## index
20

## state fluent hash keys (first line is the number of keys)
10
22 131072
23 65536
25 65536
34 32
62 262144
64 262144
65 131072
67 131072
76 131072
84 1048576
## kleene state fluent hash keys (first line is the number of keys)
10
18355984 16986128
23 28697814
25 28697814
34 243
62 258280326
64 258280326
65 86093442
67 86093442
76 129140163
84 3486784401

## index
21

## state fluent hash keys (first line is the number of keys)
14
17 65536
18 32768
24 32768
26 65536
27 32768
35 32
59 262144
60 131072
63 262144
66 65536
68 131072
69 65536
77 131072
84 2097152
## kleene state fluent hash keys (first line is the number of keys)
14
18370240 16986128
18 9565938
24 9565938
26 28697814
27 9565938
35 243
59 258280326
60 86093442
63 258280326
66 28697814
68 86093442
69 28697814
77 129140163
84 10460353203

## index
22

## state fluent hash keys (first line is the number of keys)
4
36 32
64 524288
78 131072
84 4194304
## kleene state fluent hash keys (first line is the number of keys)
4
18369120 243
64 774840978
78 129140163
84 31381059609

## index
23

## state fluent hash keys (first line is the number of keys)
4
37 32
65 262144
79 131072
84 8388608
## kleene state fluent hash keys (first line is the number of keys)
4
18344352 243
65 258280326
79 129140163
84 94143178827

## index
24

## state fluent hash keys (first line is the number of keys)
6
16 32768
38 32
58 131072
66 131072
80 131072
84 16777216
## kleene state fluent hash keys (first line is the number of keys)
6
18306992 16986128
38 243
58 86093442
66 86093442
80 129140163
84 282429536481

## index
25

## state fluent hash keys (first line is the number of keys)
6
19 65536
39 32
61 262144
67 262144
81 131072
84 33554432
## kleene state fluent hash keys (first line is the number of keys)
6
18274928 16986128
39 243
61 258280326
67 258280326
81 129140163
84 847288609443

## index
26

## state fluent hash keys (first line is the number of keys)
4
40 32
68 262144
82 131072
84 67108864
## kleene state fluent hash keys (first line is the number of keys)
4
18345488 243
68 258280326
82 129140163
84 2541865828329

## index
27

## state fluent hash keys (first line is the number of keys)
6
17 131072
41 32
59 524288
69 131072
83 131072
84 134217728
## kleene state fluent hash keys (first line is the number of keys)
6
18306144 16986128
41 243
59 774840978
69 86093442
83 129140163
84 7625597484987

