#####TASK##### Here
## name
game_of_life_inst_mdp__12
## horizon
100
## discount factor
1
## number of action fluents
49
## number of det state fluents
0
## number of prob state fluents
49
## number of preconds
0
## number of actions
50
## number of hashing functions
50
## initial state
0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
## 1 if task is deterministic
0
## 1 if state hashing possible
1
## 1 if kleene state hashing possible
0


#####ACTION FLUENTS#####
## index
0
## name
set(x1, y1)
## number of values
2
## values
0 false
1 true

## index
1
## name
set(x1, y2)
## number of values
2
## values
0 false
1 true

## index
2
## name
set(x1, y3)
## number of values
2
## values
0 false
1 true

## index
3
## name
set(x1, y4)
## number of values
2
## values
0 false
1 true

## index
4
## name
set(x1, y5)
## number of values
2
## values
0 false
1 true

## index
5
## name
set(x1, y6)
## number of values
2
## values
0 false
1 true

## index
6
## name
set(x1, y7)
## number of values
2
## values
0 false
1 true

## index
7
## name
set(x2, y1)
## number of values
2
## values
0 false
1 true

## index
8
## name
set(x2, y2)
## number of values
2
## values
0 false
1 true

## index
9
## name
set(x2, y3)
## number of values
2
## values
0 false
1 true

## index
10
## name
set(x2, y4)
## number of values
2
## values
0 false
1 true

## index
11
## name
set(x2, y5)
## number of values
2
## values
0 false
1 true

## index
12
## name
set(x2, y6)
## number of values
2
## values
0 false
1 true

## index
13
## name
set(x2, y7)
## number of values
2
## values
0 false
1 true

## index
14
## name
set(x3, y1)
## number of values
2
## values
0 false
1 true

## index
15
## name
set(x3, y2)
## number of values
2
## values
0 false
1 true

## index
16
## name
set(x3, y3)
## number of values
2
## values
0 false
1 true

## index
17
## name
set(x3, y4)
## number of values
2
## values
0 false
1 true

## index
18
## name
set(x3, y5)
## number of values
2
## values
0 false
1 true

## index
19
## name
set(x3, y6)
## number of values
2
## values
0 false
1 true

## index
20
## name
set(x3, y7)
## number of values
2
## values
0 false
1 true

## index
21
## name
set(x4, y1)
## number of values
2
## values
0 false
1 true

## index
22
## name
set(x4, y2)
## number of values
2
## values
0 false
1 true

## index
23
## name
set(x4, y3)
## number of values
2
## values
0 false
1 true

## index
24
## name
set(x4, y4)
## number of values
2
## values
0 false
1 true

## index
25
## name
set(x4, y5)
## number of values
2
## values
0 false
1 true

## index
26
## name
set(x4, y6)
## number of values
2
## values
0 false
1 true

## index
27
## name
set(x4, y7)
## number of values
2
## values
0 false
1 true

## index
28
## name
set(x5, y1)
## number of values
2
## values
0 false
1 true

## index
29
## name
set(x5, y2)
## number of values
2
## values
0 false
1 true

## index
30
## name
set(x5, y3)
## number of values
2
## values
0 false
1 true

## index
31
## name
set(x5, y4)
## number of values
2
## values
0 false
1 true

## index
32
## name
set(x5, y5)
## number of values
2
## values
0 false
1 true

## index
33
## name
set(x5, y6)
## number of values
2
## values
0 false
1 true

## index
34
## name
set(x5, y7)
## number of values
2
## values
0 false
1 true

## index
35
## name
set(x6, y1)
## number of values
2
## values
0 false
1 true

## index
36
## name
set(x6, y2)
## number of values
2
## values
0 false
1 true

## index
37
## name
set(x6, y3)
## number of values
2
## values
0 false
1 true

## index
38
## name
set(x6, y4)
## number of values
2
## values
0 false
1 true

## index
39
## name
set(x6, y5)
## number of values
2
## values
0 false
1 true

## index
40
## name
set(x6, y6)
## number of values
2
## values
0 false
1 true

## index
41
## name
set(x6, y7)
## number of values
2
## values
0 false
1 true

## index
42
## name
set(x7, y1)
## number of values
2
## values
0 false
1 true

## index
43
## name
set(x7, y2)
## number of values
2
## values
0 false
1 true

## index
44
## name
set(x7, y3)
## number of values
2
## values
0 false
1 true

## index
45
## name
set(x7, y4)
## number of values
2
## values
0 false
1 true

## index
46
## name
set(x7, y5)
## number of values
2
## values
0 false
1 true

## index
47
## name
set(x7, y6)
## number of values
2
## values
0 false
1 true

## index
48
## name
set(x7, y7)
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####


#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
alive(x1, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(0) >=(+($s(1) $s(7) $s(8)) $c(2)) <=(+($s(1) $s(7) $s(8)) $c(3))) and(~($s(0)) ==(+($s(1) $s(7) $s(8)) $c(3))) $a(0)) : Bernoulli($c(0.96455691))) ($c(1) : Bernoulli($c(0.03544309))) )
## hash index
0
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 1

## index
1
## name
alive(x1, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(1) >=(+($s(0) $s(2) $s(7) $s(8) $s(9)) $c(2)) <=(+($s(0) $s(2) $s(7) $s(8) $s(9)) $c(3))) and(~($s(1)) ==(+($s(0) $s(2) $s(7) $s(8) $s(9)) $c(3))) $a(1)) : Bernoulli($c(0.93369032))) ($c(1) : Bernoulli($c(0.06630968))) )
## hash index
1
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 1
49 0

## index
2
## name
alive(x1, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(2) >=(+($s(1) $s(3) $s(8) $s(9) $s(10)) $c(2)) <=(+($s(1) $s(3) $s(8) $s(9) $s(10)) $c(3))) and(~($s(2)) ==(+($s(1) $s(3) $s(8) $s(9) $s(10)) $c(3))) $a(2)) : Bernoulli($c(0.948176555))) ($c(1) : Bernoulli($c(0.051823445))) )
## hash index
2
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 1
48 0
49 0

## index
3
## name
alive(x1, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(3) >=(+($s(2) $s(4) $s(9) $s(10) $s(11)) $c(2)) <=(+($s(2) $s(4) $s(9) $s(10) $s(11)) $c(3))) and(~($s(3)) ==(+($s(2) $s(4) $s(9) $s(10) $s(11)) $c(3))) $a(3)) : Bernoulli($c(0.95674997))) ($c(1) : Bernoulli($c(0.04325003))) )
## hash index
3
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 1
47 0
48 0
49 0

## index
4
## name
alive(x1, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(4) >=(+($s(3) $s(5) $s(10) $s(11) $s(12)) $c(2)) <=(+($s(3) $s(5) $s(10) $s(11) $s(12)) $c(3))) and(~($s(4)) ==(+($s(3) $s(5) $s(10) $s(11) $s(12)) $c(3))) $a(4)) : Bernoulli($c(0.938170243))) ($c(1) : Bernoulli($c(0.061829757))) )
## hash index
4
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 1
46 0
47 0
48 0
49 0

## index
5
## name
alive(x1, y6)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(5) >=(+($s(4) $s(6) $s(11) $s(12) $s(13)) $c(2)) <=(+($s(4) $s(6) $s(11) $s(12) $s(13)) $c(3))) and(~($s(5)) ==(+($s(4) $s(6) $s(11) $s(12) $s(13)) $c(3))) $a(5)) : Bernoulli($c(0.915523544))) ($c(1) : Bernoulli($c(0.084476456))) )
## hash index
5
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 1
45 0
46 0
47 0
48 0
49 0

## index
6
## name
alive(x1, y7)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(6) >=(+($s(5) $s(12) $s(13)) $c(2)) <=(+($s(5) $s(12) $s(13)) $c(3))) and(~($s(6)) ==(+($s(5) $s(12) $s(13)) $c(3))) $a(6)) : Bernoulli($c(0.96597021))) ($c(1) : Bernoulli($c(0.03402979))) )
## hash index
6
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 1
44 0
45 0
46 0
47 0
48 0
49 0

## index
7
## name
alive(x2, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(7) >=(+($s(0) $s(1) $s(8) $s(14) $s(15)) $c(2)) <=(+($s(0) $s(1) $s(8) $s(14) $s(15)) $c(3))) and(~($s(7)) ==(+($s(0) $s(1) $s(8) $s(14) $s(15)) $c(3))) $a(7)) : Bernoulli($c(0.932355985))) ($c(1) : Bernoulli($c(0.067644015))) )
## hash index
7
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 1
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
8
## name
alive(x2, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(8) >=(+($s(0) $s(1) $s(2) $s(7) $s(9) $s(14) $s(15) $s(16)) $c(2)) <=(+($s(0) $s(1) $s(2) $s(7) $s(9) $s(14) $s(15) $s(16)) $c(3))) and(~($s(8)) ==(+($s(0) $s(1) $s(2) $s(7) $s(9) $s(14) $s(15) $s(16)) $c(3))) $a(8)) : Bernoulli($c(0.929303))) ($c(1) : Bernoulli($c(0.070697))) )
## hash index
8
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 1
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
9
## name
alive(x2, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(9) >=(+($s(1) $s(2) $s(3) $s(8) $s(10) $s(15) $s(16) $s(17)) $c(2)) <=(+($s(1) $s(2) $s(3) $s(8) $s(10) $s(15) $s(16) $s(17)) $c(3))) and(~($s(9)) ==(+($s(1) $s(2) $s(3) $s(8) $s(10) $s(15) $s(16) $s(17)) $c(3))) $a(9)) : Bernoulli($c(0.957241498))) ($c(1) : Bernoulli($c(0.042758502))) )
## hash index
9
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 1
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
10
## name
alive(x2, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(10) >=(+($s(2) $s(3) $s(4) $s(9) $s(11) $s(16) $s(17) $s(18)) $c(2)) <=(+($s(2) $s(3) $s(4) $s(9) $s(11) $s(16) $s(17) $s(18)) $c(3))) and(~($s(10)) ==(+($s(2) $s(3) $s(4) $s(9) $s(11) $s(16) $s(17) $s(18)) $c(3))) $a(10)) : Bernoulli($c(0.925225005))) ($c(1) : Bernoulli($c(0.074774995))) )
## hash index
10
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 1
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
11
## name
alive(x2, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(11) >=(+($s(3) $s(4) $s(5) $s(10) $s(12) $s(17) $s(18) $s(19)) $c(2)) <=(+($s(3) $s(4) $s(5) $s(10) $s(12) $s(17) $s(18) $s(19)) $c(3))) and(~($s(11)) ==(+($s(3) $s(4) $s(5) $s(10) $s(12) $s(17) $s(18) $s(19)) $c(3))) $a(11)) : Bernoulli($c(0.91408254))) ($c(1) : Bernoulli($c(0.08591746))) )
## hash index
11
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 1
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
12
## name
alive(x2, y6)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(12) >=(+($s(4) $s(5) $s(6) $s(11) $s(13) $s(18) $s(19) $s(20)) $c(2)) <=(+($s(4) $s(5) $s(6) $s(11) $s(13) $s(18) $s(19) $s(20)) $c(3))) and(~($s(12)) ==(+($s(4) $s(5) $s(6) $s(11) $s(13) $s(18) $s(19) $s(20)) $c(3))) $a(12)) : Bernoulli($c(0.978574818))) ($c(1) : Bernoulli($c(0.021425182))) )
## hash index
12
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 1
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
13
## name
alive(x2, y7)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(13) >=(+($s(5) $s(6) $s(12) $s(19) $s(20)) $c(2)) <=(+($s(5) $s(6) $s(12) $s(19) $s(20)) $c(3))) and(~($s(13)) ==(+($s(5) $s(6) $s(12) $s(19) $s(20)) $c(3))) $a(13)) : Bernoulli($c(0.92243408))) ($c(1) : Bernoulli($c(0.07756592))) )
## hash index
13
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 1
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
14
## name
alive(x3, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(14) >=(+($s(7) $s(8) $s(15) $s(21) $s(22)) $c(2)) <=(+($s(7) $s(8) $s(15) $s(21) $s(22)) $c(3))) and(~($s(14)) ==(+($s(7) $s(8) $s(15) $s(21) $s(22)) $c(3))) $a(14)) : Bernoulli($c(0.958575625))) ($c(1) : Bernoulli($c(0.041424375))) )
## hash index
14
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 1
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
15
## name
alive(x3, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(15) >=(+($s(7) $s(8) $s(9) $s(14) $s(16) $s(21) $s(22) $s(23)) $c(2)) <=(+($s(7) $s(8) $s(9) $s(14) $s(16) $s(21) $s(22) $s(23)) $c(3))) and(~($s(15)) ==(+($s(7) $s(8) $s(9) $s(14) $s(16) $s(21) $s(22) $s(23)) $c(3))) $a(15)) : Bernoulli($c(0.977188362))) ($c(1) : Bernoulli($c(0.022811638))) )
## hash index
15
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 1
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
16
## name
alive(x3, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(16) >=(+($s(8) $s(9) $s(10) $s(15) $s(17) $s(22) $s(23) $s(24)) $c(2)) <=(+($s(8) $s(9) $s(10) $s(15) $s(17) $s(22) $s(23) $s(24)) $c(3))) and(~($s(16)) ==(+($s(8) $s(9) $s(10) $s(15) $s(17) $s(22) $s(23) $s(24)) $c(3))) $a(16)) : Bernoulli($c(0.91053575))) ($c(1) : Bernoulli($c(0.08946425))) )
## hash index
16
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 1
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
17
## name
alive(x3, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(17) >=(+($s(9) $s(10) $s(11) $s(16) $s(18) $s(23) $s(24) $s(25)) $c(2)) <=(+($s(9) $s(10) $s(11) $s(16) $s(18) $s(23) $s(24) $s(25)) $c(3))) and(~($s(17)) ==(+($s(9) $s(10) $s(11) $s(16) $s(18) $s(23) $s(24) $s(25)) $c(3))) $a(17)) : Bernoulli($c(0.95176273))) ($c(1) : Bernoulli($c(0.04823727))) )
## hash index
17
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 1
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
18
## name
alive(x3, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(18) >=(+($s(10) $s(11) $s(12) $s(17) $s(19) $s(24) $s(25) $s(26)) $c(2)) <=(+($s(10) $s(11) $s(12) $s(17) $s(19) $s(24) $s(25) $s(26)) $c(3))) and(~($s(18)) ==(+($s(10) $s(11) $s(12) $s(17) $s(19) $s(24) $s(25) $s(26)) $c(3))) $a(18)) : Bernoulli($c(0.92021611))) ($c(1) : Bernoulli($c(0.07978389))) )
## hash index
18
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 1
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
19
## name
alive(x3, y6)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(19) >=(+($s(11) $s(12) $s(13) $s(18) $s(20) $s(25) $s(26) $s(27)) $c(2)) <=(+($s(11) $s(12) $s(13) $s(18) $s(20) $s(25) $s(26) $s(27)) $c(3))) and(~($s(19)) ==(+($s(11) $s(12) $s(13) $s(18) $s(20) $s(25) $s(26) $s(27)) $c(3))) $a(19)) : Bernoulli($c(0.970405113))) ($c(1) : Bernoulli($c(0.029594887))) )
## hash index
19
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
20
## name
alive(x3, y7)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(20) >=(+($s(12) $s(13) $s(19) $s(26) $s(27)) $c(2)) <=(+($s(12) $s(13) $s(19) $s(26) $s(27)) $c(3))) and(~($s(20)) ==(+($s(12) $s(13) $s(19) $s(26) $s(27)) $c(3))) $a(20)) : Bernoulli($c(0.95927765))) ($c(1) : Bernoulli($c(0.04072235))) )
## hash index
20
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 1
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
21
## name
alive(x4, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(21) >=(+($s(14) $s(15) $s(22) $s(28) $s(29)) $c(2)) <=(+($s(14) $s(15) $s(22) $s(28) $s(29)) $c(3))) and(~($s(21)) ==(+($s(14) $s(15) $s(22) $s(28) $s(29)) $c(3))) $a(21)) : Bernoulli($c(0.93248296))) ($c(1) : Bernoulli($c(0.06751704))) )
## hash index
21
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 1
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
22
## name
alive(x4, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(22) >=(+($s(14) $s(15) $s(16) $s(21) $s(23) $s(28) $s(29) $s(30)) $c(2)) <=(+($s(14) $s(15) $s(16) $s(21) $s(23) $s(28) $s(29) $s(30)) $c(3))) and(~($s(22)) ==(+($s(14) $s(15) $s(16) $s(21) $s(23) $s(28) $s(29) $s(30)) $c(3))) $a(22)) : Bernoulli($c(0.952768452))) ($c(1) : Bernoulli($c(0.047231548))) )
## hash index
22
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 1
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
23
## name
alive(x4, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(23) >=(+($s(15) $s(16) $s(17) $s(22) $s(24) $s(29) $s(30) $s(31)) $c(2)) <=(+($s(15) $s(16) $s(17) $s(22) $s(24) $s(29) $s(30) $s(31)) $c(3))) and(~($s(23)) ==(+($s(15) $s(16) $s(17) $s(22) $s(24) $s(29) $s(30) $s(31)) $c(3))) $a(23)) : Bernoulli($c(0.91940072))) ($c(1) : Bernoulli($c(0.08059928))) )
## hash index
23
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 1
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
24
## name
alive(x4, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(24) >=(+($s(16) $s(17) $s(18) $s(23) $s(25) $s(30) $s(31) $s(32)) $c(2)) <=(+($s(16) $s(17) $s(18) $s(23) $s(25) $s(30) $s(31) $s(32)) $c(3))) and(~($s(24)) ==(+($s(16) $s(17) $s(18) $s(23) $s(25) $s(30) $s(31) $s(32)) $c(3))) $a(24)) : Bernoulli($c(0.968155887))) ($c(1) : Bernoulli($c(0.031844113))) )
## hash index
24
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 1
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
25
## name
alive(x4, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(25) >=(+($s(17) $s(18) $s(19) $s(24) $s(26) $s(31) $s(32) $s(33)) $c(2)) <=(+($s(17) $s(18) $s(19) $s(24) $s(26) $s(31) $s(32) $s(33)) $c(3))) and(~($s(25)) ==(+($s(17) $s(18) $s(19) $s(24) $s(26) $s(31) $s(32) $s(33)) $c(3))) $a(25)) : Bernoulli($c(0.93951124))) ($c(1) : Bernoulli($c(0.06048876))) )
## hash index
25
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 1
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
26
## name
alive(x4, y6)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(26) >=(+($s(18) $s(19) $s(20) $s(25) $s(27) $s(32) $s(33) $s(34)) $c(2)) <=(+($s(18) $s(19) $s(20) $s(25) $s(27) $s(32) $s(33) $s(34)) $c(3))) and(~($s(26)) ==(+($s(18) $s(19) $s(20) $s(25) $s(27) $s(32) $s(33) $s(34)) $c(3))) $a(26)) : Bernoulli($c(0.917083144))) ($c(1) : Bernoulli($c(0.082916856))) )
## hash index
26
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 1
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
27
## name
alive(x4, y7)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(27) >=(+($s(19) $s(20) $s(26) $s(33) $s(34)) $c(2)) <=(+($s(19) $s(20) $s(26) $s(33) $s(34)) $c(3))) and(~($s(27)) ==(+($s(19) $s(20) $s(26) $s(33) $s(34)) $c(3))) $a(27)) : Bernoulli($c(0.965673596))) ($c(1) : Bernoulli($c(0.034326404))) )
## hash index
27
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 1
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
28
## name
alive(x5, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(28) >=(+($s(21) $s(22) $s(29) $s(35) $s(36)) $c(2)) <=(+($s(21) $s(22) $s(29) $s(35) $s(36)) $c(3))) and(~($s(28)) ==(+($s(21) $s(22) $s(29) $s(35) $s(36)) $c(3))) $a(28)) : Bernoulli($c(0.979477376))) ($c(1) : Bernoulli($c(0.020522624))) )
## hash index
28
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
29
## name
alive(x5, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(29) >=(+($s(21) $s(22) $s(23) $s(28) $s(30) $s(35) $s(36) $s(37)) $c(2)) <=(+($s(21) $s(22) $s(23) $s(28) $s(30) $s(35) $s(36) $s(37)) $c(3))) and(~($s(29)) ==(+($s(21) $s(22) $s(23) $s(28) $s(30) $s(35) $s(36) $s(37)) $c(3))) $a(29)) : Bernoulli($c(0.95707398))) ($c(1) : Bernoulli($c(0.04292602))) )
## hash index
29
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
30
## name
alive(x5, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(30) >=(+($s(22) $s(23) $s(24) $s(29) $s(31) $s(36) $s(37) $s(38)) $c(2)) <=(+($s(22) $s(23) $s(24) $s(29) $s(31) $s(36) $s(37) $s(38)) $c(3))) and(~($s(30)) ==(+($s(22) $s(23) $s(24) $s(29) $s(31) $s(36) $s(37) $s(38)) $c(3))) $a(30)) : Bernoulli($c(0.93519904))) ($c(1) : Bernoulli($c(0.06480096))) )
## hash index
30
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 1
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
31
## name
alive(x5, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(31) >=(+($s(23) $s(24) $s(25) $s(30) $s(32) $s(37) $s(38) $s(39)) $c(2)) <=(+($s(23) $s(24) $s(25) $s(30) $s(32) $s(37) $s(38) $s(39)) $c(3))) and(~($s(31)) ==(+($s(23) $s(24) $s(25) $s(30) $s(32) $s(37) $s(38) $s(39)) $c(3))) $a(31)) : Bernoulli($c(0.92139189))) ($c(1) : Bernoulli($c(0.07860811))) )
## hash index
31
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 1
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
32
## name
alive(x5, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(32) >=(+($s(24) $s(25) $s(26) $s(31) $s(33) $s(38) $s(39) $s(40)) $c(2)) <=(+($s(24) $s(25) $s(26) $s(31) $s(33) $s(38) $s(39) $s(40)) $c(3))) and(~($s(32)) ==(+($s(24) $s(25) $s(26) $s(31) $s(33) $s(38) $s(39) $s(40)) $c(3))) $a(32)) : Bernoulli($c(0.96425128))) ($c(1) : Bernoulli($c(0.03574872))) )
## hash index
32
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 1
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
33
## name
alive(x5, y6)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(33) >=(+($s(25) $s(26) $s(27) $s(32) $s(34) $s(39) $s(40) $s(41)) $c(2)) <=(+($s(25) $s(26) $s(27) $s(32) $s(34) $s(39) $s(40) $s(41)) $c(3))) and(~($s(33)) ==(+($s(25) $s(26) $s(27) $s(32) $s(34) $s(39) $s(40) $s(41)) $c(3))) $a(33)) : Bernoulli($c(0.91621734))) ($c(1) : Bernoulli($c(0.08378266))) )
## hash index
33
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 1
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
34
## name
alive(x5, y7)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(34) >=(+($s(26) $s(27) $s(33) $s(40) $s(41)) $c(2)) <=(+($s(26) $s(27) $s(33) $s(40) $s(41)) $c(3))) and(~($s(34)) ==(+($s(26) $s(27) $s(33) $s(40) $s(41)) $c(3))) $a(34)) : Bernoulli($c(0.979130128))) ($c(1) : Bernoulli($c(0.020869872))) )
## hash index
34
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 1
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
35
## name
alive(x6, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(35) >=(+($s(28) $s(29) $s(36) $s(42) $s(43)) $c(2)) <=(+($s(28) $s(29) $s(36) $s(42) $s(43)) $c(3))) and(~($s(35)) ==(+($s(28) $s(29) $s(36) $s(42) $s(43)) $c(3))) $a(35)) : Bernoulli($c(0.91305162))) ($c(1) : Bernoulli($c(0.08694838))) )
## hash index
35
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
36
## name
alive(x6, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(36) >=(+($s(28) $s(29) $s(30) $s(35) $s(37) $s(42) $s(43) $s(44)) $c(2)) <=(+($s(28) $s(29) $s(30) $s(35) $s(37) $s(42) $s(43) $s(44)) $c(3))) and(~($s(36)) ==(+($s(28) $s(29) $s(30) $s(35) $s(37) $s(42) $s(43) $s(44)) $c(3))) $a(36)) : Bernoulli($c(0.966922037))) ($c(1) : Bernoulli($c(0.033077963))) )
## hash index
36
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 1
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
37
## name
alive(x6, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(37) >=(+($s(29) $s(30) $s(31) $s(36) $s(38) $s(43) $s(44) $s(45)) $c(2)) <=(+($s(29) $s(30) $s(31) $s(36) $s(38) $s(43) $s(44) $s(45)) $c(3))) and(~($s(37)) ==(+($s(29) $s(30) $s(31) $s(36) $s(38) $s(43) $s(44) $s(45)) $c(3))) $a(37)) : Bernoulli($c(0.971536739))) ($c(1) : Bernoulli($c(0.028463261))) )
## hash index
37
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 1
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
38
## name
alive(x6, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(38) >=(+($s(30) $s(31) $s(32) $s(37) $s(39) $s(44) $s(45) $s(46)) $c(2)) <=(+($s(30) $s(31) $s(32) $s(37) $s(39) $s(44) $s(45) $s(46)) $c(3))) and(~($s(38)) ==(+($s(30) $s(31) $s(32) $s(37) $s(39) $s(44) $s(45) $s(46)) $c(3))) $a(38)) : Bernoulli($c(0.940725446))) ($c(1) : Bernoulli($c(0.059274554))) )
## hash index
38
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 1
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
39
## name
alive(x6, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(39) >=(+($s(31) $s(32) $s(33) $s(38) $s(40) $s(45) $s(46) $s(47)) $c(2)) <=(+($s(31) $s(32) $s(33) $s(38) $s(40) $s(45) $s(46) $s(47)) $c(3))) and(~($s(39)) ==(+($s(31) $s(32) $s(33) $s(38) $s(40) $s(45) $s(46) $s(47)) $c(3))) $a(39)) : Bernoulli($c(0.92009305))) ($c(1) : Bernoulli($c(0.07990695))) )
## hash index
39
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
40
## name
alive(x6, y6)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(40) >=(+($s(32) $s(33) $s(34) $s(39) $s(41) $s(46) $s(47) $s(48)) $c(2)) <=(+($s(32) $s(33) $s(34) $s(39) $s(41) $s(46) $s(47) $s(48)) $c(3))) and(~($s(40)) ==(+($s(32) $s(33) $s(34) $s(39) $s(41) $s(46) $s(47) $s(48)) $c(3))) $a(40)) : Bernoulli($c(0.92080872))) ($c(1) : Bernoulli($c(0.07919128))) )
## hash index
40
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
41
## name
alive(x6, y7)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(41) >=(+($s(33) $s(34) $s(40) $s(47) $s(48)) $c(2)) <=(+($s(33) $s(34) $s(40) $s(47) $s(48)) $c(3))) and(~($s(41)) ==(+($s(33) $s(34) $s(40) $s(47) $s(48)) $c(3))) $a(41)) : Bernoulli($c(0.974046146))) ($c(1) : Bernoulli($c(0.025953854))) )
## hash index
41
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
42
## name
alive(x7, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(42) >=(+($s(35) $s(36) $s(43)) $c(2)) <=(+($s(35) $s(36) $s(43)) $c(3))) and(~($s(42)) ==(+($s(35) $s(36) $s(43)) $c(3))) $a(42)) : Bernoulli($c(0.96260462))) ($c(1) : Bernoulli($c(0.03739538))) )
## hash index
42
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
43
## name
alive(x7, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(43) >=(+($s(35) $s(36) $s(37) $s(42) $s(44)) $c(2)) <=(+($s(35) $s(36) $s(37) $s(42) $s(44)) $c(3))) and(~($s(43)) ==(+($s(35) $s(36) $s(37) $s(42) $s(44)) $c(3))) $a(43)) : Bernoulli($c(0.956257984))) ($c(1) : Bernoulli($c(0.043742016))) )
## hash index
43
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
44
## name
alive(x7, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(44) >=(+($s(36) $s(37) $s(38) $s(43) $s(45)) $c(2)) <=(+($s(36) $s(37) $s(38) $s(43) $s(45)) $c(3))) and(~($s(44)) ==(+($s(36) $s(37) $s(38) $s(43) $s(45)) $c(3))) $a(44)) : Bernoulli($c(0.966068618))) ($c(1) : Bernoulli($c(0.033931382))) )
## hash index
44
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
45
## name
alive(x7, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(45) >=(+($s(37) $s(38) $s(39) $s(44) $s(46)) $c(2)) <=(+($s(37) $s(38) $s(39) $s(44) $s(46)) $c(3))) and(~($s(45)) ==(+($s(37) $s(38) $s(39) $s(44) $s(46)) $c(3))) $a(45)) : Bernoulli($c(0.965574965))) ($c(1) : Bernoulli($c(0.034425035))) )
## hash index
45
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
46
## name
alive(x7, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(46) >=(+($s(38) $s(39) $s(40) $s(45) $s(47)) $c(2)) <=(+($s(38) $s(39) $s(40) $s(45) $s(47)) $c(3))) and(~($s(46)) ==(+($s(38) $s(39) $s(40) $s(45) $s(47)) $c(3))) $a(46)) : Bernoulli($c(0.979303723))) ($c(1) : Bernoulli($c(0.020696277))) )
## hash index
46
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
47
## name
alive(x7, y6)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(47) >=(+($s(39) $s(40) $s(41) $s(46) $s(48)) $c(2)) <=(+($s(39) $s(40) $s(41) $s(46) $s(48)) $c(3))) and(~($s(47)) ==(+($s(39) $s(40) $s(41) $s(46) $s(48)) $c(3))) $a(47)) : Bernoulli($c(0.955992263))) ($c(1) : Bernoulli($c(0.044007737))) )
## hash index
47
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0

## index
48
## name
alive(x7, y7)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(48) >=(+($s(40) $s(41) $s(47)) $c(2)) <=(+($s(40) $s(41) $s(47)) $c(3))) and(~($s(48)) ==(+($s(40) $s(41) $s(47)) $c(3))) $a(48)) : Bernoulli($c(0.979097584))) ($c(1) : Bernoulli($c(0.020902416))) )
## hash index
48
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0
37 0
38 0
39 0
40 0
41 0
42 0
43 0
44 0
45 0
46 0
47 0
48 0
49 0



#####REWARD#####
## formula
+(-($s(0) $a(0)) -($s(1) $a(1)) -($s(2) $a(2)) -($s(3) $a(3)) -($s(4) $a(4)) -($s(5) $a(5)) -($s(6) $a(6)) -($s(7) $a(7)) -($s(8) $a(8)) -($s(9) $a(9)) -($s(10) $a(10)) -($s(11) $a(11)) -($s(12) $a(12)) -($s(13) $a(13)) -($s(14) $a(14)) -($s(15) $a(15)) -($s(16) $a(16)) -($s(17) $a(17)) -($s(18) $a(18)) -($s(19) $a(19)) -($s(20) $a(20)) -($s(21) $a(21)) -($s(22) $a(22)) -($s(23) $a(23)) -($s(24) $a(24)) -($s(25) $a(25)) -($s(26) $a(26)) -($s(27) $a(27)) -($s(28) $a(28)) -($s(29) $a(29)) -($s(30) $a(30)) -($s(31) $a(31)) -($s(32) $a(32)) -($s(33) $a(33)) -($s(34) $a(34)) -($s(35) $a(35)) -($s(36) $a(36)) -($s(37) $a(37)) -($s(38) $a(38)) -($s(39) $a(39)) -($s(40) $a(40)) -($s(41) $a(41)) -($s(42) $a(42)) -($s(43) $a(43)) -($s(44) $a(44)) -($s(45) $a(45)) -($s(46) $a(46)) -($s(47) $a(47)) -($s(48) $a(48)))
## min
-1
## max
49
## independent from actions
0
## hash index
49
## caching type
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4
5 5
6 6
7 7
8 8
9 9
10 10
11 11
12 12
13 13
14 14
15 15
16 16
17 17
18 18
19 19
20 20
21 21
22 22
23 23
24 24
25 25
26 26
27 27
28 28
29 29
30 30
31 31
32 32
33 33
34 34
35 35
36 36
37 37
38 38
39 39
40 40
41 41
42 42
43 43
44 44
45 45
46 46
47 47
48 48
49 49


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
4
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
5
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
6
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
7
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
8
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
9
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
10
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
11
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
12
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
13
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
14
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
15
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
16
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
17
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
18
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
19
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
20
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
21
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
22
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
23
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
24
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
25
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
26
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
27
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
28
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
29
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
30
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
31
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
32
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
33
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
34
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
35
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
36
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
37
## state
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
38
## state
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
39
## state
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
40
## state
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
41
## state
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
42
## state
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
43
## state
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
44
## state
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
45
## state
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
46
## state
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
47
## state
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
48
## state
0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
49
## state
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####

#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1
## state fluent hash keys (first line is the number of keys)
5
0 2
1 2
7 2
8 2
49 50
## kleene state fluent hash keys (first line is the number of keys)
4
0 2
1 2
7 2
8 2

## index
1
## state hash key (for each value in the domain)
0 2
## state fluent hash keys (first line is the number of keys)
7
0 4
1 4
2 2
7 4
8 4
9 2
49 100
## kleene state fluent hash keys (first line is the number of keys)
6
23297760 18956304
1 6
2 2
7 6
8 6
9 2

## index
2
## state hash key (for each value in the domain)
0 4
## state fluent hash keys (first line is the number of keys)
7
1 8
2 4
3 2
8 8
9 4
10 2
49 200
## kleene state fluent hash keys (first line is the number of keys)
6
21708624 18956304
2 6
3 2
8 18
9 6
10 2

## index
3
## state hash key (for each value in the domain)
0 8
## state fluent hash keys (first line is the number of keys)
7
2 8
3 4
4 2
9 8
10 4
11 2
49 400
## kleene state fluent hash keys (first line is the number of keys)
6
21767264 18956304
3 6
4 2
9 18
10 6
11 2

## index
4
## state hash key (for each value in the domain)
0 16
## state fluent hash keys (first line is the number of keys)
7
3 8
4 4
5 2
10 8
11 4
12 2
49 800
## kleene state fluent hash keys (first line is the number of keys)
6
21825904 18956304
4 6
5 2
10 18
11 6
12 2

## index
5
## state hash key (for each value in the domain)
0 32
## state fluent hash keys (first line is the number of keys)
7
4 8
5 4
6 2
11 8
12 4
13 2
49 1600
## kleene state fluent hash keys (first line is the number of keys)
6
21884544 18956304
5 6
6 2
11 18
12 6
13 2

## index
6
## state hash key (for each value in the domain)
0 64
## state fluent hash keys (first line is the number of keys)
5
5 8
6 4
12 8
13 4
49 3200
## kleene state fluent hash keys (first line is the number of keys)
4
21552608 18
6 6
12 18
13 6

## index
7
## state hash key (for each value in the domain)
0 128
## state fluent hash keys (first line is the number of keys)
7
0 8
1 16
7 8
8 16
14 2
15 2
49 6400
## kleene state fluent hash keys (first line is the number of keys)
6
21943184 18956304
1 54
7 18
8 54
14 2
15 2

## index
8
## state hash key (for each value in the domain)
0 256
## state fluent hash keys (first line is the number of keys)
10
0 16
1 32
2 16
7 16
8 32
9 16
14 4
15 4
16 2
49 12800
## kleene state fluent hash keys (first line is the number of keys)
9
23295264 18956304
1 162
2 54
7 54
8 162
9 54
14 6
15 6
16 2

## index
9
## state hash key (for each value in the domain)
0 512
## state fluent hash keys (first line is the number of keys)
10
1 64
2 32
3 16
8 64
9 32
10 16
15 8
16 4
17 2
49 25600
## kleene state fluent hash keys (first line is the number of keys)
9
22133760 18956304
2 162
3 54
8 486
9 162
10 54
15 18
16 6
17 2

## index
10
## state hash key (for each value in the domain)
0 1024
## state fluent hash keys (first line is the number of keys)
10
2 64
3 32
4 16
9 64
10 32
11 16
16 8
17 4
18 2
49 51200
## kleene state fluent hash keys (first line is the number of keys)
9
22192416 18956304
3 162
4 54
9 486
10 162
11 54
16 18
17 6
18 2

## index
11
## state hash key (for each value in the domain)
0 2048
## state fluent hash keys (first line is the number of keys)
10
3 64
4 32
5 16
10 64
11 32
12 16
17 8
18 4
19 2
49 102400
## kleene state fluent hash keys (first line is the number of keys)
9
22251120 18956304
4 162
5 54
10 486
11 162
12 54
17 18
18 6
19 2

## index
12
## state hash key (for each value in the domain)
0 4096
## state fluent hash keys (first line is the number of keys)
10
4 64
5 32
6 8
11 64
12 32
13 8
18 8
19 4
20 2
49 204800
## kleene state fluent hash keys (first line is the number of keys)
9
22309968 18956304
5 162
6 18
11 486
12 162
13 18
18 18
19 6
20 2

## index
13
## state hash key (for each value in the domain)
0 8192
## state fluent hash keys (first line is the number of keys)
7
5 64
6 16
12 64
13 16
19 8
20 4
49 409600
## kleene state fluent hash keys (first line is the number of keys)
6
1519049696 22326112
6 54
12 486
13 54
19 18
20 6

## index
14
## state hash key (for each value in the domain)
0 16384
## state fluent hash keys (first line is the number of keys)
7
7 32
8 128
14 8
15 16
21 2
22 2
49 819200
## kleene state fluent hash keys (first line is the number of keys)
6
21942320 22502208
8 1458
14 18
15 54
21 2
22 2

## index
15
## state hash key (for each value in the domain)
0 32768
## state fluent hash keys (first line is the number of keys)
10
7 64
8 256
9 128
14 16
15 32
16 16
21 4
22 4
23 2
49 1638400
## kleene state fluent hash keys (first line is the number of keys)
9
22318000 18956304
8 4374
9 1458
14 54
15 162
16 54
21 6
22 6
23 2

## index
16
## state hash key (for each value in the domain)
0 65536
## state fluent hash keys (first line is the number of keys)
10
8 512
9 256
10 128
15 64
16 32
17 16
22 8
23 4
24 2
49 3276800
## kleene state fluent hash keys (first line is the number of keys)
9
22326112 22560912
9 4374
10 1458
15 486
16 162
17 54
22 18
23 6
24 2

## index
17
## state hash key (for each value in the domain)
0 131072
## state fluent hash keys (first line is the number of keys)
10
9 512
10 256
11 128
16 64
17 32
18 16
23 8
24 4
25 2
49 6553600
## kleene state fluent hash keys (first line is the number of keys)
9
22502208 22619760
10 4374
11 1458
16 486
17 162
18 54
23 18
24 6
25 2

## index
18
## state hash key (for each value in the domain)
0 262144
## state fluent hash keys (first line is the number of keys)
10
10 512
11 256
12 128
17 64
18 32
19 16
24 8
25 4
26 2
49 13107200
## kleene state fluent hash keys (first line is the number of keys)
9
22560912 22627792
11 4374
12 1458
17 486
18 162
19 54
24 18
25 6
26 2

## index
19
## state hash key (for each value in the domain)
0 524288
## state fluent hash keys (first line is the number of keys)
10
11 512
12 256
13 32
18 64
19 32
20 8
25 8
26 4
27 2
49 26214400
## kleene state fluent hash keys (first line is the number of keys)
9
22619760 21883680
12 4374
13 162
18 486
19 162
20 18
25 18
26 6
27 2

## index
20
## state hash key (for each value in the domain)
0 1048576
## state fluent hash keys (first line is the number of keys)
7
12 512
13 64
19 64
20 16
26 8
27 4
49 52428800
## kleene state fluent hash keys (first line is the number of keys)
6
22627792 22635920
13 486
19 486
20 54
26 18
27 6

## index
21
## state hash key (for each value in the domain)
0 2097152
## state fluent hash keys (first line is the number of keys)
7
14 32
15 128
21 8
22 16
28 2
29 2
49 104857600
## kleene state fluent hash keys (first line is the number of keys)
6
21883680 22753312
15 1458
21 18
22 54
28 2
29 2

## index
22
## state hash key (for each value in the domain)
0 4194304
## state fluent hash keys (first line is the number of keys)
10
14 64
15 256
16 128
21 16
22 32
23 16
28 4
29 4
30 2
49 209715200
## kleene state fluent hash keys (first line is the number of keys)
9
22635920 22812016
15 4374
16 1458
21 54
22 162
23 54
28 6
29 6
30 2

## index
23
## state hash key (for each value in the domain)
0 8388608
## state fluent hash keys (first line is the number of keys)
10
15 512
16 256
17 128
22 64
23 32
24 16
29 8
30 4
31 2
49 419430400
## kleene state fluent hash keys (first line is the number of keys)
9
22753312 22870720
16 4374
17 1458
22 486
23 162
24 54
29 18
30 6
31 2

## index
24
## state hash key (for each value in the domain)
0 16777216
## state fluent hash keys (first line is the number of keys)
10
16 512
17 256
18 128
23 64
24 32
25 16
30 8
31 4
32 2
49 838860800
## kleene state fluent hash keys (first line is the number of keys)
9
22812016 22929568
17 4374
18 1458
23 486
24 162
25 54
30 18
31 6
32 2

## index
25
## state hash key (for each value in the domain)
0 33554432
## state fluent hash keys (first line is the number of keys)
10
17 512
18 256
19 128
24 64
25 32
26 16
31 8
32 4
33 2
49 1677721600
## kleene state fluent hash keys (first line is the number of keys)
9
22870720 22937600
18 4374
19 1458
24 486
25 162
26 54
31 18
32 6
33 2

## index
26
## state hash key (for each value in the domain)
0 67108864
## state fluent hash keys (first line is the number of keys)
10
18 512
19 256
20 32
25 64
26 32
27 8
32 8
33 4
34 2
49 3355443200
## kleene state fluent hash keys (first line is the number of keys)
9
22929568 21825040
19 4374
20 162
25 486
26 162
27 18
32 18
33 6
34 2

## index
27
## state hash key (for each value in the domain)
0 134217728
## state fluent hash keys (first line is the number of keys)
7
19 512
20 64
26 64
27 16
33 8
34 4
49 6710886400
## kleene state fluent hash keys (first line is the number of keys)
6
22937600 22945728
20 486
26 486
27 54
33 18
34 6

## index
28
## state hash key (for each value in the domain)
0 268435456
## state fluent hash keys (first line is the number of keys)
7
21 32
22 128
28 8
29 16
35 2
36 2
49 13421772800
## kleene state fluent hash keys (first line is the number of keys)
6
21825040 23063120
22 1458
28 18
29 54
35 2
36 2

## index
29
## state hash key (for each value in the domain)
0 536870912
## state fluent hash keys (first line is the number of keys)
10
21 64
22 256
23 128
28 16
29 32
30 16
35 4
36 4
37 2
49 26843545600
## kleene state fluent hash keys (first line is the number of keys)
9
22945728 23121824
22 4374
23 1458
28 54
29 162
30 54
35 6
36 6
37 2

## index
30
## state hash key (for each value in the domain)
0 1073741824
## state fluent hash keys (first line is the number of keys)
10
22 512
23 256
24 128
29 64
30 32
31 16
36 8
37 4
38 2
49 53687091200
## kleene state fluent hash keys (first line is the number of keys)
9
23063120 23180528
23 4374
24 1458
29 486
30 162
31 54
36 18
37 6
38 2

## index
31
## state hash key (for each value in the domain)
0 2147483648
## state fluent hash keys (first line is the number of keys)
10
23 512
24 256
25 128
30 64
31 32
32 16
37 8
38 4
39 2
49 107374182400
## kleene state fluent hash keys (first line is the number of keys)
9
23121824 23239376
24 4374
25 1458
30 486
31 162
32 54
37 18
38 6
39 2

## index
32
## state hash key (for each value in the domain)
0 4294967296
## state fluent hash keys (first line is the number of keys)
10
24 512
25 256
26 128
31 64
32 32
33 16
38 8
39 4
40 2
49 214748364800
## kleene state fluent hash keys (first line is the number of keys)
9
23180528 23247408
25 4374
26 1458
31 486
32 162
33 54
38 18
39 6
40 2

## index
33
## state hash key (for each value in the domain)
0 8589934592
## state fluent hash keys (first line is the number of keys)
10
25 512
26 256
27 32
32 64
33 32
34 8
39 8
40 4
41 2
49 429496729600
## kleene state fluent hash keys (first line is the number of keys)
9
23239376 21766400
26 4374
27 162
32 486
33 162
34 18
39 18
40 6
41 2

## index
34
## state hash key (for each value in the domain)
0 17179869184
## state fluent hash keys (first line is the number of keys)
7
26 512
27 64
33 64
34 16
40 8
41 4
49 858993459200
## kleene state fluent hash keys (first line is the number of keys)
6
23247408 22871776
27 486
33 486
34 54
40 18
41 6

## index
35
## state hash key (for each value in the domain)
0 34359738368
## state fluent hash keys (first line is the number of keys)
7
28 32
29 128
35 8
36 16
42 2
43 2
49 1717986918400
## kleene state fluent hash keys (first line is the number of keys)
6
21766400 23266336
29 1458
35 18
36 54
42 2
43 2

## index
36
## state hash key (for each value in the domain)
0 68719476736
## state fluent hash keys (first line is the number of keys)
10
28 64
29 256
30 128
35 16
36 32
37 16
42 4
43 4
44 2
49 3435973836800
## kleene state fluent hash keys (first line is the number of keys)
9
22871776 23274736
29 4374
30 1458
35 54
36 162
37 54
42 6
43 6
44 2

## index
37
## state hash key (for each value in the domain)
0 137438953472
## state fluent hash keys (first line is the number of keys)
10
29 512
30 256
31 128
36 64
37 32
38 16
43 8
44 4
45 2
49 6871947673600
## kleene state fluent hash keys (first line is the number of keys)
9
23266336 23283136
30 4374
31 1458
36 486
37 162
38 54
43 18
44 6
45 2

## index
38
## state hash key (for each value in the domain)
0 274877906944
## state fluent hash keys (first line is the number of keys)
10
30 512
31 256
32 128
37 64
38 32
39 16
44 8
45 4
46 2
49 13743895347200
## kleene state fluent hash keys (first line is the number of keys)
9
23274736 23294560
31 4374
32 1458
37 486
38 162
39 54
44 18
45 6
46 2

## index
39
## state hash key (for each value in the domain)
0 549755813888
## state fluent hash keys (first line is the number of keys)
10
31 512
32 256
33 128
38 64
39 32
40 16
45 8
46 4
47 2
49 27487790694400
## kleene state fluent hash keys (first line is the number of keys)
9
22326944 140631633222624
32 4374
33 1458
38 486
39 162
40 54
45 18
46 6
47 2

## index
40
## state hash key (for each value in the domain)
0 1099511627776
## state fluent hash keys (first line is the number of keys)
10
32 512
33 256
34 32
39 64
40 32
41 8
46 8
47 4
48 2
49 54975581388800
## kleene state fluent hash keys (first line is the number of keys)
9
23283136 22017472
33 4374
34 162
39 486
40 162
41 18
46 18
47 6
48 2

## index
41
## state hash key (for each value in the domain)
0 2199023255552
## state fluent hash keys (first line is the number of keys)
7
33 512
34 64
40 64
41 16
47 8
48 4
49 109951162777600
## kleene state fluent hash keys (first line is the number of keys)
6
23294560 23258064
34 486
40 486
41 54
47 18
48 6

## index
42
## state hash key (for each value in the domain)
0 4398046511104
## state fluent hash keys (first line is the number of keys)
5
35 32
36 128
42 8
43 16
49 219902325555200
## kleene state fluent hash keys (first line is the number of keys)
4
21553312 162
36 1458
42 18
43 54

## index
43
## state hash key (for each value in the domain)
0 8796093022208
## state fluent hash keys (first line is the number of keys)
7
35 64
36 256
37 128
42 16
43 32
44 16
49 439804651110400
## kleene state fluent hash keys (first line is the number of keys)
6
22017472 22946560
36 4374
37 1458
42 54
43 162
44 54

## index
44
## state hash key (for each value in the domain)
0 17592186044416
## state fluent hash keys (first line is the number of keys)
7
36 512
37 256
38 128
43 64
44 32
45 16
49 879609302220800
## kleene state fluent hash keys (first line is the number of keys)
6
23258064 22636752
37 4374
38 1458
43 486
44 162
45 54

## index
45
## state hash key (for each value in the domain)
0 35184372088832
## state fluent hash keys (first line is the number of keys)
7
37 512
38 256
39 128
44 64
45 32
46 16
49 1759218604441600
## kleene state fluent hash keys (first line is the number of keys)
6
22946560 22326944
38 4374
39 1458
44 486
45 162
46 54

## index
46
## state hash key (for each value in the domain)
0 70368744177664
## state fluent hash keys (first line is the number of keys)
7
38 512
39 256
40 128
45 64
46 32
47 16
49 3518437208883200
## kleene state fluent hash keys (first line is the number of keys)
6
22636752 23291632
39 4374
40 1458
45 486
46 162
47 54

## index
47
## state hash key (for each value in the domain)
0 140737488355328
## state fluent hash keys (first line is the number of keys)
7
39 512
40 256
41 32
46 64
47 32
48 8
49 7036874417766400
## kleene state fluent hash keys (first line is the number of keys)
6
39 13122
40 4374
41 162
46 486
47 162
48 18

## index
48
## state hash key (for each value in the domain)
0 281474976710656
## state fluent hash keys (first line is the number of keys)
5
40 512
41 64
47 64
48 16
49 14073748835532800
## kleene state fluent hash keys (first line is the number of keys)
4
21549136 13122
41 486
47 486
48 54

