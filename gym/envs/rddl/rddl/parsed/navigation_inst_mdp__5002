#####TASK##### Here
## name
navigation_inst_mdp__5002
## horizon
100
## discount factor
1
## number of action fluents
4
## number of det state fluents
40
## number of prob state fluents
60
## number of preconds
0
## number of actions
5
## number of hashing functions
101
## initial state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## 1 if task is deterministic
0
## 1 if state hashing possible
0
## 1 if kleene state hashing possible
0


#####ACTION FLUENTS#####
## index
0
## name
move-east
## number of values
2
## values
0 false
1 true

## index
1
## name
move-north
## number of values
2
## values
0 false
1 true

## index
2
## name
move-south
## number of values
2
## values
0 false
1 true

## index
3
## name
move-west
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####
## index
0
## name
robot-at(x1, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(0)) and($a(0) $s(0))) : $c(0)) (or(and($a(2) $s(40)) and($a(3) $s(22))) : $c(1)) ($c(1) : $s(0)) )
## hash index
0
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
1
## name
robot-at(x1, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(2) $s(1)) and($a(0) $s(1))) : $c(0)) (or(and($a(1) $s(42)) and($a(3) $s(23))) : $c(1)) ($c(1) : $s(1)) )
## hash index
1
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
2
## name
robot-at(x10, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(2)) and($a(0) $s(2)) and($a(3) $s(2))) : $c(0)) (or(and($a(2) $s(43)) and($a(0) $s(38)) and($a(3) $s(4))) : $c(1)) ($c(1) : $s(2)) )
## hash index
2
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
3
## name
robot-at(x10, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(2) $s(3)) and($a(0) $s(3)) and($a(3) $s(3))) : $c(0)) (or(and($a(1) $s(45)) and($a(0) $s(39)) and($a(3) $s(5))) : $c(1)) ($c(1) : $s(3)) )
## hash index
3
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
4
## name
robot-at(x11, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(4)) and($a(0) $s(4)) and($a(3) $s(4))) : $c(0)) (or(and($a(2) $s(46)) and($a(0) $s(2)) and($a(3) $s(6))) : $c(1)) ($c(1) : $s(4)) )
## hash index
4
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
5
## name
robot-at(x11, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(2) $s(5)) and($a(0) $s(5)) and($a(3) $s(5))) : $c(0)) (or(and($a(1) $s(48)) and($a(0) $s(3)) and($a(3) $s(7))) : $c(1)) ($c(1) : $s(5)) )
## hash index
5
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
6
## name
robot-at(x12, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(6)) and($a(0) $s(6)) and($a(3) $s(6))) : $c(0)) (or(and($a(2) $s(49)) and($a(0) $s(4)) and($a(3) $s(8))) : $c(1)) ($c(1) : $s(6)) )
## hash index
6
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
7
## name
robot-at(x12, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(2) $s(7)) and($a(0) $s(7)) and($a(3) $s(7))) : $c(0)) (or(and($a(1) $s(51)) and($a(0) $s(5)) and($a(3) $s(9))) : $c(1)) ($c(1) : $s(7)) )
## hash index
7
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
8
## name
robot-at(x13, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(8)) and($a(0) $s(8)) and($a(3) $s(8))) : $c(0)) (or(and($a(2) $s(52)) and($a(0) $s(6)) and($a(3) $s(10))) : $c(1)) ($c(1) : $s(8)) )
## hash index
8
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
9
## name
robot-at(x13, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(2) $s(9)) and($a(0) $s(9)) and($a(3) $s(9))) : $c(0)) (or(and($a(1) $s(54)) and($a(0) $s(7)) and($a(3) $s(11))) : $c(1)) ($c(1) : $s(9)) )
## hash index
9
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
10
## name
robot-at(x14, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(10)) and($a(0) $s(10)) and($a(3) $s(10))) : $c(0)) (or(and($a(2) $s(55)) and($a(0) $s(8)) and($a(3) $s(12))) : $c(1)) ($c(1) : $s(10)) )
## hash index
10
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
11
## name
robot-at(x14, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(2) $s(11)) and($a(0) $s(11)) and($a(3) $s(11))) : $c(0)) (or(and($a(1) $s(57)) and($a(0) $s(9)) and($a(3) $s(13))) : $c(1)) ($c(1) : $s(11)) )
## hash index
11
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
12
## name
robot-at(x15, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(12)) and($a(0) $s(12)) and($a(3) $s(12))) : $c(0)) (or(and($a(2) $s(58)) and($a(0) $s(10)) and($a(3) $s(14))) : $c(1)) ($c(1) : $s(12)) )
## hash index
12
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
13
## name
robot-at(x15, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(2) $s(13)) and($a(0) $s(13)) and($a(3) $s(13))) : $c(0)) (or(and($a(1) $s(60)) and($a(0) $s(11)) and($a(3) $s(15))) : $c(1)) ($c(1) : $s(13)) )
## hash index
13
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
14
## name
robot-at(x16, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(14)) and($a(0) $s(14)) and($a(3) $s(14))) : $c(0)) (or(and($a(2) $s(61)) and($a(0) $s(12)) and($a(3) $s(16))) : $c(1)) ($c(1) : $s(14)) )
## hash index
14
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
15
## name
robot-at(x16, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(2) $s(15)) and($a(0) $s(15)) and($a(3) $s(15))) : $c(0)) (or(and($a(1) $s(63)) and($a(0) $s(13)) and($a(3) $s(17))) : $c(1)) ($c(1) : $s(15)) )
## hash index
15
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
16
## name
robot-at(x17, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(16)) and($a(0) $s(16)) and($a(3) $s(16))) : $c(0)) (or(and($a(2) $s(64)) and($a(0) $s(14)) and($a(3) $s(18))) : $c(1)) ($c(1) : $s(16)) )
## hash index
16
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
17
## name
robot-at(x17, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(2) $s(17)) and($a(0) $s(17)) and($a(3) $s(17))) : $c(0)) (or(and($a(1) $s(66)) and($a(0) $s(15)) and($a(3) $s(19))) : $c(1)) ($c(1) : $s(17)) )
## hash index
17
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
18
## name
robot-at(x18, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(18)) and($a(0) $s(18)) and($a(3) $s(18))) : $c(0)) (or(and($a(2) $s(67)) and($a(0) $s(16)) and($a(3) $s(20))) : $c(1)) ($c(1) : $s(18)) )
## hash index
18
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
19
## name
robot-at(x18, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(2) $s(19)) and($a(0) $s(19)) and($a(3) $s(19))) : $c(0)) (or(and($a(1) $s(69)) and($a(0) $s(17)) and($a(3) $s(21))) : $c(1)) ($c(1) : $s(19)) )
## hash index
19
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
20
## name
robot-at(x19, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(20)) and($a(0) $s(20)) and($a(3) $s(20))) : $c(0)) (or(and($a(2) $s(70)) and($a(0) $s(18)) and($a(3) $s(24))) : $c(1)) ($c(1) : $s(20)) )
## hash index
20
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
21
## name
robot-at(x19, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(2) $s(21)) and($a(0) $s(21)) and($a(3) $s(21))) : $c(0)) (or(and($a(1) $s(72)) and($a(0) $s(19)) and($a(3) $s(25))) : $c(1)) ($c(1) : $s(21)) )
## hash index
21
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
22
## name
robot-at(x2, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(22)) and($a(0) $s(22)) and($a(3) $s(22))) : $c(0)) (or(and($a(2) $s(73)) and($a(0) $s(0)) and($a(3) $s(26))) : $c(1)) ($c(1) : $s(22)) )
## hash index
22
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
23
## name
robot-at(x2, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(2) $s(23)) and($a(0) $s(23)) and($a(3) $s(23))) : $c(0)) (or(and($a(1) $s(75)) and($a(0) $s(1)) and($a(3) $s(27))) : $c(1)) ($c(1) : $s(23)) )
## hash index
23
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
24
## name
robot-at(x20, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(24)) and($a(3) $s(24))) : $c(0)) (or(and($a(2) $s(76)) and($a(0) $s(20))) : $c(1)) ($c(1) : $s(24)) )
## hash index
24
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
25
## name
robot-at(x20, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(25) : $c(1)) (or($s(25) and($a(2) $s(25)) and($a(3) $s(25))) : $c(0)) (or(and($a(1) $s(78)) and($a(0) $s(21))) : $c(1)) ($c(1) : $s(25)) )
## hash index
25
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
26
## name
robot-at(x3, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(26)) and($a(0) $s(26)) and($a(3) $s(26))) : $c(0)) (or(and($a(2) $s(79)) and($a(0) $s(22)) and($a(3) $s(28))) : $c(1)) ($c(1) : $s(26)) )
## hash index
26
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
27
## name
robot-at(x3, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(2) $s(27)) and($a(0) $s(27)) and($a(3) $s(27))) : $c(0)) (or(and($a(1) $s(81)) and($a(0) $s(23)) and($a(3) $s(29))) : $c(1)) ($c(1) : $s(27)) )
## hash index
27
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
28
## name
robot-at(x4, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(28)) and($a(0) $s(28)) and($a(3) $s(28))) : $c(0)) (or(and($a(2) $s(82)) and($a(0) $s(26)) and($a(3) $s(30))) : $c(1)) ($c(1) : $s(28)) )
## hash index
28
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
29
## name
robot-at(x4, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(2) $s(29)) and($a(0) $s(29)) and($a(3) $s(29))) : $c(0)) (or(and($a(1) $s(84)) and($a(0) $s(27)) and($a(3) $s(31))) : $c(1)) ($c(1) : $s(29)) )
## hash index
29
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
30
## name
robot-at(x5, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(30)) and($a(0) $s(30)) and($a(3) $s(30))) : $c(0)) (or(and($a(2) $s(85)) and($a(0) $s(28)) and($a(3) $s(32))) : $c(1)) ($c(1) : $s(30)) )
## hash index
30
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
31
## name
robot-at(x5, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(2) $s(31)) and($a(0) $s(31)) and($a(3) $s(31))) : $c(0)) (or(and($a(1) $s(87)) and($a(0) $s(29)) and($a(3) $s(33))) : $c(1)) ($c(1) : $s(31)) )
## hash index
31
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
32
## name
robot-at(x6, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(32)) and($a(0) $s(32)) and($a(3) $s(32))) : $c(0)) (or(and($a(2) $s(88)) and($a(0) $s(30)) and($a(3) $s(34))) : $c(1)) ($c(1) : $s(32)) )
## hash index
32
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
33
## name
robot-at(x6, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(2) $s(33)) and($a(0) $s(33)) and($a(3) $s(33))) : $c(0)) (or(and($a(1) $s(90)) and($a(0) $s(31)) and($a(3) $s(35))) : $c(1)) ($c(1) : $s(33)) )
## hash index
33
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
34
## name
robot-at(x7, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(34)) and($a(0) $s(34)) and($a(3) $s(34))) : $c(0)) (or(and($a(2) $s(91)) and($a(0) $s(32)) and($a(3) $s(36))) : $c(1)) ($c(1) : $s(34)) )
## hash index
34
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
35
## name
robot-at(x7, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(2) $s(35)) and($a(0) $s(35)) and($a(3) $s(35))) : $c(0)) (or(and($a(1) $s(93)) and($a(0) $s(33)) and($a(3) $s(37))) : $c(1)) ($c(1) : $s(35)) )
## hash index
35
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
36
## name
robot-at(x8, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(36)) and($a(0) $s(36)) and($a(3) $s(36))) : $c(0)) (or(and($a(2) $s(94)) and($a(0) $s(34)) and($a(3) $s(38))) : $c(1)) ($c(1) : $s(36)) )
## hash index
36
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
37
## name
robot-at(x8, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(2) $s(37)) and($a(0) $s(37)) and($a(3) $s(37))) : $c(0)) (or(and($a(1) $s(96)) and($a(0) $s(35)) and($a(3) $s(39))) : $c(1)) ($c(1) : $s(37)) )
## hash index
37
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
38
## name
robot-at(x9, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(38)) and($a(0) $s(38)) and($a(3) $s(38))) : $c(0)) (or(and($a(2) $s(97)) and($a(0) $s(36)) and($a(3) $s(2))) : $c(1)) ($c(1) : $s(38)) )
## hash index
38
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
39
## name
robot-at(x9, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(2) $s(39)) and($a(0) $s(39)) and($a(3) $s(39))) : $c(0)) (or(and($a(1) $s(99)) and($a(0) $s(37)) and($a(3) $s(3))) : $c(1)) ($c(1) : $s(39)) )
## hash index
39
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4



#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
robot-at(x1, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(40)) and($a(2) $s(40)) and($a(0) $s(40))) : $c(0)) (or(and($a(1) $s(0)) and($a(2) $s(41)) and($a(3) $s(73))) : Bernoulli($c(0.946530723276092))) ($c(1) : $s(40)) )
## hash index
40
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
1
## name
robot-at(x1, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(41)) and($a(2) $s(41)) and($a(0) $s(41))) : $c(0)) (or(and($a(1) $s(40)) and($a(2) $s(42)) and($a(3) $s(74))) : Bernoulli($c(0.957675731465888))) ($c(1) : $s(41)) )
## hash index
41
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
2
## name
robot-at(x1, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(42)) and($a(2) $s(42)) and($a(0) $s(42))) : $c(0)) (or(and($a(1) $s(41)) and($a(2) $s(1)) and($a(3) $s(75))) : Bernoulli($c(0.980261661813292))) ($c(1) : $s(42)) )
## hash index
42
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
3
## name
robot-at(x10, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(43)) and($a(2) $s(43)) and($a(0) $s(43)) and($a(3) $s(43))) : $c(0)) (or(and($a(1) $s(2)) and($a(2) $s(44)) and($a(0) $s(97)) and($a(3) $s(46))) : Bernoulli($c(0.525168668126306))) ($c(1) : $s(43)) )
## hash index
43
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
4
## name
robot-at(x10, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(44)) and($a(2) $s(44)) and($a(0) $s(44)) and($a(3) $s(44))) : $c(0)) (or(and($a(1) $s(43)) and($a(2) $s(45)) and($a(0) $s(98)) and($a(3) $s(47))) : Bernoulli($c(0.550653974970232))) ($c(1) : $s(44)) )
## hash index
44
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
5
## name
robot-at(x10, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(45)) and($a(2) $s(45)) and($a(0) $s(45)) and($a(3) $s(45))) : $c(0)) (or(and($a(1) $s(44)) and($a(2) $s(3)) and($a(0) $s(99)) and($a(3) $s(48))) : Bernoulli($c(0.547555581557878))) ($c(1) : $s(45)) )
## hash index
45
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
6
## name
robot-at(x11, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(46)) and($a(2) $s(46)) and($a(0) $s(46)) and($a(3) $s(46))) : $c(0)) (or(and($a(1) $s(4)) and($a(2) $s(47)) and($a(0) $s(43)) and($a(3) $s(49))) : Bernoulli($c(0.467834990354549))) ($c(1) : $s(46)) )
## hash index
46
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
7
## name
robot-at(x11, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(47)) and($a(2) $s(47)) and($a(0) $s(47)) and($a(3) $s(47))) : $c(0)) (or(and($a(1) $s(46)) and($a(2) $s(48)) and($a(0) $s(44)) and($a(3) $s(50))) : Bernoulli($c(0.493704491386014))) ($c(1) : $s(47)) )
## hash index
47
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
8
## name
robot-at(x11, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(48)) and($a(2) $s(48)) and($a(0) $s(48)) and($a(3) $s(48))) : $c(0)) (or(and($a(1) $s(47)) and($a(2) $s(5)) and($a(0) $s(45)) and($a(3) $s(51))) : Bernoulli($c(0.485864807409053))) ($c(1) : $s(48)) )
## hash index
48
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
9
## name
robot-at(x12, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(49)) and($a(2) $s(49)) and($a(0) $s(49)) and($a(3) $s(49))) : $c(0)) (or(and($a(1) $s(6)) and($a(2) $s(50)) and($a(0) $s(46)) and($a(3) $s(52))) : Bernoulli($c(0.458561072111496))) ($c(1) : $s(49)) )
## hash index
49
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
10
## name
robot-at(x12, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(50)) and($a(2) $s(50)) and($a(0) $s(50)) and($a(3) $s(50))) : $c(0)) (or(and($a(1) $s(49)) and($a(2) $s(51)) and($a(0) $s(47)) and($a(3) $s(53))) : Bernoulli($c(0.421965887115113))) ($c(1) : $s(50)) )
## hash index
50
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
11
## name
robot-at(x12, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(51)) and($a(2) $s(51)) and($a(0) $s(51)) and($a(3) $s(51))) : $c(0)) (or(and($a(1) $s(50)) and($a(2) $s(7)) and($a(0) $s(48)) and($a(3) $s(54))) : Bernoulli($c(0.453923124755542))) ($c(1) : $s(51)) )
## hash index
51
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
12
## name
robot-at(x13, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(52)) and($a(2) $s(52)) and($a(0) $s(52)) and($a(3) $s(52))) : $c(0)) (or(and($a(1) $s(8)) and($a(2) $s(53)) and($a(0) $s(49)) and($a(3) $s(55))) : Bernoulli($c(0.407403618185969))) ($c(1) : $s(52)) )
## hash index
52
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
13
## name
robot-at(x13, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(53)) and($a(2) $s(53)) and($a(0) $s(53)) and($a(3) $s(53))) : $c(0)) (or(and($a(1) $s(52)) and($a(2) $s(54)) and($a(0) $s(50)) and($a(3) $s(56))) : Bernoulli($c(0.373543893839202))) ($c(1) : $s(53)) )
## hash index
53
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
14
## name
robot-at(x13, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(54)) and($a(2) $s(54)) and($a(0) $s(54)) and($a(3) $s(54))) : $c(0)) (or(and($a(1) $s(53)) and($a(2) $s(9)) and($a(0) $s(51)) and($a(3) $s(57))) : Bernoulli($c(0.380272774305577))) ($c(1) : $s(54)) )
## hash index
54
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
15
## name
robot-at(x14, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(55)) and($a(2) $s(55)) and($a(0) $s(55)) and($a(3) $s(55))) : $c(0)) (or(and($a(1) $s(10)) and($a(2) $s(56)) and($a(0) $s(52)) and($a(3) $s(58))) : Bernoulli($c(0.334518441740968))) ($c(1) : $s(55)) )
## hash index
55
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
16
## name
robot-at(x14, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(56)) and($a(2) $s(56)) and($a(0) $s(56)) and($a(3) $s(56))) : $c(0)) (or(and($a(1) $s(55)) and($a(2) $s(57)) and($a(0) $s(53)) and($a(3) $s(59))) : Bernoulli($c(0.357727971272988))) ($c(1) : $s(56)) )
## hash index
56
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
17
## name
robot-at(x14, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(57)) and($a(2) $s(57)) and($a(0) $s(57)) and($a(3) $s(57))) : $c(0)) (or(and($a(1) $s(56)) and($a(2) $s(11)) and($a(0) $s(54)) and($a(3) $s(60))) : Bernoulli($c(0.325059726743681))) ($c(1) : $s(57)) )
## hash index
57
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
18
## name
robot-at(x15, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(58)) and($a(2) $s(58)) and($a(0) $s(58)) and($a(3) $s(58))) : $c(0)) (or(and($a(1) $s(12)) and($a(2) $s(59)) and($a(0) $s(55)) and($a(3) $s(61))) : Bernoulli($c(0.300240693709191))) ($c(1) : $s(58)) )
## hash index
58
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
19
## name
robot-at(x15, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(59)) and($a(2) $s(59)) and($a(0) $s(59)) and($a(3) $s(59))) : $c(0)) (or(and($a(1) $s(58)) and($a(2) $s(60)) and($a(0) $s(56)) and($a(3) $s(62))) : Bernoulli($c(0.32411910578694))) ($c(1) : $s(59)) )
## hash index
59
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
20
## name
robot-at(x15, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(60)) and($a(2) $s(60)) and($a(0) $s(60)) and($a(3) $s(60))) : $c(0)) (or(and($a(1) $s(59)) and($a(2) $s(13)) and($a(0) $s(57)) and($a(3) $s(63))) : Bernoulli($c(0.290813880018969))) ($c(1) : $s(60)) )
## hash index
60
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
21
## name
robot-at(x16, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(61)) and($a(2) $s(61)) and($a(0) $s(61)) and($a(3) $s(61))) : $c(0)) (or(and($a(1) $s(14)) and($a(2) $s(62)) and($a(0) $s(58)) and($a(3) $s(64))) : Bernoulli($c(0.247156798927648))) ($c(1) : $s(61)) )
## hash index
61
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
22
## name
robot-at(x16, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(62)) and($a(2) $s(62)) and($a(0) $s(62)) and($a(3) $s(62))) : $c(0)) (or(and($a(1) $s(61)) and($a(2) $s(63)) and($a(0) $s(59)) and($a(3) $s(65))) : Bernoulli($c(0.238506431402679))) ($c(1) : $s(62)) )
## hash index
62
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
23
## name
robot-at(x16, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(63)) and($a(2) $s(63)) and($a(0) $s(63)) and($a(3) $s(63))) : $c(0)) (or(and($a(1) $s(62)) and($a(2) $s(15)) and($a(0) $s(60)) and($a(3) $s(66))) : Bernoulli($c(0.267312242486529))) ($c(1) : $s(63)) )
## hash index
63
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
24
## name
robot-at(x17, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(64)) and($a(2) $s(64)) and($a(0) $s(64)) and($a(3) $s(64))) : $c(0)) (or(and($a(1) $s(16)) and($a(2) $s(65)) and($a(0) $s(61)) and($a(3) $s(67))) : Bernoulli($c(0.208785215828967))) ($c(1) : $s(64)) )
## hash index
64
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
25
## name
robot-at(x17, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(65)) and($a(2) $s(65)) and($a(0) $s(65)) and($a(3) $s(65))) : $c(0)) (or(and($a(1) $s(64)) and($a(2) $s(66)) and($a(0) $s(62)) and($a(3) $s(68))) : Bernoulli($c(0.201928160567049))) ($c(1) : $s(65)) )
## hash index
65
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
26
## name
robot-at(x17, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(66)) and($a(2) $s(66)) and($a(0) $s(66)) and($a(3) $s(66))) : $c(0)) (or(and($a(1) $s(65)) and($a(2) $s(17)) and($a(0) $s(63)) and($a(3) $s(69))) : Bernoulli($c(0.195373175388214))) ($c(1) : $s(66)) )
## hash index
66
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
27
## name
robot-at(x18, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(67)) and($a(2) $s(67)) and($a(0) $s(67)) and($a(3) $s(67))) : $c(0)) (or(and($a(1) $s(18)) and($a(2) $s(68)) and($a(0) $s(64)) and($a(3) $s(70))) : Bernoulli($c(0.167259332808262))) ($c(1) : $s(67)) )
## hash index
67
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
28
## name
robot-at(x18, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(68)) and($a(2) $s(68)) and($a(0) $s(68)) and($a(3) $s(68))) : $c(0)) (or(and($a(1) $s(67)) and($a(2) $s(69)) and($a(0) $s(65)) and($a(3) $s(71))) : Bernoulli($c(0.142605568190189))) ($c(1) : $s(68)) )
## hash index
68
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
29
## name
robot-at(x18, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(69)) and($a(2) $s(69)) and($a(0) $s(69)) and($a(3) $s(69))) : $c(0)) (or(and($a(1) $s(68)) and($a(2) $s(19)) and($a(0) $s(66)) and($a(3) $s(72))) : Bernoulli($c(0.177314022635322))) ($c(1) : $s(69)) )
## hash index
69
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
30
## name
robot-at(x19, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(70)) and($a(2) $s(70)) and($a(0) $s(70)) and($a(3) $s(70))) : $c(0)) (or(and($a(1) $s(20)) and($a(2) $s(71)) and($a(0) $s(67)) and($a(3) $s(76))) : Bernoulli($c(0.134687098870172))) ($c(1) : $s(70)) )
## hash index
70
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
31
## name
robot-at(x19, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(71)) and($a(2) $s(71)) and($a(0) $s(71)) and($a(3) $s(71))) : $c(0)) (or(and($a(1) $s(70)) and($a(2) $s(72)) and($a(0) $s(68)) and($a(3) $s(77))) : Bernoulli($c(0.111192312487382))) ($c(1) : $s(71)) )
## hash index
71
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
32
## name
robot-at(x19, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(72)) and($a(2) $s(72)) and($a(0) $s(72)) and($a(3) $s(72))) : $c(0)) (or(and($a(1) $s(71)) and($a(2) $s(21)) and($a(0) $s(69)) and($a(3) $s(78))) : Bernoulli($c(0.100982818779933))) ($c(1) : $s(72)) )
## hash index
72
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
33
## name
robot-at(x2, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(73)) and($a(2) $s(73)) and($a(0) $s(73)) and($a(3) $s(73))) : $c(0)) (or(and($a(1) $s(22)) and($a(2) $s(74)) and($a(0) $s(40)) and($a(3) $s(79))) : Bernoulli($c(0.919127377194048))) ($c(1) : $s(73)) )
## hash index
73
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
34
## name
robot-at(x2, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(74)) and($a(2) $s(74)) and($a(0) $s(74)) and($a(3) $s(74))) : $c(0)) (or(and($a(1) $s(73)) and($a(2) $s(75)) and($a(0) $s(41)) and($a(3) $s(80))) : Bernoulli($c(0.902249250650976))) ($c(1) : $s(74)) )
## hash index
74
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
35
## name
robot-at(x2, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(75)) and($a(2) $s(75)) and($a(0) $s(75)) and($a(3) $s(75))) : $c(0)) (or(and($a(1) $s(74)) and($a(2) $s(23)) and($a(0) $s(42)) and($a(3) $s(81))) : Bernoulli($c(0.911560605525245))) ($c(1) : $s(75)) )
## hash index
75
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
36
## name
robot-at(x20, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(76)) and($a(2) $s(76)) and($a(3) $s(76))) : $c(0)) (or(and($a(1) $s(24)) and($a(2) $s(77)) and($a(0) $s(70))) : Bernoulli($c(0.0682118609161356))) ($c(1) : $s(76)) )
## hash index
76
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
37
## name
robot-at(x20, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(77)) and($a(2) $s(77)) and($a(3) $s(77))) : $c(0)) (or(and($a(1) $s(76)) and($a(2) $s(78)) and($a(0) $s(71))) : Bernoulli($c(0.0502497869042534))) ($c(1) : $s(77)) )
## hash index
77
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
38
## name
robot-at(x20, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(78)) and($a(2) $s(78)) and($a(3) $s(78))) : $c(0)) (or(and($a(1) $s(77)) and($a(2) $s(25)) and($a(0) $s(72))) : Bernoulli($c(0.0704949659652642))) ($c(1) : $s(78)) )
## hash index
78
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
39
## name
robot-at(x3, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(79)) and($a(2) $s(79)) and($a(0) $s(79)) and($a(3) $s(79))) : $c(0)) (or(and($a(1) $s(26)) and($a(2) $s(80)) and($a(0) $s(73)) and($a(3) $s(82))) : Bernoulli($c(0.847189669648864))) ($c(1) : $s(79)) )
## hash index
79
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
40
## name
robot-at(x3, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(80)) and($a(2) $s(80)) and($a(0) $s(80)) and($a(3) $s(80))) : $c(0)) (or(and($a(1) $s(79)) and($a(2) $s(81)) and($a(0) $s(74)) and($a(3) $s(83))) : Bernoulli($c(0.888485555015607))) ($c(1) : $s(80)) )
## hash index
80
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
41
## name
robot-at(x3, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(81)) and($a(2) $s(81)) and($a(0) $s(81)) and($a(3) $s(81))) : $c(0)) (or(and($a(1) $s(80)) and($a(2) $s(27)) and($a(0) $s(75)) and($a(3) $s(84))) : Bernoulli($c(0.845315789820158))) ($c(1) : $s(81)) )
## hash index
81
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
42
## name
robot-at(x4, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(82)) and($a(2) $s(82)) and($a(0) $s(82)) and($a(3) $s(82))) : $c(0)) (or(and($a(1) $s(28)) and($a(2) $s(83)) and($a(0) $s(79)) and($a(3) $s(85))) : Bernoulli($c(0.807954281610334))) ($c(1) : $s(82)) )
## hash index
82
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
43
## name
robot-at(x4, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(83)) and($a(2) $s(83)) and($a(0) $s(83)) and($a(3) $s(83))) : $c(0)) (or(and($a(1) $s(82)) and($a(2) $s(84)) and($a(0) $s(80)) and($a(3) $s(86))) : Bernoulli($c(0.808807567780572))) ($c(1) : $s(83)) )
## hash index
83
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
44
## name
robot-at(x4, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(84)) and($a(2) $s(84)) and($a(0) $s(84)) and($a(3) $s(84))) : $c(0)) (or(and($a(1) $s(83)) and($a(2) $s(29)) and($a(0) $s(81)) and($a(3) $s(87))) : Bernoulli($c(0.816093045683414))) ($c(1) : $s(84)) )
## hash index
84
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
45
## name
robot-at(x5, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(85)) and($a(2) $s(85)) and($a(0) $s(85)) and($a(3) $s(85))) : $c(0)) (or(and($a(1) $s(30)) and($a(2) $s(86)) and($a(0) $s(82)) and($a(3) $s(88))) : Bernoulli($c(0.792198697318951))) ($c(1) : $s(85)) )
## hash index
85
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
46
## name
robot-at(x5, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(86)) and($a(2) $s(86)) and($a(0) $s(86)) and($a(3) $s(86))) : $c(0)) (or(and($a(1) $s(85)) and($a(2) $s(87)) and($a(0) $s(83)) and($a(3) $s(89))) : Bernoulli($c(0.797061511423124))) ($c(1) : $s(86)) )
## hash index
86
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
47
## name
robot-at(x5, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(87)) and($a(2) $s(87)) and($a(0) $s(87)) and($a(3) $s(87))) : $c(0)) (or(and($a(1) $s(86)) and($a(2) $s(31)) and($a(0) $s(84)) and($a(3) $s(90))) : Bernoulli($c(0.756325857765904))) ($c(1) : $s(87)) )
## hash index
87
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
48
## name
robot-at(x6, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(88)) and($a(2) $s(88)) and($a(0) $s(88)) and($a(3) $s(88))) : $c(0)) (or(and($a(1) $s(32)) and($a(2) $s(89)) and($a(0) $s(85)) and($a(3) $s(91))) : Bernoulli($c(0.727641292492448))) ($c(1) : $s(88)) )
## hash index
88
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
49
## name
robot-at(x6, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(89)) and($a(2) $s(89)) and($a(0) $s(89)) and($a(3) $s(89))) : $c(0)) (or(and($a(1) $s(88)) and($a(2) $s(90)) and($a(0) $s(86)) and($a(3) $s(92))) : Bernoulli($c(0.742951732515996))) ($c(1) : $s(89)) )
## hash index
89
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
50
## name
robot-at(x6, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(90)) and($a(2) $s(90)) and($a(0) $s(90)) and($a(3) $s(90))) : $c(0)) (or(and($a(1) $s(89)) and($a(2) $s(33)) and($a(0) $s(87)) and($a(3) $s(93))) : Bernoulli($c(0.707982363158684))) ($c(1) : $s(90)) )
## hash index
90
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
51
## name
robot-at(x7, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(91)) and($a(2) $s(91)) and($a(0) $s(91)) and($a(3) $s(91))) : $c(0)) (or(and($a(1) $s(34)) and($a(2) $s(92)) and($a(0) $s(88)) and($a(3) $s(94))) : Bernoulli($c(0.70411444073544))) ($c(1) : $s(91)) )
## hash index
91
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
52
## name
robot-at(x7, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(92)) and($a(2) $s(92)) and($a(0) $s(92)) and($a(3) $s(92))) : $c(0)) (or(and($a(1) $s(91)) and($a(2) $s(93)) and($a(0) $s(89)) and($a(3) $s(95))) : Bernoulli($c(0.696741217875449))) ($c(1) : $s(92)) )
## hash index
92
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
53
## name
robot-at(x7, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(93)) and($a(2) $s(93)) and($a(0) $s(93)) and($a(3) $s(93))) : $c(0)) (or(and($a(1) $s(92)) and($a(2) $s(35)) and($a(0) $s(90)) and($a(3) $s(96))) : Bernoulli($c(0.677969639773113))) ($c(1) : $s(93)) )
## hash index
93
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
54
## name
robot-at(x8, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(94)) and($a(2) $s(94)) and($a(0) $s(94)) and($a(3) $s(94))) : $c(0)) (or(and($a(1) $s(36)) and($a(2) $s(95)) and($a(0) $s(91)) and($a(3) $s(97))) : Bernoulli($c(0.633134895206533))) ($c(1) : $s(94)) )
## hash index
94
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
55
## name
robot-at(x8, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(95)) and($a(2) $s(95)) and($a(0) $s(95)) and($a(3) $s(95))) : $c(0)) (or(and($a(1) $s(94)) and($a(2) $s(96)) and($a(0) $s(92)) and($a(3) $s(98))) : Bernoulli($c(0.644502014585157))) ($c(1) : $s(95)) )
## hash index
95
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
56
## name
robot-at(x8, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(96)) and($a(2) $s(96)) and($a(0) $s(96)) and($a(3) $s(96))) : $c(0)) (or(and($a(1) $s(95)) and($a(2) $s(37)) and($a(0) $s(93)) and($a(3) $s(99))) : Bernoulli($c(0.626513763638309))) ($c(1) : $s(96)) )
## hash index
96
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
57
## name
robot-at(x9, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(97)) and($a(2) $s(97)) and($a(0) $s(97)) and($a(3) $s(97))) : $c(0)) (or(and($a(1) $s(38)) and($a(2) $s(98)) and($a(0) $s(94)) and($a(3) $s(43))) : Bernoulli($c(0.587426097043885))) ($c(1) : $s(97)) )
## hash index
97
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
58
## name
robot-at(x9, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(98)) and($a(2) $s(98)) and($a(0) $s(98)) and($a(3) $s(98))) : $c(0)) (or(and($a(1) $s(97)) and($a(2) $s(99)) and($a(0) $s(95)) and($a(3) $s(44))) : Bernoulli($c(0.579395835179331))) ($c(1) : $s(98)) )
## hash index
98
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
59
## name
robot-at(x9, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(25) and($a(1) $s(99)) and($a(2) $s(99)) and($a(0) $s(99)) and($a(3) $s(99))) : $c(0)) (or(and($a(1) $s(98)) and($a(2) $s(39)) and($a(0) $s(96)) and($a(3) $s(45))) : Bernoulli($c(0.603395291860415))) ($c(1) : $s(99)) )
## hash index
99
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4



#####REWARD#####
## formula
-($c(0) ~($s(25)))
## min
-1
## max
0
## independent from actions
1
## hash index
100
## caching type
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 1 0 0 
## relevant preconditions
0


## index
4
## state
1 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####
## index
0

## state fluent hash keys (first line is the number of keys)
3
0 5
22 5
40 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
1

## state fluent hash keys (first line is the number of keys)
3
1 5
23 5
42 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
2

## state fluent hash keys (first line is the number of keys)
4
2 5
4 5
38 5
43 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
3

## state fluent hash keys (first line is the number of keys)
4
3 5
5 5
39 5
45 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
4

## state fluent hash keys (first line is the number of keys)
4
2 10
4 10
6 5
46 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
5

## state fluent hash keys (first line is the number of keys)
4
3 10
5 10
7 5
48 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
6

## state fluent hash keys (first line is the number of keys)
4
4 20
6 10
8 5
49 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
7

## state fluent hash keys (first line is the number of keys)
4
5 20
7 10
9 5
51 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
8

## state fluent hash keys (first line is the number of keys)
4
6 20
8 10
10 5
52 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
9

## state fluent hash keys (first line is the number of keys)
4
7 20
9 10
11 5
54 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
10

## state fluent hash keys (first line is the number of keys)
4
8 20
10 10
12 5
55 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
11

## state fluent hash keys (first line is the number of keys)
4
9 20
11 10
13 5
57 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
12

## state fluent hash keys (first line is the number of keys)
4
10 20
12 10
14 5
58 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
13

## state fluent hash keys (first line is the number of keys)
4
11 20
13 10
15 5
60 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
14

## state fluent hash keys (first line is the number of keys)
4
12 20
14 10
16 5
61 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
15

## state fluent hash keys (first line is the number of keys)
4
13 20
15 10
17 5
63 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
16

## state fluent hash keys (first line is the number of keys)
4
14 20
16 10
18 5
64 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
17

## state fluent hash keys (first line is the number of keys)
4
15 20
17 10
19 5
66 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
18

## state fluent hash keys (first line is the number of keys)
4
16 20
18 10
20 5
67 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
19

## state fluent hash keys (first line is the number of keys)
4
17 20
19 10
21 5
69 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
20

## state fluent hash keys (first line is the number of keys)
4
18 20
20 10
24 5
70 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
21

## state fluent hash keys (first line is the number of keys)
4
19 20
21 10
25 5
72 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
22

## state fluent hash keys (first line is the number of keys)
4
0 10
22 10
26 5
73 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
23

## state fluent hash keys (first line is the number of keys)
4
1 10
23 10
27 5
75 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
24

## state fluent hash keys (first line is the number of keys)
3
20 20
24 10
76 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
25

## state fluent hash keys (first line is the number of keys)
101
0 20
1 20
2 20
3 20
4 40
5 40
6 40
7 40
8 40
9 40
10 40
11 40
12 40
13 40
14 40
15 40
16 40
17 40
18 40
19 40
20 40
21 20
22 20
23 20
24 20
25 10
26 10
27 10
28 5
29 5
30 5
31 5
32 5
33 5
34 5
35 5
36 5
37 5
38 10
39 10
40 10
41 5
42 10
43 10
44 5
45 10
46 10
47 5
48 10
49 10
50 5
51 10
52 10
53 5
54 10
55 10
56 5
57 10
58 10
59 5
60 10
61 10
62 5
63 10
64 10
65 5
66 10
67 10
68 5
69 10
70 10
71 5
72 10
73 10
74 5
75 10
76 10
77 5
78 5
79 5
80 5
81 5
82 5
83 5
84 5
85 5
86 5
87 5
88 5
89 5
90 5
91 5
92 5
93 5
94 5
95 5
96 5
97 5
98 5
99 5
100 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
26

## state fluent hash keys (first line is the number of keys)
4
22 40
26 20
28 10
79 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
27

## state fluent hash keys (first line is the number of keys)
4
23 40
27 20
29 10
81 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
28

## state fluent hash keys (first line is the number of keys)
4
26 40
28 20
30 10
82 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
29

## state fluent hash keys (first line is the number of keys)
4
27 40
29 20
31 10
84 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
30

## state fluent hash keys (first line is the number of keys)
4
28 40
30 20
32 10
85 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
31

## state fluent hash keys (first line is the number of keys)
4
29 40
31 20
33 10
87 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
32

## state fluent hash keys (first line is the number of keys)
4
30 40
32 20
34 10
88 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
33

## state fluent hash keys (first line is the number of keys)
4
31 40
33 20
35 10
90 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
34

## state fluent hash keys (first line is the number of keys)
4
32 40
34 20
36 10
91 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
35

## state fluent hash keys (first line is the number of keys)
4
33 40
35 20
37 10
93 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
36

## state fluent hash keys (first line is the number of keys)
4
34 40
36 20
38 20
94 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
37

## state fluent hash keys (first line is the number of keys)
4
35 40
37 20
39 20
96 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
38

## state fluent hash keys (first line is the number of keys)
4
2 40
36 40
38 40
97 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
39

## state fluent hash keys (first line is the number of keys)
4
3 40
37 40
39 40
99 10
## kleene state fluent hash keys (first line is the number of keys)
0


#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0

## state fluent hash keys (first line is the number of keys)
4
0 40
40 20
41 10
73 20
## kleene state fluent hash keys (first line is the number of keys)
4
39491984 135
40 45
41 15
73 45

## index
1

## state fluent hash keys (first line is the number of keys)
4
40 40
41 20
42 20
74 10
## kleene state fluent hash keys (first line is the number of keys)
4
39501440 135
41 45
42 45
74 15

## index
2

## state fluent hash keys (first line is the number of keys)
4
1 40
41 40
42 40
75 20
## kleene state fluent hash keys (first line is the number of keys)
4
39520304 135
41 135
42 135
75 45

## index
3

## state fluent hash keys (first line is the number of keys)
5
2 80
43 20
44 10
46 20
97 20
## kleene state fluent hash keys (first line is the number of keys)
5
40159264 35016720
43 45
44 15
46 45
97 45

## index
4

## state fluent hash keys (first line is the number of keys)
5
43 40
44 20
45 20
47 10
98 10
## kleene state fluent hash keys (first line is the number of keys)
5
40511248 35016720
44 45
45 45
47 15
98 15

## index
5

## state fluent hash keys (first line is the number of keys)
5
3 80
44 40
45 40
48 20
99 20
## kleene state fluent hash keys (first line is the number of keys)
5
0 35016720
44 135
45 135
48 45
99 45

## index
6

## state fluent hash keys (first line is the number of keys)
5
4 80
43 80
46 40
47 20
49 20
## kleene state fluent hash keys (first line is the number of keys)
5
40530112 35016720
43 405
46 135
47 45
49 45

## index
7

## state fluent hash keys (first line is the number of keys)
5
44 80
46 80
47 40
48 40
50 10
## kleene state fluent hash keys (first line is the number of keys)
5
39649584 35016720
46 405
47 135
48 135
50 15

## index
8

## state fluent hash keys (first line is the number of keys)
5
5 80
45 80
47 80
48 80
51 20
## kleene state fluent hash keys (first line is the number of keys)
5
39668240 35016720
45 405
47 405
48 405
51 45

## index
9

## state fluent hash keys (first line is the number of keys)
5
6 80
46 160
49 40
50 20
52 20
## kleene state fluent hash keys (first line is the number of keys)
5
39686704 35016720
46 1215
49 135
50 45
52 45

## index
10

## state fluent hash keys (first line is the number of keys)
5
47 160
49 80
50 40
51 40
53 10
## kleene state fluent hash keys (first line is the number of keys)
5
40642576 39742272
49 405
50 135
51 135
53 15

## index
11

## state fluent hash keys (first line is the number of keys)
5
7 80
48 160
50 80
51 80
54 20
## kleene state fluent hash keys (first line is the number of keys)
5
39723888 39760944
48 1215
50 405
51 405
54 45

## index
12

## state fluent hash keys (first line is the number of keys)
5
8 80
49 160
52 40
53 20
55 20
## kleene state fluent hash keys (first line is the number of keys)
5
39742272 39779472
49 1215
52 135
53 45
55 45

## index
13

## state fluent hash keys (first line is the number of keys)
5
50 160
52 80
53 40
54 40
56 10
## kleene state fluent hash keys (first line is the number of keys)
5
39760944 39797904
52 405
53 135
54 135
56 15

## index
14

## state fluent hash keys (first line is the number of keys)
5
9 80
51 160
53 80
54 80
57 20
## kleene state fluent hash keys (first line is the number of keys)
5
39779472 39816528
51 1215
53 405
54 405
57 45

## index
15

## state fluent hash keys (first line is the number of keys)
5
10 80
52 160
55 40
56 20
58 20
## kleene state fluent hash keys (first line is the number of keys)
5
39797904 39835056
52 1215
55 135
56 45
58 45

## index
16

## state fluent hash keys (first line is the number of keys)
5
53 160
55 80
56 40
57 40
59 10
## kleene state fluent hash keys (first line is the number of keys)
5
39816528 39853488
55 405
56 135
57 135
59 15

## index
17

## state fluent hash keys (first line is the number of keys)
5
11 80
54 160
56 80
57 80
60 20
## kleene state fluent hash keys (first line is the number of keys)
5
39835056 39872112
54 1215
56 405
57 405
60 45

## index
18

## state fluent hash keys (first line is the number of keys)
5
12 80
55 160
58 40
59 20
61 20
## kleene state fluent hash keys (first line is the number of keys)
5
39853488 39890640
55 1215
58 135
59 45
61 45

## index
19

## state fluent hash keys (first line is the number of keys)
5
56 160
58 80
59 40
60 40
62 10
## kleene state fluent hash keys (first line is the number of keys)
5
39872112 39909072
58 405
59 135
60 135
62 15

## index
20

## state fluent hash keys (first line is the number of keys)
5
13 80
57 160
59 80
60 80
63 20
## kleene state fluent hash keys (first line is the number of keys)
5
39890640 39929760
57 1215
59 405
60 405
63 45

## index
21

## state fluent hash keys (first line is the number of keys)
5
14 80
58 160
61 40
62 20
64 20
## kleene state fluent hash keys (first line is the number of keys)
5
14 405
58 1215
61 135
62 45
64 45

## index
22

## state fluent hash keys (first line is the number of keys)
5
59 160
61 80
62 40
63 40
65 10
## kleene state fluent hash keys (first line is the number of keys)
5
39929760 39968784
61 405
62 135
63 135
65 15

## index
23

## state fluent hash keys (first line is the number of keys)
5
15 80
60 160
62 80
63 80
66 20
## kleene state fluent hash keys (first line is the number of keys)
5
39950352 39987408
60 1215
62 405
63 405
66 45

## index
24

## state fluent hash keys (first line is the number of keys)
5
16 80
61 160
64 40
65 20
67 20
## kleene state fluent hash keys (first line is the number of keys)
5
39968784 40005936
61 1215
64 135
65 45
67 45

## index
25

## state fluent hash keys (first line is the number of keys)
5
62 160
64 80
65 40
66 40
68 10
## kleene state fluent hash keys (first line is the number of keys)
5
39987408 40024368
64 405
65 135
66 135
68 15

## index
26

## state fluent hash keys (first line is the number of keys)
5
17 80
63 160
65 80
66 80
69 20
## kleene state fluent hash keys (first line is the number of keys)
5
40005936 40042992
63 1215
65 405
66 405
69 45

## index
27

## state fluent hash keys (first line is the number of keys)
5
18 80
64 160
67 40
68 20
70 20
## kleene state fluent hash keys (first line is the number of keys)
5
40024368 40061520
64 1215
67 135
68 45
70 45

## index
28

## state fluent hash keys (first line is the number of keys)
5
65 160
67 80
68 40
69 40
71 10
## kleene state fluent hash keys (first line is the number of keys)
5
40042992 40079904
67 405
68 135
69 135
71 15

## index
29

## state fluent hash keys (first line is the number of keys)
5
19 80
66 160
68 80
69 80
72 20
## kleene state fluent hash keys (first line is the number of keys)
5
40061520 40144640
66 1215
68 405
69 405
72 45

## index
30

## state fluent hash keys (first line is the number of keys)
5
20 80
67 160
70 40
71 20
76 20
## kleene state fluent hash keys (first line is the number of keys)
5
40079904 40154272
67 1215
70 135
71 45
76 45

## index
31

## state fluent hash keys (first line is the number of keys)
5
68 160
70 80
71 40
72 40
77 10
## kleene state fluent hash keys (first line is the number of keys)
5
40144640 40159008
70 405
71 135
72 135
77 15

## index
32

## state fluent hash keys (first line is the number of keys)
5
21 40
69 160
71 80
72 80
78 10
## kleene state fluent hash keys (first line is the number of keys)
5
40154272 40177728
69 1215
71 405
72 405
78 15

## index
33

## state fluent hash keys (first line is the number of keys)
5
22 80
40 80
73 40
74 20
79 20
## kleene state fluent hash keys (first line is the number of keys)
5
40159008 40196256
40 405
73 135
74 45
79 45

## index
34

## state fluent hash keys (first line is the number of keys)
5
41 80
73 80
74 40
75 40
80 10
## kleene state fluent hash keys (first line is the number of keys)
5
40177728 40214768
73 405
74 135
75 135
80 15

## index
35

## state fluent hash keys (first line is the number of keys)
5
23 80
42 80
74 80
75 80
81 20
## kleene state fluent hash keys (first line is the number of keys)
5
40196256 40233392
42 405
74 405
75 405
81 45

## index
36

## state fluent hash keys (first line is the number of keys)
4
24 40
70 160
76 40
77 20
## kleene state fluent hash keys (first line is the number of keys)
4
39520384 135
70 1215
76 135
77 45

## index
37

## state fluent hash keys (first line is the number of keys)
4
71 160
76 80
77 40
78 20
## kleene state fluent hash keys (first line is the number of keys)
4
39576000 1215
76 405
77 135
78 45

## index
38

## state fluent hash keys (first line is the number of keys)
4
25 20
72 160
77 80
78 40
## kleene state fluent hash keys (first line is the number of keys)
4
39594496 45
72 1215
77 405
78 135

## index
39

## state fluent hash keys (first line is the number of keys)
5
26 80
73 160
79 40
80 20
82 20
## kleene state fluent hash keys (first line is the number of keys)
5
40214768 40251920
73 1215
79 135
80 45
82 45

## index
40

## state fluent hash keys (first line is the number of keys)
5
74 160
79 80
80 40
81 40
83 10
## kleene state fluent hash keys (first line is the number of keys)
5
40233392 40270352
79 405
80 135
81 135
83 15

## index
41

## state fluent hash keys (first line is the number of keys)
5
27 80
75 160
80 80
81 80
84 20
## kleene state fluent hash keys (first line is the number of keys)
5
40251920 40288976
75 1215
80 405
81 405
84 45

## index
42

## state fluent hash keys (first line is the number of keys)
5
28 80
79 160
82 40
83 20
85 20
## kleene state fluent hash keys (first line is the number of keys)
5
40270352 40307504
79 1215
82 135
83 45
85 45

## index
43

## state fluent hash keys (first line is the number of keys)
5
80 160
82 80
83 40
84 40
86 10
## kleene state fluent hash keys (first line is the number of keys)
5
40288976 40325936
82 405
83 135
84 135
86 15

## index
44

## state fluent hash keys (first line is the number of keys)
5
29 80
81 160
83 80
84 80
87 20
## kleene state fluent hash keys (first line is the number of keys)
5
40307504 40344560
81 1215
83 405
84 405
87 45

## index
45

## state fluent hash keys (first line is the number of keys)
5
30 80
82 160
85 40
86 20
88 20
## kleene state fluent hash keys (first line is the number of keys)
5
40325936 40363088
82 1215
85 135
86 45
88 45

## index
46

## state fluent hash keys (first line is the number of keys)
5
83 160
85 80
86 40
87 40
89 10
## kleene state fluent hash keys (first line is the number of keys)
5
40344560 40381520
85 405
86 135
87 135
89 15

## index
47

## state fluent hash keys (first line is the number of keys)
5
31 80
84 160
86 80
87 80
90 20
## kleene state fluent hash keys (first line is the number of keys)
5
40363088 40400144
84 1215
86 405
87 405
90 45

## index
48

## state fluent hash keys (first line is the number of keys)
5
32 80
85 160
88 40
89 20
91 20
## kleene state fluent hash keys (first line is the number of keys)
5
40381520 40418672
85 1215
88 135
89 45
91 45

## index
49

## state fluent hash keys (first line is the number of keys)
5
86 160
88 80
89 40
90 40
92 10
## kleene state fluent hash keys (first line is the number of keys)
5
40400144 40437104
88 405
89 135
90 135
92 15

## index
50

## state fluent hash keys (first line is the number of keys)
5
33 80
87 160
89 80
90 80
93 20
## kleene state fluent hash keys (first line is the number of keys)
5
40418672 40455632
87 1215
89 405
90 405
93 45

## index
51

## state fluent hash keys (first line is the number of keys)
5
34 80
88 160
91 40
92 20
94 20
## kleene state fluent hash keys (first line is the number of keys)
5
40437104 40474144
88 1215
91 135
92 45
94 45

## index
52

## state fluent hash keys (first line is the number of keys)
5
89 160
91 80
92 40
93 40
95 10
## kleene state fluent hash keys (first line is the number of keys)
5
40455632 40492656
91 405
92 135
93 135
95 15

## index
53

## state fluent hash keys (first line is the number of keys)
5
35 80
90 160
92 80
93 80
96 20
## kleene state fluent hash keys (first line is the number of keys)
5
40474144 40511376
90 1215
92 405
93 405
96 45

## index
54

## state fluent hash keys (first line is the number of keys)
5
36 80
91 160
94 40
95 20
97 40
## kleene state fluent hash keys (first line is the number of keys)
5
40492656 40530240
91 1215
94 135
95 45
97 135

## index
55

## state fluent hash keys (first line is the number of keys)
5
92 160
94 80
95 40
96 40
98 20
## kleene state fluent hash keys (first line is the number of keys)
5
40511376 40549344
94 405
95 135
96 135
98 45

## index
56

## state fluent hash keys (first line is the number of keys)
5
37 80
93 160
95 80
96 80
99 40
## kleene state fluent hash keys (first line is the number of keys)
5
40530240 139716089416672
93 1215
95 405
96 405
99 135

## index
57

## state fluent hash keys (first line is the number of keys)
5
38 80
43 160
94 160
97 80
98 40
## kleene state fluent hash keys (first line is the number of keys)
5
38 405
43 1215
94 1215
97 405
98 135

## index
58

## state fluent hash keys (first line is the number of keys)
5
44 160
95 160
97 160
98 80
99 80
## kleene state fluent hash keys (first line is the number of keys)
5
44 1215
95 1215
97 1215
98 405
99 405

## index
59

## state fluent hash keys (first line is the number of keys)
5
39 80
45 160
96 160
98 160
99 160
## kleene state fluent hash keys (first line is the number of keys)
5
39 405
45 1215
96 1215
98 1215
99 1215

