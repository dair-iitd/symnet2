#####TASK##### Here
## name
elevators_inst_mdp__5002
## horizon
100
## discount factor
1
## number of action fluents
8
## number of det state fluents
24
## number of prob state fluents
12
## number of preconds
0
## number of actions
9
## number of hashing functions
37
## initial state
1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## 1 if task is deterministic
0
## 1 if state hashing possible
1
## 1 if kleene state hashing possible
1


#####ACTION FLUENTS#####
## index
0
## name
close-door(e0)
## number of values
2
## values
0 false
1 true

## index
1
## name
close-door(e1)
## number of values
2
## values
0 false
1 true

## index
2
## name
move-current-dir(e0)
## number of values
2
## values
0 false
1 true

## index
3
## name
move-current-dir(e1)
## number of values
2
## values
0 false
1 true

## index
4
## name
open-door-going-down(e0)
## number of values
2
## values
0 false
1 true

## index
5
## name
open-door-going-down(e1)
## number of values
2
## values
0 false
1 true

## index
6
## name
open-door-going-up(e0)
## number of values
2
## values
0 false
1 true

## index
7
## name
open-door-going-up(e1)
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####
## index
0
## name
elevator-at-floor(e0, f0)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(16)) ~($a(2))) : $s(0)) (and($a(2) ~($s(18)) $s(1)) : $c(1)) (and($a(2) $s(18) ~($s(0))) : $s(0)) (and($a(2) ~($s(18))) : $s(0)) ($c(1) : $c(0)) )
## hash index
0
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0

## index
1
## name
elevator-at-floor(e0, f1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(16)) ~($a(2))) : $s(1)) (and($a(2) $s(18) $s(0)) : $c(1)) (and($a(2) ~($s(18)) $s(2)) : $c(1)) (and($a(2) $s(18) ~($s(1))) : $s(1)) (and($a(2) ~($s(18)) ~($s(1))) : $s(1)) ($c(1) : $c(0)) )
## hash index
1
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0

## index
2
## name
elevator-at-floor(e0, f2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(16)) ~($a(2))) : $s(2)) (and($a(2) $s(18) $s(1)) : $c(1)) (and($a(2) ~($s(18)) $s(3)) : $c(1)) (and($a(2) $s(18) ~($s(2))) : $s(2)) (and($a(2) ~($s(18)) ~($s(2))) : $s(2)) ($c(1) : $c(0)) )
## hash index
2
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0

## index
3
## name
elevator-at-floor(e0, f3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(16)) ~($a(2))) : $s(3)) (and($a(2) $s(18) $s(2)) : $c(1)) (and($a(2) ~($s(18)) $s(4)) : $c(1)) (and($a(2) $s(18) ~($s(3))) : $s(3)) (and($a(2) ~($s(18)) ~($s(3))) : $s(3)) ($c(1) : $c(0)) )
## hash index
3
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0

## index
4
## name
elevator-at-floor(e0, f4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(16)) ~($a(2))) : $s(4)) (and($a(2) $s(18) $s(3)) : $c(1)) (and($a(2) ~($s(18)) $s(5)) : $c(1)) (and($a(2) $s(18) ~($s(4))) : $s(4)) (and($a(2) ~($s(18)) ~($s(4))) : $s(4)) ($c(1) : $c(0)) )
## hash index
4
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0

## index
5
## name
elevator-at-floor(e0, f5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(16)) ~($a(2))) : $s(5)) (and($a(2) $s(18) $s(4)) : $c(1)) (and($a(2) ~($s(18)) $s(6)) : $c(1)) (and($a(2) $s(18) ~($s(5))) : $s(5)) (and($a(2) ~($s(18)) ~($s(5))) : $s(5)) ($c(1) : $c(0)) )
## hash index
5
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0

## index
6
## name
elevator-at-floor(e0, f6)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(16)) ~($a(2))) : $s(6)) (and($a(2) $s(18) $s(5)) : $c(1)) (and($a(2) ~($s(18)) $s(7)) : $c(1)) (and($a(2) $s(18) ~($s(6))) : $s(6)) (and($a(2) ~($s(18)) ~($s(6))) : $s(6)) ($c(1) : $c(0)) )
## hash index
6
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0

## index
7
## name
elevator-at-floor(e0, f7)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(16)) ~($a(2))) : $s(7)) (and($a(2) $s(18) $s(6)) : $c(1)) (and($a(2) $s(18)) : $s(7)) (and($a(2) ~($s(18)) ~($s(7))) : $s(7)) ($c(1) : $c(0)) )
## hash index
7
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0

## index
8
## name
elevator-at-floor(e1, f0)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(17)) ~($a(3))) : $s(8)) (and($a(3) ~($s(19)) $s(9)) : $c(1)) (and($a(3) $s(19) ~($s(8))) : $s(8)) (and($a(3) ~($s(19))) : $s(8)) ($c(1) : $c(0)) )
## hash index
8
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0

## index
9
## name
elevator-at-floor(e1, f1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(17)) ~($a(3))) : $s(9)) (and($a(3) $s(19) $s(8)) : $c(1)) (and($a(3) ~($s(19)) $s(10)) : $c(1)) (and($a(3) $s(19) ~($s(9))) : $s(9)) (and($a(3) ~($s(19)) ~($s(9))) : $s(9)) ($c(1) : $c(0)) )
## hash index
9
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0

## index
10
## name
elevator-at-floor(e1, f2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(17)) ~($a(3))) : $s(10)) (and($a(3) $s(19) $s(9)) : $c(1)) (and($a(3) ~($s(19)) $s(11)) : $c(1)) (and($a(3) $s(19) ~($s(10))) : $s(10)) (and($a(3) ~($s(19)) ~($s(10))) : $s(10)) ($c(1) : $c(0)) )
## hash index
10
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0

## index
11
## name
elevator-at-floor(e1, f3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(17)) ~($a(3))) : $s(11)) (and($a(3) $s(19) $s(10)) : $c(1)) (and($a(3) ~($s(19)) $s(12)) : $c(1)) (and($a(3) $s(19) ~($s(11))) : $s(11)) (and($a(3) ~($s(19)) ~($s(11))) : $s(11)) ($c(1) : $c(0)) )
## hash index
11
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0

## index
12
## name
elevator-at-floor(e1, f4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(17)) ~($a(3))) : $s(12)) (and($a(3) $s(19) $s(11)) : $c(1)) (and($a(3) ~($s(19)) $s(13)) : $c(1)) (and($a(3) $s(19) ~($s(12))) : $s(12)) (and($a(3) ~($s(19)) ~($s(12))) : $s(12)) ($c(1) : $c(0)) )
## hash index
12
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0

## index
13
## name
elevator-at-floor(e1, f5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(17)) ~($a(3))) : $s(13)) (and($a(3) $s(19) $s(12)) : $c(1)) (and($a(3) ~($s(19)) $s(14)) : $c(1)) (and($a(3) $s(19) ~($s(13))) : $s(13)) (and($a(3) ~($s(19)) ~($s(13))) : $s(13)) ($c(1) : $c(0)) )
## hash index
13
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0

## index
14
## name
elevator-at-floor(e1, f6)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(17)) ~($a(3))) : $s(14)) (and($a(3) $s(19) $s(13)) : $c(1)) (and($a(3) ~($s(19)) $s(15)) : $c(1)) (and($a(3) $s(19) ~($s(14))) : $s(14)) (and($a(3) ~($s(19)) ~($s(14))) : $s(14)) ($c(1) : $c(0)) )
## hash index
14
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0

## index
15
## name
elevator-at-floor(e1, f7)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(17)) ~($a(3))) : $s(15)) (and($a(3) $s(19) $s(14)) : $c(1)) (and($a(3) $s(19)) : $s(15)) (and($a(3) ~($s(19)) ~($s(15))) : $s(15)) ($c(1) : $c(0)) )
## hash index
15
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0

## index
16
## name
elevator-closed(e0)
## number of values
2
## values
0 false
1 true
## formula
or(and($s(16) ~($a(6)) ~($a(4))) $a(0))
## hash index
16
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 2
5 0
6 0
7 0
8 3

## index
17
## name
elevator-closed(e1)
## number of values
2
## values
0 false
1 true
## formula
or(and($s(17) ~($a(7)) ~($a(5))) $a(1))
## hash index
17
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 2
4 0
5 0
6 0
7 3
8 0

## index
18
## name
elevator-dir-up(e0)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(6) : $c(1)) ($a(4) : $c(0)) ($c(1) : $s(18)) )
## hash index
18
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 2
5 0
6 0
7 0
8 0

## index
19
## name
elevator-dir-up(e1)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(7) : $c(1)) ($a(5) : $c(0)) ($c(1) : $s(19)) )
## hash index
19
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 2
4 0
5 0
6 0
7 0
8 0

## index
20
## name
person-in-elevator-going-down(e0)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(20) : ~($s(0))) ($c(1) : or(and($s(1) ~($s(18)) ~($s(16)) $s(24)) and($s(2) ~($s(18)) ~($s(16)) $s(25)) and($s(3) ~($s(18)) ~($s(16)) $s(26)) and($s(4) ~($s(18)) ~($s(16)) $s(27)) and($s(5) ~($s(18)) ~($s(16)) $s(28)) and($s(6) ~($s(18)) ~($s(16)) $s(29)))) )
## hash index
20
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
21
## name
person-in-elevator-going-down(e1)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(21) : ~($s(8))) ($c(1) : or(and($s(9) ~($s(19)) ~($s(17)) $s(24)) and($s(10) ~($s(19)) ~($s(17)) $s(25)) and($s(11) ~($s(19)) ~($s(17)) $s(26)) and($s(12) ~($s(19)) ~($s(17)) $s(27)) and($s(13) ~($s(19)) ~($s(17)) $s(28)) and($s(14) ~($s(19)) ~($s(17)) $s(29)))) )
## hash index
21
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
22
## name
person-in-elevator-going-up(e0)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(22) : ~($s(7))) ($c(1) : or(and($s(1) $s(18) ~($s(16)) $s(30)) and($s(2) $s(18) ~($s(16)) $s(31)) and($s(3) $s(18) ~($s(16)) $s(32)) and($s(4) $s(18) ~($s(16)) $s(33)) and($s(5) $s(18) ~($s(16)) $s(34)) and($s(6) $s(18) ~($s(16)) $s(35)))) )
## hash index
22
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
23
## name
person-in-elevator-going-up(e1)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(23) : ~($s(15))) ($c(1) : or(and($s(9) $s(19) ~($s(17)) $s(30)) and($s(10) $s(19) ~($s(17)) $s(31)) and($s(11) $s(19) ~($s(17)) $s(32)) and($s(12) $s(19) ~($s(17)) $s(33)) and($s(13) $s(19) ~($s(17)) $s(34)) and($s(14) $s(19) ~($s(17)) $s(35)))) )
## hash index
23
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0



#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
person-waiting-down(f1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(24) ~(or(and($s(1) ~($s(18)) ~($s(16))) and($s(9) ~($s(19)) ~($s(17)))))) : $c(1)) ($c(1) : Bernoulli($c(0.0033532497))) )
## hash index
24
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
1
## name
person-waiting-down(f2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(25) ~(or(and($s(2) ~($s(18)) ~($s(16))) and($s(10) ~($s(19)) ~($s(17)))))) : $c(1)) ($c(1) : Bernoulli($c(0.0067494074))) )
## hash index
25
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
2
## name
person-waiting-down(f3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(26) ~(or(and($s(3) ~($s(18)) ~($s(16))) and($s(11) ~($s(19)) ~($s(17)))))) : $c(1)) ($c(1) : Bernoulli($c(0.00424126))) )
## hash index
26
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
3
## name
person-waiting-down(f4)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(27) ~(or(and($s(4) ~($s(18)) ~($s(16))) and($s(12) ~($s(19)) ~($s(17)))))) : $c(1)) ($c(1) : Bernoulli($c(0.0036382969))) )
## hash index
27
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
4
## name
person-waiting-down(f5)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(28) ~(or(and($s(5) ~($s(18)) ~($s(16))) and($s(13) ~($s(19)) ~($s(17)))))) : $c(1)) ($c(1) : Bernoulli($c(0.0060022026))) )
## hash index
28
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
5
## name
person-waiting-down(f6)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(29) ~(or(and($s(6) ~($s(18)) ~($s(16))) and($s(14) ~($s(19)) ~($s(17)))))) : $c(1)) ($c(1) : Bernoulli($c(0.0037517133))) )
## hash index
29
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
6
## name
person-waiting-up(f1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(30) ~(or(and($s(1) $s(18) ~($s(16))) and($s(9) $s(19) ~($s(17)))))) : $c(1)) ($c(1) : Bernoulli($c(0.0033532497))) )
## hash index
30
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
7
## name
person-waiting-up(f2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(31) ~(or(and($s(2) $s(18) ~($s(16))) and($s(10) $s(19) ~($s(17)))))) : $c(1)) ($c(1) : Bernoulli($c(0.0067494074))) )
## hash index
31
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
8
## name
person-waiting-up(f3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(32) ~(or(and($s(3) $s(18) ~($s(16))) and($s(11) $s(19) ~($s(17)))))) : $c(1)) ($c(1) : Bernoulli($c(0.00424126))) )
## hash index
32
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
9
## name
person-waiting-up(f4)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(33) ~(or(and($s(4) $s(18) ~($s(16))) and($s(12) $s(19) ~($s(17)))))) : $c(1)) ($c(1) : Bernoulli($c(0.0036382969))) )
## hash index
33
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
10
## name
person-waiting-up(f5)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(34) ~(or(and($s(5) $s(18) ~($s(16))) and($s(13) $s(19) ~($s(17)))))) : $c(1)) ($c(1) : Bernoulli($c(0.0060022026))) )
## hash index
34
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
11
## name
person-waiting-up(f6)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(35) ~(or(and($s(6) $s(18) ~($s(16))) and($s(14) $s(19) ~($s(17)))))) : $c(1)) ($c(1) : Bernoulli($c(0.0037517133))) )
## hash index
35
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0



#####REWARD#####
## formula
+(*(and($s(22) $s(18)) $c(-0.75)) *(and($s(23) $s(19)) $c(-0.75)) *(and($s(20) ~($s(18))) $c(-0.75)) *(and($s(21) ~($s(19))) $c(-0.75)) *(and($s(22) ~($s(18))) $c(-3)) *(and($s(23) ~($s(19))) $c(-3)) *(and($s(20) $s(18)) $c(-3)) *(and($s(21) $s(19)) $c(-3)) -(-($c(0) $s(30)) $s(24)) -(-($c(0) $s(31)) $s(25)) -(-($c(0) $s(32)) $s(26)) -(-($c(0) $s(33)) $s(27)) -(-($c(0) $s(34)) $s(28)) -(-($c(0) $s(35)) $s(29)))
## min
-27
## max
0
## independent from actions
1
## hash index
36
## caching type
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
4
## state
0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
5
## state
0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
6
## state
0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
7
## state
0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
8
## state
1 0 0 0 0 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
0 2
1 2
20 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
1
## state hash key (for each value in the domain)
0 2
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
0 4
1 4
2 2
20 2
22 1
24 1
30 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
2
## state hash key (for each value in the domain)
0 4
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
1 8
2 4
3 2
20 4
22 2
25 1
31 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
3
## state hash key (for each value in the domain)
0 8
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
2 8
3 4
4 2
20 8
22 4
26 1
32 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
4
## state hash key (for each value in the domain)
0 16
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
3 8
4 4
5 2
20 16
22 8
27 1
33 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
5
## state hash key (for each value in the domain)
0 32
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
4 8
5 4
6 2
20 32
22 16
28 1
34 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
6
## state hash key (for each value in the domain)
0 64
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
5 8
6 4
7 2
20 64
22 32
29 1
35 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
7
## state hash key (for each value in the domain)
0 128
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
6 8
7 4
22 64
## kleene state fluent hash keys (first line is the number of keys)
0

## index
8
## state hash key (for each value in the domain)
0 256
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
8 2
9 2
21 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
9
## state hash key (for each value in the domain)
0 512
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
8 4
9 4
10 2
21 2
23 1
24 2
30 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
10
## state hash key (for each value in the domain)
0 1024
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
9 8
10 4
11 2
21 4
23 2
25 2
31 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
11
## state hash key (for each value in the domain)
0 2048
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
10 8
11 4
12 2
21 8
23 4
26 2
32 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
12
## state hash key (for each value in the domain)
0 4096
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
11 8
12 4
13 2
21 16
23 8
27 2
33 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
13
## state hash key (for each value in the domain)
0 8192
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
12 8
13 4
14 2
21 32
23 16
28 2
34 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
14
## state hash key (for each value in the domain)
0 16384
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
13 8
14 4
15 2
21 64
23 32
29 2
35 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
15
## state hash key (for each value in the domain)
0 32768
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
14 8
15 4
23 64
## kleene state fluent hash keys (first line is the number of keys)
0

## index
16
## state hash key (for each value in the domain)
0 65536
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
23
0 8
1 16
2 16
3 16
4 16
5 16
6 16
7 8
16 4
20 128
22 128
24 4
25 4
26 4
27 4
28 4
29 4
30 4
31 4
32 4
33 4
34 4
35 4
## kleene state fluent hash keys (first line is the number of keys)
0

## index
17
## state hash key (for each value in the domain)
0 131072
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
23
8 8
9 16
10 16
11 16
12 16
13 16
14 16
15 8
17 4
21 128
23 128
24 8
25 8
26 8
27 8
28 8
29 8
30 8
31 8
32 8
33 8
34 8
35 8
## kleene state fluent hash keys (first line is the number of keys)
0

## index
18
## state hash key (for each value in the domain)
0 262144
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
24
0 16
1 32
2 32
3 32
4 32
5 32
6 32
7 16
18 3
20 256
22 256
24 16
25 16
26 16
27 16
28 16
29 16
30 16
31 16
32 16
33 16
34 16
35 16
36 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
19
## state hash key (for each value in the domain)
0 524288
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
24
8 16
9 32
10 32
11 32
12 32
13 32
14 32
15 16
19 3
21 256
23 256
24 32
25 32
26 32
27 32
28 32
29 32
30 32
31 32
32 32
33 32
34 32
35 32
36 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
20
## state hash key (for each value in the domain)
0 1048576
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
20 512
36 4
## kleene state fluent hash keys (first line is the number of keys)
0

## index
21
## state hash key (for each value in the domain)
0 2097152
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
21 512
36 8
## kleene state fluent hash keys (first line is the number of keys)
0

## index
22
## state hash key (for each value in the domain)
0 4194304
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
22 512
36 16
## kleene state fluent hash keys (first line is the number of keys)
0

## index
23
## state hash key (for each value in the domain)
0 8388608
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
23 512
36 32
## kleene state fluent hash keys (first line is the number of keys)
0


#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 16777216
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
20 1024
21 1024
24 64
36 64
## kleene state fluent hash keys (first line is the number of keys)
4
29657488 59049
21 59049
24 729
36 729

## index
1
## state hash key (for each value in the domain)
0 33554432
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
20 2048
21 2048
25 64
36 128
## kleene state fluent hash keys (first line is the number of keys)
4
29650528 177147
21 177147
25 729
36 2187

## index
2
## state hash key (for each value in the domain)
0 67108864
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
20 4096
21 4096
26 64
36 256
## kleene state fluent hash keys (first line is the number of keys)
4
29668464 531441
21 531441
26 729
36 6561

## index
3
## state hash key (for each value in the domain)
0 134217728
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
20 8192
21 8192
27 64
36 512
## kleene state fluent hash keys (first line is the number of keys)
4
29663392 1594323
21 1594323
27 729
36 19683

## index
4
## state hash key (for each value in the domain)
0 268435456
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
20 16384
21 16384
28 64
36 1024
## kleene state fluent hash keys (first line is the number of keys)
4
29659600 4782969
21 4782969
28 729
36 59049

## index
5
## state hash key (for each value in the domain)
0 536870912
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
20 32768
21 32768
29 64
36 2048
## kleene state fluent hash keys (first line is the number of keys)
4
29708848 14348907
21 14348907
29 729
36 177147

## index
6
## state hash key (for each value in the domain)
0 1073741824
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
22 1024
23 1024
30 64
36 4096
## kleene state fluent hash keys (first line is the number of keys)
4
29718544 59049
23 59049
30 729
36 531441

## index
7
## state hash key (for each value in the domain)
0 2147483648
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
22 2048
23 2048
31 64
36 8192
## kleene state fluent hash keys (first line is the number of keys)
4
29665552 177147
23 177147
31 729
36 1594323

## index
8
## state hash key (for each value in the domain)
0 4294967296
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
22 4096
23 4096
32 64
36 16384
## kleene state fluent hash keys (first line is the number of keys)
4
29735360 531441
23 531441
32 729
36 4782969

## index
9
## state hash key (for each value in the domain)
0 8589934592
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
22 8192
23 8192
33 64
36 32768
## kleene state fluent hash keys (first line is the number of keys)
4
29742944 1594323
23 1594323
33 729
36 14348907

## index
10
## state hash key (for each value in the domain)
0 17179869184
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
22 16384
23 16384
34 64
36 65536
## kleene state fluent hash keys (first line is the number of keys)
4
29750528 4782969
23 4782969
34 729
36 43046721

## index
11
## state hash key (for each value in the domain)
0 34359738368
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
22 32768
23 32768
35 64
36 131072
## kleene state fluent hash keys (first line is the number of keys)
4
29758112 14348907
23 14348907
35 729
36 129140163

