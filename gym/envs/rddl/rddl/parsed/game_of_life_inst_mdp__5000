#####TASK##### Here
## name
game_of_life_inst_mdp__5000
## horizon
100
## discount factor
1
## number of action fluents
36
## number of det state fluents
0
## number of prob state fluents
36
## number of preconds
0
## number of actions
37
## number of hashing functions
37
## initial state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## 1 if task is deterministic
0
## 1 if state hashing possible
1
## 1 if kleene state hashing possible
1


#####ACTION FLUENTS#####
## index
0
## name
set(x1, y1)
## number of values
2
## values
0 false
1 true

## index
1
## name
set(x1, y2)
## number of values
2
## values
0 false
1 true

## index
2
## name
set(x1, y3)
## number of values
2
## values
0 false
1 true

## index
3
## name
set(x1, y4)
## number of values
2
## values
0 false
1 true

## index
4
## name
set(x1, y5)
## number of values
2
## values
0 false
1 true

## index
5
## name
set(x1, y6)
## number of values
2
## values
0 false
1 true

## index
6
## name
set(x2, y1)
## number of values
2
## values
0 false
1 true

## index
7
## name
set(x2, y2)
## number of values
2
## values
0 false
1 true

## index
8
## name
set(x2, y3)
## number of values
2
## values
0 false
1 true

## index
9
## name
set(x2, y4)
## number of values
2
## values
0 false
1 true

## index
10
## name
set(x2, y5)
## number of values
2
## values
0 false
1 true

## index
11
## name
set(x2, y6)
## number of values
2
## values
0 false
1 true

## index
12
## name
set(x3, y1)
## number of values
2
## values
0 false
1 true

## index
13
## name
set(x3, y2)
## number of values
2
## values
0 false
1 true

## index
14
## name
set(x3, y3)
## number of values
2
## values
0 false
1 true

## index
15
## name
set(x3, y4)
## number of values
2
## values
0 false
1 true

## index
16
## name
set(x3, y5)
## number of values
2
## values
0 false
1 true

## index
17
## name
set(x3, y6)
## number of values
2
## values
0 false
1 true

## index
18
## name
set(x4, y1)
## number of values
2
## values
0 false
1 true

## index
19
## name
set(x4, y2)
## number of values
2
## values
0 false
1 true

## index
20
## name
set(x4, y3)
## number of values
2
## values
0 false
1 true

## index
21
## name
set(x4, y4)
## number of values
2
## values
0 false
1 true

## index
22
## name
set(x4, y5)
## number of values
2
## values
0 false
1 true

## index
23
## name
set(x4, y6)
## number of values
2
## values
0 false
1 true

## index
24
## name
set(x5, y1)
## number of values
2
## values
0 false
1 true

## index
25
## name
set(x5, y2)
## number of values
2
## values
0 false
1 true

## index
26
## name
set(x5, y3)
## number of values
2
## values
0 false
1 true

## index
27
## name
set(x5, y4)
## number of values
2
## values
0 false
1 true

## index
28
## name
set(x5, y5)
## number of values
2
## values
0 false
1 true

## index
29
## name
set(x5, y6)
## number of values
2
## values
0 false
1 true

## index
30
## name
set(x6, y1)
## number of values
2
## values
0 false
1 true

## index
31
## name
set(x6, y2)
## number of values
2
## values
0 false
1 true

## index
32
## name
set(x6, y3)
## number of values
2
## values
0 false
1 true

## index
33
## name
set(x6, y4)
## number of values
2
## values
0 false
1 true

## index
34
## name
set(x6, y5)
## number of values
2
## values
0 false
1 true

## index
35
## name
set(x6, y6)
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####


#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
alive(x1, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(0) >=(+($s(1) $s(6) $s(7)) $c(2)) <=(+($s(1) $s(6) $s(7)) $c(3))) and(~($s(0)) ==(+($s(1) $s(6) $s(7)) $c(3))) $a(0)) : Bernoulli($c(0.949996352))) ($c(1) : Bernoulli($c(0.050003648))) )
## hash index
0
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 1

## index
1
## name
alive(x1, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(1) >=(+($s(0) $s(2) $s(6) $s(7) $s(8)) $c(2)) <=(+($s(0) $s(2) $s(6) $s(7) $s(8)) $c(3))) and(~($s(1)) ==(+($s(0) $s(2) $s(6) $s(7) $s(8)) $c(3))) $a(1)) : Bernoulli($c(0.93442877))) ($c(1) : Bernoulli($c(0.06557123))) )
## hash index
1
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 1
36 0

## index
2
## name
alive(x1, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(2) >=(+($s(1) $s(3) $s(7) $s(8) $s(9)) $c(2)) <=(+($s(1) $s(3) $s(7) $s(8) $s(9)) $c(3))) and(~($s(2)) ==(+($s(1) $s(3) $s(7) $s(8) $s(9)) $c(3))) $a(2)) : Bernoulli($c(0.92995298))) ($c(1) : Bernoulli($c(0.07004702))) )
## hash index
2
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 1
35 0
36 0

## index
3
## name
alive(x1, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(3) >=(+($s(2) $s(4) $s(8) $s(9) $s(10)) $c(2)) <=(+($s(2) $s(4) $s(8) $s(9) $s(10)) $c(3))) and(~($s(3)) ==(+($s(2) $s(4) $s(8) $s(9) $s(10)) $c(3))) $a(3)) : Bernoulli($c(0.91511963))) ($c(1) : Bernoulli($c(0.08488037))) )
## hash index
3
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 1
34 0
35 0
36 0

## index
4
## name
alive(x1, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(4) >=(+($s(3) $s(5) $s(9) $s(10) $s(11)) $c(2)) <=(+($s(3) $s(5) $s(9) $s(10) $s(11)) $c(3))) and(~($s(4)) ==(+($s(3) $s(5) $s(9) $s(10) $s(11)) $c(3))) $a(4)) : Bernoulli($c(0.921529345))) ($c(1) : Bernoulli($c(0.078470655))) )
## hash index
4
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 1
33 0
34 0
35 0
36 0

## index
5
## name
alive(x1, y6)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(5) >=(+($s(4) $s(10) $s(11)) $c(2)) <=(+($s(4) $s(10) $s(11)) $c(3))) and(~($s(5)) ==(+($s(4) $s(10) $s(11)) $c(3))) $a(5)) : Bernoulli($c(0.94192102))) ($c(1) : Bernoulli($c(0.05807898))) )
## hash index
5
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 1
32 0
33 0
34 0
35 0
36 0

## index
6
## name
alive(x2, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(6) >=(+($s(0) $s(1) $s(7) $s(12) $s(13)) $c(2)) <=(+($s(0) $s(1) $s(7) $s(12) $s(13)) $c(3))) and(~($s(6)) ==(+($s(0) $s(1) $s(7) $s(12) $s(13)) $c(3))) $a(6)) : Bernoulli($c(0.946197998))) ($c(1) : Bernoulli($c(0.053802002))) )
## hash index
6
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 0
33 0
34 0
35 0
36 0

## index
7
## name
alive(x2, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(7) >=(+($s(0) $s(1) $s(2) $s(6) $s(8) $s(12) $s(13) $s(14)) $c(2)) <=(+($s(0) $s(1) $s(2) $s(6) $s(8) $s(12) $s(13) $s(14)) $c(3))) and(~($s(7)) ==(+($s(0) $s(1) $s(2) $s(6) $s(8) $s(12) $s(13) $s(14)) $c(3))) $a(7)) : Bernoulli($c(0.941414222))) ($c(1) : Bernoulli($c(0.058585778))) )
## hash index
7
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 1
30 0
31 0
32 0
33 0
34 0
35 0
36 0

## index
8
## name
alive(x2, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(8) >=(+($s(1) $s(2) $s(3) $s(7) $s(9) $s(13) $s(14) $s(15)) $c(2)) <=(+($s(1) $s(2) $s(3) $s(7) $s(9) $s(13) $s(14) $s(15)) $c(3))) and(~($s(8)) ==(+($s(1) $s(2) $s(3) $s(7) $s(9) $s(13) $s(14) $s(15)) $c(3))) $a(8)) : Bernoulli($c(0.968415342))) ($c(1) : Bernoulli($c(0.031584658))) )
## hash index
8
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 1
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0

## index
9
## name
alive(x2, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(9) >=(+($s(2) $s(3) $s(4) $s(8) $s(10) $s(14) $s(15) $s(16)) $c(2)) <=(+($s(2) $s(3) $s(4) $s(8) $s(10) $s(14) $s(15) $s(16)) $c(3))) and(~($s(9)) ==(+($s(2) $s(3) $s(4) $s(8) $s(10) $s(14) $s(15) $s(16)) $c(3))) $a(9)) : Bernoulli($c(0.973944446))) ($c(1) : Bernoulli($c(0.026055554))) )
## hash index
9
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 1
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0

## index
10
## name
alive(x2, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(10) >=(+($s(3) $s(4) $s(5) $s(9) $s(11) $s(15) $s(16) $s(17)) $c(2)) <=(+($s(3) $s(4) $s(5) $s(9) $s(11) $s(15) $s(16) $s(17)) $c(3))) and(~($s(10)) ==(+($s(3) $s(4) $s(5) $s(9) $s(11) $s(15) $s(16) $s(17)) $c(3))) $a(10)) : Bernoulli($c(0.93210859))) ($c(1) : Bernoulli($c(0.06789141))) )
## hash index
10
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 1
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0

## index
11
## name
alive(x2, y6)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(11) >=(+($s(4) $s(5) $s(10) $s(16) $s(17)) $c(2)) <=(+($s(4) $s(5) $s(10) $s(16) $s(17)) $c(3))) and(~($s(11)) ==(+($s(4) $s(5) $s(10) $s(16) $s(17)) $c(3))) $a(11)) : Bernoulli($c(0.97559843))) ($c(1) : Bernoulli($c(0.02440157))) )
## hash index
11
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 1
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0

## index
12
## name
alive(x3, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(12) >=(+($s(6) $s(7) $s(13) $s(18) $s(19)) $c(2)) <=(+($s(6) $s(7) $s(13) $s(18) $s(19)) $c(3))) and(~($s(12)) ==(+($s(6) $s(7) $s(13) $s(18) $s(19)) $c(3))) $a(12)) : Bernoulli($c(0.91487129))) ($c(1) : Bernoulli($c(0.08512871))) )
## hash index
12
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 1
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0

## index
13
## name
alive(x3, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(13) >=(+($s(6) $s(7) $s(8) $s(12) $s(14) $s(18) $s(19) $s(20)) $c(2)) <=(+($s(6) $s(7) $s(8) $s(12) $s(14) $s(18) $s(19) $s(20)) $c(3))) and(~($s(13)) ==(+($s(6) $s(7) $s(8) $s(12) $s(14) $s(18) $s(19) $s(20)) $c(3))) $a(13)) : Bernoulli($c(0.977252236))) ($c(1) : Bernoulli($c(0.022747764))) )
## hash index
13
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 1
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0

## index
14
## name
alive(x3, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(14) >=(+($s(7) $s(8) $s(9) $s(13) $s(15) $s(19) $s(20) $s(21)) $c(2)) <=(+($s(7) $s(8) $s(9) $s(13) $s(15) $s(19) $s(20) $s(21)) $c(3))) and(~($s(14)) ==(+($s(7) $s(8) $s(9) $s(13) $s(15) $s(19) $s(20) $s(21)) $c(3))) $a(14)) : Bernoulli($c(0.956199676))) ($c(1) : Bernoulli($c(0.043800324))) )
## hash index
14
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 1
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0

## index
15
## name
alive(x3, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(15) >=(+($s(8) $s(9) $s(10) $s(14) $s(16) $s(20) $s(21) $s(22)) $c(2)) <=(+($s(8) $s(9) $s(10) $s(14) $s(16) $s(20) $s(21) $s(22)) $c(3))) and(~($s(15)) ==(+($s(8) $s(9) $s(10) $s(14) $s(16) $s(20) $s(21) $s(22)) $c(3))) $a(15)) : Bernoulli($c(0.946282424))) ($c(1) : Bernoulli($c(0.053717576))) )
## hash index
15
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0

## index
16
## name
alive(x3, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(16) >=(+($s(9) $s(10) $s(11) $s(15) $s(17) $s(21) $s(22) $s(23)) $c(2)) <=(+($s(9) $s(10) $s(11) $s(15) $s(17) $s(21) $s(22) $s(23)) $c(3))) and(~($s(16)) ==(+($s(9) $s(10) $s(11) $s(15) $s(17) $s(21) $s(22) $s(23)) $c(3))) $a(16)) : Bernoulli($c(0.927368104))) ($c(1) : Bernoulli($c(0.072631896))) )
## hash index
16
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0

## index
17
## name
alive(x3, y6)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(17) >=(+($s(10) $s(11) $s(16) $s(22) $s(23)) $c(2)) <=(+($s(10) $s(11) $s(16) $s(22) $s(23)) $c(3))) and(~($s(17)) ==(+($s(10) $s(11) $s(16) $s(22) $s(23)) $c(3))) $a(17)) : Bernoulli($c(0.951195836))) ($c(1) : Bernoulli($c(0.048804164))) )
## hash index
17
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 1
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0

## index
18
## name
alive(x4, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(18) >=(+($s(12) $s(13) $s(19) $s(24) $s(25)) $c(2)) <=(+($s(12) $s(13) $s(19) $s(24) $s(25)) $c(3))) and(~($s(18)) ==(+($s(12) $s(13) $s(19) $s(24) $s(25)) $c(3))) $a(18)) : Bernoulli($c(0.948128056))) ($c(1) : Bernoulli($c(0.051871944))) )
## hash index
18
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 1
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0

## index
19
## name
alive(x4, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(19) >=(+($s(12) $s(13) $s(14) $s(18) $s(20) $s(24) $s(25) $s(26)) $c(2)) <=(+($s(12) $s(13) $s(14) $s(18) $s(20) $s(24) $s(25) $s(26)) $c(3))) and(~($s(19)) ==(+($s(12) $s(13) $s(14) $s(18) $s(20) $s(24) $s(25) $s(26)) $c(3))) $a(19)) : Bernoulli($c(0.94809513))) ($c(1) : Bernoulli($c(0.05190487))) )
## hash index
19
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 1
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0

## index
20
## name
alive(x4, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(20) >=(+($s(13) $s(14) $s(15) $s(19) $s(21) $s(25) $s(26) $s(27)) $c(2)) <=(+($s(13) $s(14) $s(15) $s(19) $s(21) $s(25) $s(26) $s(27)) $c(3))) and(~($s(20)) ==(+($s(13) $s(14) $s(15) $s(19) $s(21) $s(25) $s(26) $s(27)) $c(3))) $a(20)) : Bernoulli($c(0.91290924))) ($c(1) : Bernoulli($c(0.08709076))) )
## hash index
20
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 1
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0

## index
21
## name
alive(x4, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(21) >=(+($s(14) $s(15) $s(16) $s(20) $s(22) $s(26) $s(27) $s(28)) $c(2)) <=(+($s(14) $s(15) $s(16) $s(20) $s(22) $s(26) $s(27) $s(28)) $c(3))) and(~($s(21)) ==(+($s(14) $s(15) $s(16) $s(20) $s(22) $s(26) $s(27) $s(28)) $c(3))) $a(21)) : Bernoulli($c(0.96430646))) ($c(1) : Bernoulli($c(0.03569354))) )
## hash index
21
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 1
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0

## index
22
## name
alive(x4, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(22) >=(+($s(15) $s(16) $s(17) $s(21) $s(23) $s(27) $s(28) $s(29)) $c(2)) <=(+($s(15) $s(16) $s(17) $s(21) $s(23) $s(27) $s(28) $s(29)) $c(3))) and(~($s(22)) ==(+($s(15) $s(16) $s(17) $s(21) $s(23) $s(27) $s(28) $s(29)) $c(3))) $a(22)) : Bernoulli($c(0.940147452))) ($c(1) : Bernoulli($c(0.059852548))) )
## hash index
22
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0

## index
23
## name
alive(x4, y6)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(23) >=(+($s(16) $s(17) $s(22) $s(28) $s(29)) $c(2)) <=(+($s(16) $s(17) $s(22) $s(28) $s(29)) $c(3))) and(~($s(23)) ==(+($s(16) $s(17) $s(22) $s(28) $s(29)) $c(3))) $a(23)) : Bernoulli($c(0.93459932))) ($c(1) : Bernoulli($c(0.06540068))) )
## hash index
23
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 1
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0

## index
24
## name
alive(x5, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(24) >=(+($s(18) $s(19) $s(25) $s(30) $s(31)) $c(2)) <=(+($s(18) $s(19) $s(25) $s(30) $s(31)) $c(3))) and(~($s(24)) ==(+($s(18) $s(19) $s(25) $s(30) $s(31)) $c(3))) $a(24)) : Bernoulli($c(0.975327238))) ($c(1) : Bernoulli($c(0.024672762))) )
## hash index
24
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 1
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0

## index
25
## name
alive(x5, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(25) >=(+($s(18) $s(19) $s(20) $s(24) $s(26) $s(30) $s(31) $s(32)) $c(2)) <=(+($s(18) $s(19) $s(20) $s(24) $s(26) $s(30) $s(31) $s(32)) $c(3))) and(~($s(25)) ==(+($s(18) $s(19) $s(20) $s(24) $s(26) $s(30) $s(31) $s(32)) $c(3))) $a(25)) : Bernoulli($c(0.97922391))) ($c(1) : Bernoulli($c(0.02077609))) )
## hash index
25
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 1
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0

## index
26
## name
alive(x5, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(26) >=(+($s(19) $s(20) $s(21) $s(25) $s(27) $s(31) $s(32) $s(33)) $c(2)) <=(+($s(19) $s(20) $s(21) $s(25) $s(27) $s(31) $s(32) $s(33)) $c(3))) and(~($s(26)) ==(+($s(19) $s(20) $s(21) $s(25) $s(27) $s(31) $s(32) $s(33)) $c(3))) $a(26)) : Bernoulli($c(0.969098222))) ($c(1) : Bernoulli($c(0.030901778))) )
## hash index
26
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0

## index
27
## name
alive(x5, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(27) >=(+($s(20) $s(21) $s(22) $s(26) $s(28) $s(32) $s(33) $s(34)) $c(2)) <=(+($s(20) $s(21) $s(22) $s(26) $s(28) $s(32) $s(33) $s(34)) $c(3))) and(~($s(27)) ==(+($s(20) $s(21) $s(22) $s(26) $s(28) $s(32) $s(33) $s(34)) $c(3))) $a(27)) : Bernoulli($c(0.92145473))) ($c(1) : Bernoulli($c(0.07854527))) )
## hash index
27
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0

## index
28
## name
alive(x5, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(28) >=(+($s(21) $s(22) $s(23) $s(27) $s(29) $s(33) $s(34) $s(35)) $c(2)) <=(+($s(21) $s(22) $s(23) $s(27) $s(29) $s(33) $s(34) $s(35)) $c(3))) and(~($s(28)) ==(+($s(21) $s(22) $s(23) $s(27) $s(29) $s(33) $s(34) $s(35)) $c(3))) $a(28)) : Bernoulli($c(0.977166604))) ($c(1) : Bernoulli($c(0.022833396))) )
## hash index
28
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0

## index
29
## name
alive(x5, y6)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(29) >=(+($s(22) $s(23) $s(28) $s(34) $s(35)) $c(2)) <=(+($s(22) $s(23) $s(28) $s(34) $s(35)) $c(3))) and(~($s(29)) ==(+($s(22) $s(23) $s(28) $s(34) $s(35)) $c(3))) $a(29)) : Bernoulli($c(0.95056825))) ($c(1) : Bernoulli($c(0.04943175))) )
## hash index
29
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0

## index
30
## name
alive(x6, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(30) >=(+($s(24) $s(25) $s(31)) $c(2)) <=(+($s(24) $s(25) $s(31)) $c(3))) and(~($s(30)) ==(+($s(24) $s(25) $s(31)) $c(3))) $a(30)) : Bernoulli($c(0.965089735))) ($c(1) : Bernoulli($c(0.034910265))) )
## hash index
30
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0

## index
31
## name
alive(x6, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(31) >=(+($s(24) $s(25) $s(26) $s(30) $s(32)) $c(2)) <=(+($s(24) $s(25) $s(26) $s(30) $s(32)) $c(3))) and(~($s(31)) ==(+($s(24) $s(25) $s(26) $s(30) $s(32)) $c(3))) $a(31)) : Bernoulli($c(0.95173868))) ($c(1) : Bernoulli($c(0.04826132))) )
## hash index
31
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0

## index
32
## name
alive(x6, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(32) >=(+($s(25) $s(26) $s(27) $s(31) $s(33)) $c(2)) <=(+($s(25) $s(26) $s(27) $s(31) $s(33)) $c(3))) and(~($s(32)) ==(+($s(25) $s(26) $s(27) $s(31) $s(33)) $c(3))) $a(32)) : Bernoulli($c(0.943710122))) ($c(1) : Bernoulli($c(0.056289878))) )
## hash index
32
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0

## index
33
## name
alive(x6, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(33) >=(+($s(26) $s(27) $s(28) $s(32) $s(34)) $c(2)) <=(+($s(26) $s(27) $s(28) $s(32) $s(34)) $c(3))) and(~($s(33)) ==(+($s(26) $s(27) $s(28) $s(32) $s(34)) $c(3))) $a(33)) : Bernoulli($c(0.959918868))) ($c(1) : Bernoulli($c(0.040081132))) )
## hash index
33
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0

## index
34
## name
alive(x6, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(34) >=(+($s(27) $s(28) $s(29) $s(33) $s(35)) $c(2)) <=(+($s(27) $s(28) $s(29) $s(33) $s(35)) $c(3))) and(~($s(34)) ==(+($s(27) $s(28) $s(29) $s(33) $s(35)) $c(3))) $a(34)) : Bernoulli($c(0.955441035))) ($c(1) : Bernoulli($c(0.044558965))) )
## hash index
34
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0

## index
35
## name
alive(x6, y6)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(and($s(35) >=(+($s(28) $s(29) $s(34)) $c(2)) <=(+($s(28) $s(29) $s(34)) $c(3))) and(~($s(35)) ==(+($s(28) $s(29) $s(34)) $c(3))) $a(35)) : Bernoulli($c(0.957471922))) ($c(1) : Bernoulli($c(0.042528078))) )
## hash index
35
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0
33 0
34 0
35 0
36 0



#####REWARD#####
## formula
+(-($s(0) $a(0)) -($s(1) $a(1)) -($s(2) $a(2)) -($s(3) $a(3)) -($s(4) $a(4)) -($s(5) $a(5)) -($s(6) $a(6)) -($s(7) $a(7)) -($s(8) $a(8)) -($s(9) $a(9)) -($s(10) $a(10)) -($s(11) $a(11)) -($s(12) $a(12)) -($s(13) $a(13)) -($s(14) $a(14)) -($s(15) $a(15)) -($s(16) $a(16)) -($s(17) $a(17)) -($s(18) $a(18)) -($s(19) $a(19)) -($s(20) $a(20)) -($s(21) $a(21)) -($s(22) $a(22)) -($s(23) $a(23)) -($s(24) $a(24)) -($s(25) $a(25)) -($s(26) $a(26)) -($s(27) $a(27)) -($s(28) $a(28)) -($s(29) $a(29)) -($s(30) $a(30)) -($s(31) $a(31)) -($s(32) $a(32)) -($s(33) $a(33)) -($s(34) $a(34)) -($s(35) $a(35)))
## min
-1
## max
36
## independent from actions
0
## hash index
36
## caching type
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4
5 5
6 6
7 7
8 8
9 9
10 10
11 11
12 12
13 13
14 14
15 15
16 16
17 17
18 18
19 19
20 20
21 21
22 22
23 23
24 24
25 25
26 26
27 27
28 28
29 29
30 30
31 31
32 32
33 33
34 34
35 35
36 36


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
4
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
5
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
6
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
7
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
8
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
9
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
10
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
11
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
12
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
13
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
14
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
15
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
16
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
17
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
18
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
19
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
20
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
21
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
22
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
23
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
24
## state
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
25
## state
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
26
## state
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
27
## state
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
28
## state
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
29
## state
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
30
## state
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
31
## state
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
32
## state
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
33
## state
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
34
## state
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
35
## state
0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
36
## state
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####

#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
5
0 2
1 2
6 2
7 2
36 37
## kleene state fluent hash keys (first line is the number of keys)
5
9958544 7217168
1 2
6 2
7 2
36 37

## index
1
## state hash key (for each value in the domain)
0 2
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
0 4
1 4
2 2
6 4
7 4
8 2
36 74
## kleene state fluent hash keys (first line is the number of keys)
7
9957968 7217168
1 6
2 2
6 6
7 6
8 2
36 111

## index
2
## state hash key (for each value in the domain)
0 4
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
1 8
2 4
3 2
7 8
8 4
9 2
36 148
## kleene state fluent hash keys (first line is the number of keys)
7
8924416 7217168
2 6
3 2
7 18
8 6
9 2
36 333

## index
3
## state hash key (for each value in the domain)
0 8
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
2 8
3 4
4 2
8 8
9 4
10 2
36 296
## kleene state fluent hash keys (first line is the number of keys)
7
8983136 7217168
3 6
4 2
8 18
9 6
10 2
36 999

## index
4
## state hash key (for each value in the domain)
0 16
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
3 8
4 4
5 2
9 8
10 4
11 2
36 592
## kleene state fluent hash keys (first line is the number of keys)
7
9041760 7217168
4 6
5 2
9 18
10 6
11 2
36 2997

## index
5
## state hash key (for each value in the domain)
0 32
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
5
4 8
5 4
10 8
11 4
36 1184
## kleene state fluent hash keys (first line is the number of keys)
5
9100288 7217168
5 6
10 18
11 6
36 8991

## index
6
## state hash key (for each value in the domain)
0 64
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
0 8
1 16
6 8
7 16
12 2
13 2
36 2368
## kleene state fluent hash keys (first line is the number of keys)
7
10639328 9099536
1 54
6 18
7 54
12 2
13 2
36 26973

## index
7
## state hash key (for each value in the domain)
0 128
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
10
0 16
1 32
2 16
6 16
7 32
8 16
12 4
13 4
14 2
36 4736
## kleene state fluent hash keys (first line is the number of keys)
10
9955472 7217168
1 162
2 54
6 54
7 162
8 54
12 6
13 6
14 2
36 80919

## index
8
## state hash key (for each value in the domain)
0 256
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
10
1 64
2 32
3 16
7 64
8 32
9 16
13 8
14 4
15 2
36 9472
## kleene state fluent hash keys (first line is the number of keys)
10
9290704 7217168
2 162
3 54
7 486
8 162
9 54
13 18
14 6
15 2
36 242757

## index
9
## state hash key (for each value in the domain)
0 512
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
10
2 64
3 32
4 16
8 64
9 32
10 16
14 8
15 4
16 2
36 18944
## kleene state fluent hash keys (first line is the number of keys)
10
9349296 7217168
3 162
4 54
8 486
9 162
10 54
14 18
15 6
16 2
36 728271

## index
10
## state hash key (for each value in the domain)
0 1024
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
10
3 64
4 32
5 8
9 64
10 32
11 8
15 8
16 4
17 2
36 37888
## kleene state fluent hash keys (first line is the number of keys)
10
9407984 7217168
4 162
5 18
9 486
10 162
11 18
15 18
16 6
17 2
36 2184813

## index
11
## state hash key (for each value in the domain)
0 2048
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
4 64
5 16
10 64
11 16
16 8
17 4
36 75776
## kleene state fluent hash keys (first line is the number of keys)
7
9173792 9423904
5 54
10 486
11 54
16 18
17 6
36 6554439

## index
12
## state hash key (for each value in the domain)
0 4096
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
6 32
7 128
12 8
13 16
18 2
19 2
36 151552
## kleene state fluent hash keys (first line is the number of keys)
7
9099536 9658400
7 1458
12 18
13 54
18 2
19 2
36 19663317

## index
13
## state hash key (for each value in the domain)
0 8192
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
10
6 64
7 256
8 128
12 16
13 32
14 16
18 4
19 4
20 2
36 303104
## kleene state fluent hash keys (first line is the number of keys)
10
9415952 7217168
7 4374
8 1458
12 54
13 162
14 54
18 6
19 6
20 2
36 58989951

## index
14
## state hash key (for each value in the domain)
0 16384
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
10
7 512
8 256
9 128
13 64
14 32
15 16
19 8
20 4
21 2
36 606208
## kleene state fluent hash keys (first line is the number of keys)
10
9541136 7217168
8 4374
9 1458
13 486
14 162
15 54
19 18
20 6
21 2
36 176969853

## index
15
## state hash key (for each value in the domain)
0 32768
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
10
8 512
9 256
10 128
14 64
15 32
16 16
20 8
21 4
22 2
36 1212416
## kleene state fluent hash keys (first line is the number of keys)
10
9423904 9666368
9 4374
10 1458
14 486
15 162
16 54
20 18
21 6
22 2
36 530909559

## index
16
## state hash key (for each value in the domain)
0 65536
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
10
9 512
10 256
11 32
15 64
16 32
17 8
21 8
22 4
23 2
36 2424832
## kleene state fluent hash keys (first line is the number of keys)
10
9658400 9040960
10 4374
11 162
15 486
16 162
17 18
21 18
22 6
23 2
36 1592728677

## index
17
## state hash key (for each value in the domain)
0 131072
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
10 512
11 64
16 64
17 16
22 8
23 4
36 4849664
## kleene state fluent hash keys (first line is the number of keys)
7
9666368 9674336
11 486
16 486
17 54
22 18
23 6
36 4778186031

## index
18
## state hash key (for each value in the domain)
0 262144
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
12 32
13 128
18 8
19 16
24 2
25 2
36 9699328
## kleene state fluent hash keys (first line is the number of keys)
7
9040960 9791552
13 1458
18 18
19 54
24 2
25 2
36 14334558093

## index
19
## state hash key (for each value in the domain)
0 524288
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
10
12 64
13 256
14 128
18 16
19 32
20 16
24 4
25 4
26 2
36 19398656
## kleene state fluent hash keys (first line is the number of keys)
10
9674336 9850144
13 4374
14 1458
18 54
19 162
20 54
24 6
25 6
26 2
36 43003674279

## index
20
## state hash key (for each value in the domain)
0 1048576
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
10
13 512
14 256
15 128
19 64
20 32
21 16
25 8
26 4
27 2
36 38797312
## kleene state fluent hash keys (first line is the number of keys)
10
9791552 9908832
14 4374
15 1458
19 486
20 162
21 54
25 18
26 6
27 2
36 129011022837

## index
21
## state hash key (for each value in the domain)
0 2097152
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
10
14 512
15 256
16 128
20 64
21 32
22 16
26 8
27 4
28 2
36 77594624
## kleene state fluent hash keys (first line is the number of keys)
10
9850144 9916800
15 4374
16 1458
20 486
21 162
22 54
26 18
27 6
28 2
36 387033068511

## index
22
## state hash key (for each value in the domain)
0 4194304
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
10
15 512
16 256
17 32
21 64
22 32
23 8
27 8
28 4
29 2
36 155189248
## kleene state fluent hash keys (first line is the number of keys)
10
9908832 8982240
16 4374
17 162
21 486
22 162
23 18
27 18
28 6
29 2
36 1161099205533

## index
23
## state hash key (for each value in the domain)
0 8388608
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
16 512
17 64
22 64
23 16
28 8
29 4
36 310378496
## kleene state fluent hash keys (first line is the number of keys)
7
9916800 9600608
17 486
22 486
23 54
28 18
29 6
36 3483297616599

## index
24
## state hash key (for each value in the domain)
0 16777216
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
18 32
19 128
24 8
25 16
30 2
31 2
36 620756992
## kleene state fluent hash keys (first line is the number of keys)
7
8982240 9935392
19 1458
24 18
25 54
30 2
31 2
36 10449892849797

## index
25
## state hash key (for each value in the domain)
0 33554432
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
10
18 64
19 256
20 128
24 16
25 32
26 16
30 4
31 4
32 2
36 1241513984
## kleene state fluent hash keys (first line is the number of keys)
10
9600608 9943680
19 4374
20 1458
24 54
25 162
26 54
30 6
31 6
32 2
36 31349678549391

## index
26
## state hash key (for each value in the domain)
0 67108864
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
10
19 512
20 256
21 128
25 64
26 32
27 16
31 8
32 4
33 2
36 2483027968
## kleene state fluent hash keys (first line is the number of keys)
10
9935392 9954880
20 4374
21 1458
25 486
26 162
27 54
31 18
32 6
33 2
36 94049035648173

## index
27
## state hash key (for each value in the domain)
0 134217728
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
10
20 512
21 256
22 128
26 64
27 32
28 16
32 8
33 4
34 2
36 4966055936
## kleene state fluent hash keys (first line is the number of keys)
10
9424624 9958240
21 4374
22 1458
26 486
27 162
28 54
32 18
33 6
34 2
36 282147106944519

## index
28
## state hash key (for each value in the domain)
0 268435456
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
10
21 512
22 256
23 32
27 64
28 32
29 8
33 8
34 4
35 2
36 9932111872
## kleene state fluent hash keys (first line is the number of keys)
10
9943680 9174240
22 4374
23 162
27 486
28 162
29 18
33 18
34 6
35 2
36 846441320833557

## index
29
## state hash key (for each value in the domain)
0 536870912
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
22 512
23 64
28 64
29 16
34 8
35 4
36 19864223744
## kleene state fluent hash keys (first line is the number of keys)
7
9954880 9927232
23 486
28 486
29 54
34 18
35 6
36 2539323962500671

## index
30
## state hash key (for each value in the domain)
0 1073741824
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
5
24 32
25 128
30 8
31 16
36 39728447488
## kleene state fluent hash keys (first line is the number of keys)
5
9952064 140405411769312
25 1458
30 18
31 54
36 7617971887502013

## index
31
## state hash key (for each value in the domain)
0 2147483648
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
24 64
25 256
26 128
30 16
31 32
32 16
36 79456894976
## kleene state fluent hash keys (first line is the number of keys)
7
9174240 9675056
25 4374
26 1458
30 54
31 162
32 54
36 22853915662506039

## index
32
## state hash key (for each value in the domain)
0 4294967296
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
25 512
26 256
27 128
31 64
32 32
33 16
36 158913789952
## kleene state fluent hash keys (first line is the number of keys)
7
9927232 9424624
26 4374
27 1458
31 486
32 162
33 54
36 68561746987518117

## index
33
## state hash key (for each value in the domain)
0 8589934592
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
26 512
27 256
28 128
32 64
33 32
34 16
36 317827579904
## kleene state fluent hash keys (first line is the number of keys)
7
9675056 9952064
27 4374
28 1458
32 486
33 162
34 54
36 205685240962554351

## index
34
## state hash key (for each value in the domain)
0 17179869184
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
27 512
28 256
29 32
33 64
34 32
35 8
36 635655159808
## kleene state fluent hash keys (first line is the number of keys)
7
27 13122
28 4374
29 162
33 486
34 162
35 18
36 617055722887663053

## index
35
## state hash key (for each value in the domain)
0 34359738368
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
5
28 512
29 64
34 64
35 16
36 1271310319616
## kleene state fluent hash keys (first line is the number of keys)
5
28 13122
29 486
34 486
35 54
36 1851167168662989159

