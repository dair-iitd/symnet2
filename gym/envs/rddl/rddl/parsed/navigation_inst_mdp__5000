#####TASK##### Here
## name
navigation_inst_mdp__5000
## horizon
100
## discount factor
1
## number of action fluents
4
## number of det state fluents
30
## number of prob state fluents
105
## number of preconds
0
## number of actions
5
## number of hashing functions
136
## initial state
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## 1 if task is deterministic
0
## 1 if state hashing possible
0
## 1 if kleene state hashing possible
0


#####ACTION FLUENTS#####
## index
0
## name
move-east
## number of values
2
## values
0 false
1 true

## index
1
## name
move-north
## number of values
2
## values
0 false
1 true

## index
2
## name
move-south
## number of values
2
## values
0 false
1 true

## index
3
## name
move-west
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####
## index
0
## name
robot-at(x1, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(0)) and($a(0) $s(0))) : $c(0)) (or(and($a(2) $s(30)) and($a(3) $s(14))) : $c(1)) ($c(1) : $s(0)) )
## hash index
0
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
1
## name
robot-at(x1, y9)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(2) $s(1)) and($a(0) $s(1))) : $c(0)) (or(and($a(1) $s(36)) and($a(3) $s(15))) : $c(1)) ($c(1) : $s(1)) )
## hash index
1
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
2
## name
robot-at(x10, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(2)) and($a(0) $s(2)) and($a(3) $s(2))) : $c(0)) (or(and($a(2) $s(37)) and($a(0) $s(28)) and($a(3) $s(4))) : $c(1)) ($c(1) : $s(2)) )
## hash index
2
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
3
## name
robot-at(x10, y9)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(2) $s(3)) and($a(0) $s(3)) and($a(3) $s(3))) : $c(0)) (or(and($a(1) $s(43)) and($a(0) $s(29)) and($a(3) $s(5))) : $c(1)) ($c(1) : $s(3)) )
## hash index
3
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
4
## name
robot-at(x11, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(4)) and($a(0) $s(4)) and($a(3) $s(4))) : $c(0)) (or(and($a(2) $s(44)) and($a(0) $s(2)) and($a(3) $s(6))) : $c(1)) ($c(1) : $s(4)) )
## hash index
4
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
5
## name
robot-at(x11, y9)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(2) $s(5)) and($a(0) $s(5)) and($a(3) $s(5))) : $c(0)) (or(and($a(1) $s(50)) and($a(0) $s(3)) and($a(3) $s(7))) : $c(1)) ($c(1) : $s(5)) )
## hash index
5
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
6
## name
robot-at(x12, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(6)) and($a(0) $s(6)) and($a(3) $s(6))) : $c(0)) (or(and($a(2) $s(51)) and($a(0) $s(4)) and($a(3) $s(8))) : $c(1)) ($c(1) : $s(6)) )
## hash index
6
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
7
## name
robot-at(x12, y9)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(2) $s(7)) and($a(0) $s(7)) and($a(3) $s(7))) : $c(0)) (or(and($a(1) $s(57)) and($a(0) $s(5)) and($a(3) $s(9))) : $c(1)) ($c(1) : $s(7)) )
## hash index
7
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
8
## name
robot-at(x13, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(8)) and($a(0) $s(8)) and($a(3) $s(8))) : $c(0)) (or(and($a(2) $s(58)) and($a(0) $s(6)) and($a(3) $s(10))) : $c(1)) ($c(1) : $s(8)) )
## hash index
8
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
9
## name
robot-at(x13, y9)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(2) $s(9)) and($a(0) $s(9)) and($a(3) $s(9))) : $c(0)) (or(and($a(1) $s(64)) and($a(0) $s(7)) and($a(3) $s(11))) : $c(1)) ($c(1) : $s(9)) )
## hash index
9
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
10
## name
robot-at(x14, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(10)) and($a(0) $s(10)) and($a(3) $s(10))) : $c(0)) (or(and($a(2) $s(65)) and($a(0) $s(8)) and($a(3) $s(12))) : $c(1)) ($c(1) : $s(10)) )
## hash index
10
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
11
## name
robot-at(x14, y9)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(2) $s(11)) and($a(0) $s(11)) and($a(3) $s(11))) : $c(0)) (or(and($a(1) $s(71)) and($a(0) $s(9)) and($a(3) $s(13))) : $c(1)) ($c(1) : $s(11)) )
## hash index
11
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
12
## name
robot-at(x15, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(12)) and($a(3) $s(12))) : $c(0)) (or(and($a(2) $s(72)) and($a(0) $s(10))) : $c(1)) ($c(1) : $s(12)) )
## hash index
12
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
13
## name
robot-at(x15, y9)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(13) : $c(1)) (or($s(13) and($a(2) $s(13)) and($a(3) $s(13))) : $c(0)) (or(and($a(1) $s(78)) and($a(0) $s(11))) : $c(1)) ($c(1) : $s(13)) )
## hash index
13
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
14
## name
robot-at(x2, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(14)) and($a(0) $s(14)) and($a(3) $s(14))) : $c(0)) (or(and($a(2) $s(79)) and($a(0) $s(0)) and($a(3) $s(16))) : $c(1)) ($c(1) : $s(14)) )
## hash index
14
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
15
## name
robot-at(x2, y9)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(2) $s(15)) and($a(0) $s(15)) and($a(3) $s(15))) : $c(0)) (or(and($a(1) $s(85)) and($a(0) $s(1)) and($a(3) $s(17))) : $c(1)) ($c(1) : $s(15)) )
## hash index
15
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
16
## name
robot-at(x3, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(16)) and($a(0) $s(16)) and($a(3) $s(16))) : $c(0)) (or(and($a(2) $s(86)) and($a(0) $s(14)) and($a(3) $s(18))) : $c(1)) ($c(1) : $s(16)) )
## hash index
16
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
17
## name
robot-at(x3, y9)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(2) $s(17)) and($a(0) $s(17)) and($a(3) $s(17))) : $c(0)) (or(and($a(1) $s(92)) and($a(0) $s(15)) and($a(3) $s(19))) : $c(1)) ($c(1) : $s(17)) )
## hash index
17
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
18
## name
robot-at(x4, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(18)) and($a(0) $s(18)) and($a(3) $s(18))) : $c(0)) (or(and($a(2) $s(93)) and($a(0) $s(16)) and($a(3) $s(20))) : $c(1)) ($c(1) : $s(18)) )
## hash index
18
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
19
## name
robot-at(x4, y9)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(2) $s(19)) and($a(0) $s(19)) and($a(3) $s(19))) : $c(0)) (or(and($a(1) $s(99)) and($a(0) $s(17)) and($a(3) $s(21))) : $c(1)) ($c(1) : $s(19)) )
## hash index
19
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
20
## name
robot-at(x5, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(20)) and($a(0) $s(20)) and($a(3) $s(20))) : $c(0)) (or(and($a(2) $s(100)) and($a(0) $s(18)) and($a(3) $s(22))) : $c(1)) ($c(1) : $s(20)) )
## hash index
20
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
21
## name
robot-at(x5, y9)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(2) $s(21)) and($a(0) $s(21)) and($a(3) $s(21))) : $c(0)) (or(and($a(1) $s(106)) and($a(0) $s(19)) and($a(3) $s(23))) : $c(1)) ($c(1) : $s(21)) )
## hash index
21
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
22
## name
robot-at(x6, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(22)) and($a(0) $s(22)) and($a(3) $s(22))) : $c(0)) (or(and($a(2) $s(107)) and($a(0) $s(20)) and($a(3) $s(24))) : $c(1)) ($c(1) : $s(22)) )
## hash index
22
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
23
## name
robot-at(x6, y9)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(2) $s(23)) and($a(0) $s(23)) and($a(3) $s(23))) : $c(0)) (or(and($a(1) $s(113)) and($a(0) $s(21)) and($a(3) $s(25))) : $c(1)) ($c(1) : $s(23)) )
## hash index
23
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
24
## name
robot-at(x7, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(24)) and($a(0) $s(24)) and($a(3) $s(24))) : $c(0)) (or(and($a(2) $s(114)) and($a(0) $s(22)) and($a(3) $s(26))) : $c(1)) ($c(1) : $s(24)) )
## hash index
24
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
25
## name
robot-at(x7, y9)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(2) $s(25)) and($a(0) $s(25)) and($a(3) $s(25))) : $c(0)) (or(and($a(1) $s(120)) and($a(0) $s(23)) and($a(3) $s(27))) : $c(1)) ($c(1) : $s(25)) )
## hash index
25
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
26
## name
robot-at(x8, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(26)) and($a(0) $s(26)) and($a(3) $s(26))) : $c(0)) (or(and($a(2) $s(121)) and($a(0) $s(24)) and($a(3) $s(28))) : $c(1)) ($c(1) : $s(26)) )
## hash index
26
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
27
## name
robot-at(x8, y9)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(2) $s(27)) and($a(0) $s(27)) and($a(3) $s(27))) : $c(0)) (or(and($a(1) $s(127)) and($a(0) $s(25)) and($a(3) $s(29))) : $c(1)) ($c(1) : $s(27)) )
## hash index
27
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
28
## name
robot-at(x9, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(28)) and($a(0) $s(28)) and($a(3) $s(28))) : $c(0)) (or(and($a(2) $s(128)) and($a(0) $s(26)) and($a(3) $s(2))) : $c(1)) ($c(1) : $s(28)) )
## hash index
28
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
29
## name
robot-at(x9, y9)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(2) $s(29)) and($a(0) $s(29)) and($a(3) $s(29))) : $c(0)) (or(and($a(1) $s(134)) and($a(0) $s(27)) and($a(3) $s(3))) : $c(1)) ($c(1) : $s(29)) )
## hash index
29
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4



#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
robot-at(x1, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(30)) and($a(2) $s(30)) and($a(0) $s(30))) : $c(0)) (or(and($a(1) $s(0)) and($a(2) $s(31)) and($a(3) $s(79))) : Bernoulli($c(0.963859712048979))) ($c(1) : $s(30)) )
## hash index
30
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
1
## name
robot-at(x1, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(31)) and($a(2) $s(31)) and($a(0) $s(31))) : $c(0)) (or(and($a(1) $s(30)) and($a(2) $s(32)) and($a(3) $s(80))) : Bernoulli($c(0.946081137270753))) ($c(1) : $s(31)) )
## hash index
31
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
2
## name
robot-at(x1, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(32)) and($a(2) $s(32)) and($a(0) $s(32))) : $c(0)) (or(and($a(1) $s(31)) and($a(2) $s(33)) and($a(3) $s(81))) : Bernoulli($c(0.958879269617402))) ($c(1) : $s(32)) )
## hash index
32
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
3
## name
robot-at(x1, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(33)) and($a(2) $s(33)) and($a(0) $s(33))) : $c(0)) (or(and($a(1) $s(32)) and($a(2) $s(34)) and($a(3) $s(82))) : Bernoulli($c(0.947398356561924))) ($c(1) : $s(33)) )
## hash index
33
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
4
## name
robot-at(x1, y6)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(34)) and($a(2) $s(34)) and($a(0) $s(34))) : $c(0)) (or(and($a(1) $s(33)) and($a(2) $s(35)) and($a(3) $s(83))) : Bernoulli($c(0.973097728959123))) ($c(1) : $s(34)) )
## hash index
34
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
5
## name
robot-at(x1, y7)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(35)) and($a(2) $s(35)) and($a(0) $s(35))) : $c(0)) (or(and($a(1) $s(34)) and($a(2) $s(36)) and($a(3) $s(84))) : Bernoulli($c(0.94691572863508))) ($c(1) : $s(35)) )
## hash index
35
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
6
## name
robot-at(x1, y8)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(36)) and($a(2) $s(36)) and($a(0) $s(36))) : $c(0)) (or(and($a(1) $s(35)) and($a(2) $s(1)) and($a(3) $s(85))) : Bernoulli($c(0.982332882102587))) ($c(1) : $s(36)) )
## hash index
36
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
7
## name
robot-at(x10, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(37)) and($a(2) $s(37)) and($a(0) $s(37)) and($a(3) $s(37))) : $c(0)) (or(and($a(1) $s(2)) and($a(2) $s(38)) and($a(0) $s(128)) and($a(3) $s(44))) : Bernoulli($c(0.400406874411068))) ($c(1) : $s(37)) )
## hash index
37
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
8
## name
robot-at(x10, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(38)) and($a(2) $s(38)) and($a(0) $s(38)) and($a(3) $s(38))) : $c(0)) (or(and($a(1) $s(37)) and($a(2) $s(39)) and($a(0) $s(129)) and($a(3) $s(45))) : Bernoulli($c(0.373275303956714))) ($c(1) : $s(38)) )
## hash index
38
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
9
## name
robot-at(x10, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(39)) and($a(2) $s(39)) and($a(0) $s(39)) and($a(3) $s(39))) : $c(0)) (or(and($a(1) $s(38)) and($a(2) $s(40)) and($a(0) $s(130)) and($a(3) $s(46))) : Bernoulli($c(0.377113544948405))) ($c(1) : $s(39)) )
## hash index
39
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
10
## name
robot-at(x10, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(40)) and($a(2) $s(40)) and($a(0) $s(40)) and($a(3) $s(40))) : $c(0)) (or(and($a(1) $s(39)) and($a(2) $s(41)) and($a(0) $s(131)) and($a(3) $s(47))) : Bernoulli($c(0.370967809393591))) ($c(1) : $s(40)) )
## hash index
40
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
11
## name
robot-at(x10, y6)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(41)) and($a(2) $s(41)) and($a(0) $s(41)) and($a(3) $s(41))) : $c(0)) (or(and($a(1) $s(40)) and($a(2) $s(42)) and($a(0) $s(132)) and($a(3) $s(48))) : Bernoulli($c(0.389137389452012))) ($c(1) : $s(41)) )
## hash index
41
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
12
## name
robot-at(x10, y7)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(42)) and($a(2) $s(42)) and($a(0) $s(42)) and($a(3) $s(42))) : $c(0)) (or(and($a(1) $s(41)) and($a(2) $s(43)) and($a(0) $s(133)) and($a(3) $s(49))) : Bernoulli($c(0.400992743527149))) ($c(1) : $s(42)) )
## hash index
42
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
13
## name
robot-at(x10, y8)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(43)) and($a(2) $s(43)) and($a(0) $s(43)) and($a(3) $s(43))) : $c(0)) (or(and($a(1) $s(42)) and($a(2) $s(3)) and($a(0) $s(134)) and($a(3) $s(50))) : Bernoulli($c(0.385190368613796))) ($c(1) : $s(43)) )
## hash index
43
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
14
## name
robot-at(x11, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(44)) and($a(2) $s(44)) and($a(0) $s(44)) and($a(3) $s(44))) : $c(0)) (or(and($a(1) $s(4)) and($a(2) $s(45)) and($a(0) $s(37)) and($a(3) $s(51))) : Bernoulli($c(0.29928004413443))) ($c(1) : $s(44)) )
## hash index
44
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
15
## name
robot-at(x11, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(45)) and($a(2) $s(45)) and($a(0) $s(45)) and($a(3) $s(45))) : $c(0)) (or(and($a(1) $s(44)) and($a(2) $s(46)) and($a(0) $s(38)) and($a(3) $s(52))) : Bernoulli($c(0.343636780116218))) ($c(1) : $s(45)) )
## hash index
45
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
16
## name
robot-at(x11, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(46)) and($a(2) $s(46)) and($a(0) $s(46)) and($a(3) $s(46))) : $c(0)) (or(and($a(1) $s(45)) and($a(2) $s(47)) and($a(0) $s(39)) and($a(3) $s(53))) : Bernoulli($c(0.303970388544192))) ($c(1) : $s(46)) )
## hash index
46
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
17
## name
robot-at(x11, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(47)) and($a(2) $s(47)) and($a(0) $s(47)) and($a(3) $s(47))) : $c(0)) (or(and($a(1) $s(46)) and($a(2) $s(48)) and($a(0) $s(40)) and($a(3) $s(54))) : Bernoulli($c(0.314251332040047))) ($c(1) : $s(47)) )
## hash index
47
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
18
## name
robot-at(x11, y6)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(48)) and($a(2) $s(48)) and($a(0) $s(48)) and($a(3) $s(48))) : $c(0)) (or(and($a(1) $s(47)) and($a(2) $s(49)) and($a(0) $s(41)) and($a(3) $s(55))) : Bernoulli($c(0.332581784094296))) ($c(1) : $s(48)) )
## hash index
48
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
19
## name
robot-at(x11, y7)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(49)) and($a(2) $s(49)) and($a(0) $s(49)) and($a(3) $s(49))) : $c(0)) (or(and($a(1) $s(48)) and($a(2) $s(50)) and($a(0) $s(42)) and($a(3) $s(56))) : Bernoulli($c(0.2997820230184))) ($c(1) : $s(49)) )
## hash index
49
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
20
## name
robot-at(x11, y8)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(50)) and($a(2) $s(50)) and($a(0) $s(50)) and($a(3) $s(50))) : $c(0)) (or(and($a(1) $s(49)) and($a(2) $s(5)) and($a(0) $s(43)) and($a(3) $s(57))) : Bernoulli($c(0.321375916580135))) ($c(1) : $s(50)) )
## hash index
50
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
21
## name
robot-at(x12, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(51)) and($a(2) $s(51)) and($a(0) $s(51)) and($a(3) $s(51))) : $c(0)) (or(and($a(1) $s(6)) and($a(2) $s(52)) and($a(0) $s(44)) and($a(3) $s(58))) : Bernoulli($c(0.246769782643935))) ($c(1) : $s(51)) )
## hash index
51
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
22
## name
robot-at(x12, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(52)) and($a(2) $s(52)) and($a(0) $s(52)) and($a(3) $s(52))) : $c(0)) (or(and($a(1) $s(51)) and($a(2) $s(53)) and($a(0) $s(45)) and($a(3) $s(59))) : Bernoulli($c(0.233237691628513))) ($c(1) : $s(52)) )
## hash index
52
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
23
## name
robot-at(x12, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(53)) and($a(2) $s(53)) and($a(0) $s(53)) and($a(3) $s(53))) : $c(0)) (or(and($a(1) $s(52)) and($a(2) $s(54)) and($a(0) $s(46)) and($a(3) $s(60))) : Bernoulli($c(0.279205438614132))) ($c(1) : $s(53)) )
## hash index
53
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
24
## name
robot-at(x12, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(54)) and($a(2) $s(54)) and($a(0) $s(54)) and($a(3) $s(54))) : $c(0)) (or(and($a(1) $s(53)) and($a(2) $s(55)) and($a(0) $s(47)) and($a(3) $s(61))) : Bernoulli($c(0.277640482202463))) ($c(1) : $s(54)) )
## hash index
54
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
25
## name
robot-at(x12, y6)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(55)) and($a(2) $s(55)) and($a(0) $s(55)) and($a(3) $s(55))) : $c(0)) (or(and($a(1) $s(54)) and($a(2) $s(56)) and($a(0) $s(48)) and($a(3) $s(62))) : Bernoulli($c(0.23692841103759))) ($c(1) : $s(55)) )
## hash index
55
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
26
## name
robot-at(x12, y7)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(56)) and($a(2) $s(56)) and($a(0) $s(56)) and($a(3) $s(56))) : $c(0)) (or(and($a(1) $s(55)) and($a(2) $s(57)) and($a(0) $s(49)) and($a(3) $s(63))) : Bernoulli($c(0.252086236715551))) ($c(1) : $s(56)) )
## hash index
56
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
27
## name
robot-at(x12, y8)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(57)) and($a(2) $s(57)) and($a(0) $s(57)) and($a(3) $s(57))) : $c(0)) (or(and($a(1) $s(56)) and($a(2) $s(7)) and($a(0) $s(50)) and($a(3) $s(64))) : Bernoulli($c(0.281908792828397))) ($c(1) : $s(57)) )
## hash index
57
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
28
## name
robot-at(x13, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(58)) and($a(2) $s(58)) and($a(0) $s(58)) and($a(3) $s(58))) : $c(0)) (or(and($a(1) $s(8)) and($a(2) $s(59)) and($a(0) $s(51)) and($a(3) $s(65))) : Bernoulli($c(0.194660948047428))) ($c(1) : $s(58)) )
## hash index
58
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
29
## name
robot-at(x13, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(59)) and($a(2) $s(59)) and($a(0) $s(59)) and($a(3) $s(59))) : $c(0)) (or(and($a(1) $s(58)) and($a(2) $s(60)) and($a(0) $s(52)) and($a(3) $s(66))) : Bernoulli($c(0.189725526566325))) ($c(1) : $s(59)) )
## hash index
59
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
30
## name
robot-at(x13, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(60)) and($a(2) $s(60)) and($a(0) $s(60)) and($a(3) $s(60))) : $c(0)) (or(and($a(1) $s(59)) and($a(2) $s(61)) and($a(0) $s(53)) and($a(3) $s(67))) : Bernoulli($c(0.169756897069129))) ($c(1) : $s(60)) )
## hash index
60
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
31
## name
robot-at(x13, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(61)) and($a(2) $s(61)) and($a(0) $s(61)) and($a(3) $s(61))) : $c(0)) (or(and($a(1) $s(60)) and($a(2) $s(62)) and($a(0) $s(54)) and($a(3) $s(68))) : Bernoulli($c(0.180578626530235))) ($c(1) : $s(61)) )
## hash index
61
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
32
## name
robot-at(x13, y6)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(62)) and($a(2) $s(62)) and($a(0) $s(62)) and($a(3) $s(62))) : $c(0)) (or(and($a(1) $s(61)) and($a(2) $s(63)) and($a(0) $s(55)) and($a(3) $s(69))) : Bernoulli($c(0.202806812480148))) ($c(1) : $s(62)) )
## hash index
62
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
33
## name
robot-at(x13, y7)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(63)) and($a(2) $s(63)) and($a(0) $s(63)) and($a(3) $s(63))) : $c(0)) (or(and($a(1) $s(62)) and($a(2) $s(64)) and($a(0) $s(56)) and($a(3) $s(70))) : Bernoulli($c(0.175580045256176))) ($c(1) : $s(63)) )
## hash index
63
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
34
## name
robot-at(x13, y8)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(64)) and($a(2) $s(64)) and($a(0) $s(64)) and($a(3) $s(64))) : $c(0)) (or(and($a(1) $s(63)) and($a(2) $s(9)) and($a(0) $s(57)) and($a(3) $s(71))) : Bernoulli($c(0.216047441794482))) ($c(1) : $s(64)) )
## hash index
64
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
35
## name
robot-at(x14, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(65)) and($a(2) $s(65)) and($a(0) $s(65)) and($a(3) $s(65))) : $c(0)) (or(and($a(1) $s(10)) and($a(2) $s(66)) and($a(0) $s(58)) and($a(3) $s(72))) : Bernoulli($c(0.146771795451751))) ($c(1) : $s(65)) )
## hash index
65
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
36
## name
robot-at(x14, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(66)) and($a(2) $s(66)) and($a(0) $s(66)) and($a(3) $s(66))) : $c(0)) (or(and($a(1) $s(65)) and($a(2) $s(67)) and($a(0) $s(59)) and($a(3) $s(73))) : Bernoulli($c(0.133127412184999))) ($c(1) : $s(66)) )
## hash index
66
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
37
## name
robot-at(x14, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(67)) and($a(2) $s(67)) and($a(0) $s(67)) and($a(3) $s(67))) : $c(0)) (or(and($a(1) $s(66)) and($a(2) $s(68)) and($a(0) $s(60)) and($a(3) $s(74))) : Bernoulli($c(0.138191758887809))) ($c(1) : $s(67)) )
## hash index
67
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
38
## name
robot-at(x14, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(68)) and($a(2) $s(68)) and($a(0) $s(68)) and($a(3) $s(68))) : $c(0)) (or(and($a(1) $s(67)) and($a(2) $s(69)) and($a(0) $s(61)) and($a(3) $s(75))) : Bernoulli($c(0.134904164510504))) ($c(1) : $s(68)) )
## hash index
68
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
39
## name
robot-at(x14, y6)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(69)) and($a(2) $s(69)) and($a(0) $s(69)) and($a(3) $s(69))) : $c(0)) (or(and($a(1) $s(68)) and($a(2) $s(70)) and($a(0) $s(62)) and($a(3) $s(76))) : Bernoulli($c(0.153355182807498))) ($c(1) : $s(69)) )
## hash index
69
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
40
## name
robot-at(x14, y7)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(70)) and($a(2) $s(70)) and($a(0) $s(70)) and($a(3) $s(70))) : $c(0)) (or(and($a(1) $s(69)) and($a(2) $s(71)) and($a(0) $s(63)) and($a(3) $s(77))) : Bernoulli($c(0.126268540481278))) ($c(1) : $s(70)) )
## hash index
70
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
41
## name
robot-at(x14, y8)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(71)) and($a(2) $s(71)) and($a(0) $s(71)) and($a(3) $s(71))) : $c(0)) (or(and($a(1) $s(70)) and($a(2) $s(11)) and($a(0) $s(64)) and($a(3) $s(78))) : Bernoulli($c(0.111137053594303))) ($c(1) : $s(71)) )
## hash index
71
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
42
## name
robot-at(x15, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(72)) and($a(2) $s(72)) and($a(3) $s(72))) : $c(0)) (or(and($a(1) $s(12)) and($a(2) $s(73)) and($a(0) $s(65))) : Bernoulli($c(0.0663930263896182))) ($c(1) : $s(72)) )
## hash index
72
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
43
## name
robot-at(x15, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(73)) and($a(2) $s(73)) and($a(3) $s(73))) : $c(0)) (or(and($a(1) $s(72)) and($a(2) $s(74)) and($a(0) $s(66))) : Bernoulli($c(0.070799579740968))) ($c(1) : $s(73)) )
## hash index
73
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
44
## name
robot-at(x15, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(74)) and($a(2) $s(74)) and($a(3) $s(74))) : $c(0)) (or(and($a(1) $s(73)) and($a(2) $s(75)) and($a(0) $s(67))) : Bernoulli($c(0.087903408621084))) ($c(1) : $s(74)) )
## hash index
74
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
45
## name
robot-at(x15, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(75)) and($a(2) $s(75)) and($a(3) $s(75))) : $c(0)) (or(and($a(1) $s(74)) and($a(2) $s(76)) and($a(0) $s(68))) : Bernoulli($c(0.0696985847084531))) ($c(1) : $s(75)) )
## hash index
75
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
46
## name
robot-at(x15, y6)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(76)) and($a(2) $s(76)) and($a(3) $s(76))) : $c(0)) (or(and($a(1) $s(75)) and($a(2) $s(77)) and($a(0) $s(69))) : Bernoulli($c(0.0645693659928527))) ($c(1) : $s(76)) )
## hash index
76
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
47
## name
robot-at(x15, y7)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(77)) and($a(2) $s(77)) and($a(3) $s(77))) : $c(0)) (or(and($a(1) $s(76)) and($a(2) $s(78)) and($a(0) $s(70))) : Bernoulli($c(0.0759141485234474))) ($c(1) : $s(77)) )
## hash index
77
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
48
## name
robot-at(x15, y8)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(78)) and($a(2) $s(78)) and($a(3) $s(78))) : $c(0)) (or(and($a(1) $s(77)) and($a(2) $s(13)) and($a(0) $s(71))) : Bernoulli($c(0.0575392105663923))) ($c(1) : $s(78)) )
## hash index
78
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
49
## name
robot-at(x2, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(79)) and($a(2) $s(79)) and($a(0) $s(79)) and($a(3) $s(79))) : $c(0)) (or(and($a(1) $s(14)) and($a(2) $s(80)) and($a(0) $s(30)) and($a(3) $s(86))) : Bernoulli($c(0.903859800620343))) ($c(1) : $s(79)) )
## hash index
79
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
50
## name
robot-at(x2, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(80)) and($a(2) $s(80)) and($a(0) $s(80)) and($a(3) $s(80))) : $c(0)) (or(and($a(1) $s(79)) and($a(2) $s(81)) and($a(0) $s(31)) and($a(3) $s(87))) : Bernoulli($c(0.920858241098667))) ($c(1) : $s(80)) )
## hash index
80
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
51
## name
robot-at(x2, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(81)) and($a(2) $s(81)) and($a(0) $s(81)) and($a(3) $s(81))) : $c(0)) (or(and($a(1) $s(80)) and($a(2) $s(82)) and($a(0) $s(32)) and($a(3) $s(88))) : Bernoulli($c(0.893096991068114))) ($c(1) : $s(81)) )
## hash index
81
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
52
## name
robot-at(x2, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(82)) and($a(2) $s(82)) and($a(0) $s(82)) and($a(3) $s(82))) : $c(0)) (or(and($a(1) $s(81)) and($a(2) $s(83)) and($a(0) $s(33)) and($a(3) $s(89))) : Bernoulli($c(0.91858862718298))) ($c(1) : $s(82)) )
## hash index
82
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
53
## name
robot-at(x2, y6)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(83)) and($a(2) $s(83)) and($a(0) $s(83)) and($a(3) $s(83))) : $c(0)) (or(and($a(1) $s(82)) and($a(2) $s(84)) and($a(0) $s(34)) and($a(3) $s(90))) : Bernoulli($c(0.897909540258428))) ($c(1) : $s(83)) )
## hash index
83
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
54
## name
robot-at(x2, y7)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(84)) and($a(2) $s(84)) and($a(0) $s(84)) and($a(3) $s(84))) : $c(0)) (or(and($a(1) $s(83)) and($a(2) $s(85)) and($a(0) $s(35)) and($a(3) $s(91))) : Bernoulli($c(0.92400622139046))) ($c(1) : $s(84)) )
## hash index
84
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
55
## name
robot-at(x2, y8)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(85)) and($a(2) $s(85)) and($a(0) $s(85)) and($a(3) $s(85))) : $c(0)) (or(and($a(1) $s(84)) and($a(2) $s(15)) and($a(0) $s(36)) and($a(3) $s(92))) : Bernoulli($c(0.911656829600764))) ($c(1) : $s(85)) )
## hash index
85
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
56
## name
robot-at(x3, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(86)) and($a(2) $s(86)) and($a(0) $s(86)) and($a(3) $s(86))) : $c(0)) (or(and($a(1) $s(16)) and($a(2) $s(87)) and($a(0) $s(79)) and($a(3) $s(93))) : Bernoulli($c(0.853080500998278))) ($c(1) : $s(86)) )
## hash index
86
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
57
## name
robot-at(x3, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(87)) and($a(2) $s(87)) and($a(0) $s(87)) and($a(3) $s(87))) : $c(0)) (or(and($a(1) $s(86)) and($a(2) $s(88)) and($a(0) $s(80)) and($a(3) $s(94))) : Bernoulli($c(0.854082977070375))) ($c(1) : $s(87)) )
## hash index
87
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
58
## name
robot-at(x3, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(88)) and($a(2) $s(88)) and($a(0) $s(88)) and($a(3) $s(88))) : $c(0)) (or(and($a(1) $s(87)) and($a(2) $s(89)) and($a(0) $s(81)) and($a(3) $s(95))) : Bernoulli($c(0.851991797006935))) ($c(1) : $s(88)) )
## hash index
88
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
59
## name
robot-at(x3, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(89)) and($a(2) $s(89)) and($a(0) $s(89)) and($a(3) $s(89))) : $c(0)) (or(and($a(1) $s(88)) and($a(2) $s(90)) and($a(0) $s(82)) and($a(3) $s(96))) : Bernoulli($c(0.844870491417063))) ($c(1) : $s(89)) )
## hash index
89
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
60
## name
robot-at(x3, y6)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(90)) and($a(2) $s(90)) and($a(0) $s(90)) and($a(3) $s(90))) : $c(0)) (or(and($a(1) $s(89)) and($a(2) $s(91)) and($a(0) $s(83)) and($a(3) $s(97))) : Bernoulli($c(0.813987550718657))) ($c(1) : $s(90)) )
## hash index
90
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
61
## name
robot-at(x3, y7)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(91)) and($a(2) $s(91)) and($a(0) $s(91)) and($a(3) $s(91))) : $c(0)) (or(and($a(1) $s(90)) and($a(2) $s(92)) and($a(0) $s(84)) and($a(3) $s(98))) : Bernoulli($c(0.815311833738639))) ($c(1) : $s(91)) )
## hash index
91
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
62
## name
robot-at(x3, y8)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(92)) and($a(2) $s(92)) and($a(0) $s(92)) and($a(3) $s(92))) : $c(0)) (or(and($a(1) $s(91)) and($a(2) $s(17)) and($a(0) $s(85)) and($a(3) $s(99))) : Bernoulli($c(0.839272220217141))) ($c(1) : $s(92)) )
## hash index
92
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
63
## name
robot-at(x4, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(93)) and($a(2) $s(93)) and($a(0) $s(93)) and($a(3) $s(93))) : $c(0)) (or(and($a(1) $s(18)) and($a(2) $s(94)) and($a(0) $s(86)) and($a(3) $s(100))) : Bernoulli($c(0.765259074545258))) ($c(1) : $s(93)) )
## hash index
93
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
64
## name
robot-at(x4, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(94)) and($a(2) $s(94)) and($a(0) $s(94)) and($a(3) $s(94))) : $c(0)) (or(and($a(1) $s(93)) and($a(2) $s(95)) and($a(0) $s(87)) and($a(3) $s(101))) : Bernoulli($c(0.760167709023539))) ($c(1) : $s(94)) )
## hash index
94
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
65
## name
robot-at(x4, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(95)) and($a(2) $s(95)) and($a(0) $s(95)) and($a(3) $s(95))) : $c(0)) (or(and($a(1) $s(94)) and($a(2) $s(96)) and($a(0) $s(88)) and($a(3) $s(102))) : Bernoulli($c(0.751245790210673))) ($c(1) : $s(95)) )
## hash index
95
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
66
## name
robot-at(x4, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(96)) and($a(2) $s(96)) and($a(0) $s(96)) and($a(3) $s(96))) : $c(0)) (or(and($a(1) $s(95)) and($a(2) $s(97)) and($a(0) $s(89)) and($a(3) $s(103))) : Bernoulli($c(0.751831576750707))) ($c(1) : $s(96)) )
## hash index
96
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
67
## name
robot-at(x4, y6)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(97)) and($a(2) $s(97)) and($a(0) $s(97)) and($a(3) $s(97))) : $c(0)) (or(and($a(1) $s(96)) and($a(2) $s(98)) and($a(0) $s(90)) and($a(3) $s(104))) : Bernoulli($c(0.76313160437976))) ($c(1) : $s(97)) )
## hash index
97
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
68
## name
robot-at(x4, y7)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(98)) and($a(2) $s(98)) and($a(0) $s(98)) and($a(3) $s(98))) : $c(0)) (or(and($a(1) $s(97)) and($a(2) $s(99)) and($a(0) $s(91)) and($a(3) $s(105))) : Bernoulli($c(0.765385664874413))) ($c(1) : $s(98)) )
## hash index
98
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
69
## name
robot-at(x4, y8)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(99)) and($a(2) $s(99)) and($a(0) $s(99)) and($a(3) $s(99))) : $c(0)) (or(and($a(1) $s(98)) and($a(2) $s(19)) and($a(0) $s(92)) and($a(3) $s(106))) : Bernoulli($c(0.774921885249485))) ($c(1) : $s(99)) )
## hash index
99
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
70
## name
robot-at(x5, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(100)) and($a(2) $s(100)) and($a(0) $s(100)) and($a(3) $s(100))) : $c(0)) (or(and($a(1) $s(20)) and($a(2) $s(101)) and($a(0) $s(93)) and($a(3) $s(107))) : Bernoulli($c(0.685181161294831))) ($c(1) : $s(100)) )
## hash index
100
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
71
## name
robot-at(x5, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(101)) and($a(2) $s(101)) and($a(0) $s(101)) and($a(3) $s(101))) : $c(0)) (or(and($a(1) $s(100)) and($a(2) $s(102)) and($a(0) $s(94)) and($a(3) $s(108))) : Bernoulli($c(0.715933613515872))) ($c(1) : $s(101)) )
## hash index
101
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
72
## name
robot-at(x5, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(102)) and($a(2) $s(102)) and($a(0) $s(102)) and($a(3) $s(102))) : $c(0)) (or(and($a(1) $s(101)) and($a(2) $s(103)) and($a(0) $s(95)) and($a(3) $s(109))) : Bernoulli($c(0.688432772316584))) ($c(1) : $s(102)) )
## hash index
102
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
73
## name
robot-at(x5, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(103)) and($a(2) $s(103)) and($a(0) $s(103)) and($a(3) $s(103))) : $c(0)) (or(and($a(1) $s(102)) and($a(2) $s(104)) and($a(0) $s(96)) and($a(3) $s(110))) : Bernoulli($c(0.686946408886034))) ($c(1) : $s(103)) )
## hash index
103
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
74
## name
robot-at(x5, y6)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(104)) and($a(2) $s(104)) and($a(0) $s(104)) and($a(3) $s(104))) : $c(0)) (or(and($a(1) $s(103)) and($a(2) $s(105)) and($a(0) $s(97)) and($a(3) $s(111))) : Bernoulli($c(0.699242626564621))) ($c(1) : $s(104)) )
## hash index
104
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
75
## name
robot-at(x5, y7)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(105)) and($a(2) $s(105)) and($a(0) $s(105)) and($a(3) $s(105))) : $c(0)) (or(and($a(1) $s(104)) and($a(2) $s(106)) and($a(0) $s(98)) and($a(3) $s(112))) : Bernoulli($c(0.691440645842112))) ($c(1) : $s(105)) )
## hash index
105
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
76
## name
robot-at(x5, y8)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(106)) and($a(2) $s(106)) and($a(0) $s(106)) and($a(3) $s(106))) : $c(0)) (or(and($a(1) $s(105)) and($a(2) $s(21)) and($a(0) $s(99)) and($a(3) $s(113))) : Bernoulli($c(0.715782046975707))) ($c(1) : $s(106)) )
## hash index
106
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
77
## name
robot-at(x6, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(107)) and($a(2) $s(107)) and($a(0) $s(107)) and($a(3) $s(107))) : $c(0)) (or(and($a(1) $s(22)) and($a(2) $s(108)) and($a(0) $s(100)) and($a(3) $s(114))) : Bernoulli($c(0.6506896400951))) ($c(1) : $s(107)) )
## hash index
107
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
78
## name
robot-at(x6, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(108)) and($a(2) $s(108)) and($a(0) $s(108)) and($a(3) $s(108))) : $c(0)) (or(and($a(1) $s(107)) and($a(2) $s(109)) and($a(0) $s(101)) and($a(3) $s(115))) : Bernoulli($c(0.6223792702683))) ($c(1) : $s(108)) )
## hash index
108
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
79
## name
robot-at(x6, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(109)) and($a(2) $s(109)) and($a(0) $s(109)) and($a(3) $s(109))) : $c(0)) (or(and($a(1) $s(108)) and($a(2) $s(110)) and($a(0) $s(102)) and($a(3) $s(116))) : Bernoulli($c(0.657970145152935))) ($c(1) : $s(109)) )
## hash index
109
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
80
## name
robot-at(x6, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(110)) and($a(2) $s(110)) and($a(0) $s(110)) and($a(3) $s(110))) : $c(0)) (or(and($a(1) $s(109)) and($a(2) $s(111)) and($a(0) $s(103)) and($a(3) $s(117))) : Bernoulli($c(0.619478520292641))) ($c(1) : $s(110)) )
## hash index
110
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
81
## name
robot-at(x6, y6)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(111)) and($a(2) $s(111)) and($a(0) $s(111)) and($a(3) $s(111))) : $c(0)) (or(and($a(1) $s(110)) and($a(2) $s(112)) and($a(0) $s(104)) and($a(3) $s(118))) : Bernoulli($c(0.658732711302122))) ($c(1) : $s(111)) )
## hash index
111
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
82
## name
robot-at(x6, y7)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(112)) and($a(2) $s(112)) and($a(0) $s(112)) and($a(3) $s(112))) : $c(0)) (or(and($a(1) $s(111)) and($a(2) $s(113)) and($a(0) $s(105)) and($a(3) $s(119))) : Bernoulli($c(0.658502661783421))) ($c(1) : $s(112)) )
## hash index
112
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
83
## name
robot-at(x6, y8)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(113)) and($a(2) $s(113)) and($a(0) $s(113)) and($a(3) $s(113))) : $c(0)) (or(and($a(1) $s(112)) and($a(2) $s(23)) and($a(0) $s(106)) and($a(3) $s(120))) : Bernoulli($c(0.624149324876092))) ($c(1) : $s(113)) )
## hash index
113
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
84
## name
robot-at(x7, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(114)) and($a(2) $s(114)) and($a(0) $s(114)) and($a(3) $s(114))) : $c(0)) (or(and($a(1) $s(24)) and($a(2) $s(115)) and($a(0) $s(107)) and($a(3) $s(121))) : Bernoulli($c(0.601147728213714))) ($c(1) : $s(114)) )
## hash index
114
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
85
## name
robot-at(x7, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(115)) and($a(2) $s(115)) and($a(0) $s(115)) and($a(3) $s(115))) : $c(0)) (or(and($a(1) $s(114)) and($a(2) $s(116)) and($a(0) $s(108)) and($a(3) $s(122))) : Bernoulli($c(0.560831109035421))) ($c(1) : $s(115)) )
## hash index
115
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
86
## name
robot-at(x7, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(116)) and($a(2) $s(116)) and($a(0) $s(116)) and($a(3) $s(116))) : $c(0)) (or(and($a(1) $s(115)) and($a(2) $s(117)) and($a(0) $s(109)) and($a(3) $s(123))) : Bernoulli($c(0.602433635521855))) ($c(1) : $s(116)) )
## hash index
116
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
87
## name
robot-at(x7, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(117)) and($a(2) $s(117)) and($a(0) $s(117)) and($a(3) $s(117))) : $c(0)) (or(and($a(1) $s(116)) and($a(2) $s(118)) and($a(0) $s(110)) and($a(3) $s(124))) : Bernoulli($c(0.563690465082603))) ($c(1) : $s(117)) )
## hash index
117
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
88
## name
robot-at(x7, y6)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(118)) and($a(2) $s(118)) and($a(0) $s(118)) and($a(3) $s(118))) : $c(0)) (or(and($a(1) $s(117)) and($a(2) $s(119)) and($a(0) $s(111)) and($a(3) $s(125))) : Bernoulli($c(0.600589342899028))) ($c(1) : $s(118)) )
## hash index
118
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
89
## name
robot-at(x7, y7)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(119)) and($a(2) $s(119)) and($a(0) $s(119)) and($a(3) $s(119))) : $c(0)) (or(and($a(1) $s(118)) and($a(2) $s(120)) and($a(0) $s(112)) and($a(3) $s(126))) : Bernoulli($c(0.602414323092074))) ($c(1) : $s(119)) )
## hash index
119
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
90
## name
robot-at(x7, y8)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(120)) and($a(2) $s(120)) and($a(0) $s(120)) and($a(3) $s(120))) : $c(0)) (or(and($a(1) $s(119)) and($a(2) $s(25)) and($a(0) $s(113)) and($a(3) $s(127))) : Bernoulli($c(0.603756130796479))) ($c(1) : $s(120)) )
## hash index
120
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
91
## name
robot-at(x8, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(121)) and($a(2) $s(121)) and($a(0) $s(121)) and($a(3) $s(121))) : $c(0)) (or(and($a(1) $s(26)) and($a(2) $s(122)) and($a(0) $s(114)) and($a(3) $s(128))) : Bernoulli($c(0.514920232772928))) ($c(1) : $s(121)) )
## hash index
121
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
92
## name
robot-at(x8, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(122)) and($a(2) $s(122)) and($a(0) $s(122)) and($a(3) $s(122))) : $c(0)) (or(and($a(1) $s(121)) and($a(2) $s(123)) and($a(0) $s(115)) and($a(3) $s(129))) : Bernoulli($c(0.50926633292193))) ($c(1) : $s(122)) )
## hash index
122
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
93
## name
robot-at(x8, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(123)) and($a(2) $s(123)) and($a(0) $s(123)) and($a(3) $s(123))) : $c(0)) (or(and($a(1) $s(122)) and($a(2) $s(124)) and($a(0) $s(116)) and($a(3) $s(130))) : Bernoulli($c(0.505819179473826))) ($c(1) : $s(123)) )
## hash index
123
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
94
## name
robot-at(x8, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(124)) and($a(2) $s(124)) and($a(0) $s(124)) and($a(3) $s(124))) : $c(0)) (or(and($a(1) $s(123)) and($a(2) $s(125)) and($a(0) $s(117)) and($a(3) $s(131))) : Bernoulli($c(0.514121604419438))) ($c(1) : $s(124)) )
## hash index
124
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
95
## name
robot-at(x8, y6)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(125)) and($a(2) $s(125)) and($a(0) $s(125)) and($a(3) $s(125))) : $c(0)) (or(and($a(1) $s(124)) and($a(2) $s(126)) and($a(0) $s(118)) and($a(3) $s(132))) : Bernoulli($c(0.492754586108625))) ($c(1) : $s(125)) )
## hash index
125
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
96
## name
robot-at(x8, y7)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(126)) and($a(2) $s(126)) and($a(0) $s(126)) and($a(3) $s(126))) : $c(0)) (or(and($a(1) $s(125)) and($a(2) $s(127)) and($a(0) $s(119)) and($a(3) $s(133))) : Bernoulli($c(0.529911624688636))) ($c(1) : $s(126)) )
## hash index
126
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
97
## name
robot-at(x8, y8)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(127)) and($a(2) $s(127)) and($a(0) $s(127)) and($a(3) $s(127))) : $c(0)) (or(and($a(1) $s(126)) and($a(2) $s(27)) and($a(0) $s(120)) and($a(3) $s(134))) : Bernoulli($c(0.504116962108727))) ($c(1) : $s(127)) )
## hash index
127
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
98
## name
robot-at(x9, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(128)) and($a(2) $s(128)) and($a(0) $s(128)) and($a(3) $s(128))) : $c(0)) (or(and($a(1) $s(28)) and($a(2) $s(129)) and($a(0) $s(121)) and($a(3) $s(37))) : Bernoulli($c(0.451094465645119))) ($c(1) : $s(128)) )
## hash index
128
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
99
## name
robot-at(x9, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(129)) and($a(2) $s(129)) and($a(0) $s(129)) and($a(3) $s(129))) : $c(0)) (or(and($a(1) $s(128)) and($a(2) $s(130)) and($a(0) $s(122)) and($a(3) $s(38))) : Bernoulli($c(0.436976919837463))) ($c(1) : $s(129)) )
## hash index
129
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
100
## name
robot-at(x9, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(130)) and($a(2) $s(130)) and($a(0) $s(130)) and($a(3) $s(130))) : $c(0)) (or(and($a(1) $s(129)) and($a(2) $s(131)) and($a(0) $s(123)) and($a(3) $s(39))) : Bernoulli($c(0.452238766369371))) ($c(1) : $s(130)) )
## hash index
130
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
101
## name
robot-at(x9, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(131)) and($a(2) $s(131)) and($a(0) $s(131)) and($a(3) $s(131))) : $c(0)) (or(and($a(1) $s(130)) and($a(2) $s(132)) and($a(0) $s(124)) and($a(3) $s(40))) : Bernoulli($c(0.451983033719899))) ($c(1) : $s(131)) )
## hash index
131
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
102
## name
robot-at(x9, y6)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(132)) and($a(2) $s(132)) and($a(0) $s(132)) and($a(3) $s(132))) : $c(0)) (or(and($a(1) $s(131)) and($a(2) $s(133)) and($a(0) $s(125)) and($a(3) $s(41))) : Bernoulli($c(0.431519934798944))) ($c(1) : $s(132)) )
## hash index
132
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
103
## name
robot-at(x9, y7)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(133)) and($a(2) $s(133)) and($a(0) $s(133)) and($a(3) $s(133))) : $c(0)) (or(and($a(1) $s(132)) and($a(2) $s(134)) and($a(0) $s(126)) and($a(3) $s(42))) : Bernoulli($c(0.459196896636013))) ($c(1) : $s(133)) )
## hash index
133
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
104
## name
robot-at(x9, y8)
## number of values
2
## values
0 false
1 true
## formula
switch( (or($s(13) and($a(1) $s(134)) and($a(2) $s(134)) and($a(0) $s(134)) and($a(3) $s(134))) : $c(0)) (or(and($a(1) $s(133)) and($a(2) $s(29)) and($a(0) $s(127)) and($a(3) $s(43))) : Bernoulli($c(0.449299763650395))) ($c(1) : $s(134)) )
## hash index
134
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4



#####REWARD#####
## formula
-($c(0) ~($s(13)))
## min
-1
## max
0
## independent from actions
1
## hash index
135
## caching type
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 1 0 0 
## relevant preconditions
0


## index
4
## state
1 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####
## index
0

## state fluent hash keys (first line is the number of keys)
3
0 5
14 5
30 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
1

## state fluent hash keys (first line is the number of keys)
3
1 5
15 5
36 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
2

## state fluent hash keys (first line is the number of keys)
4
2 5
4 5
28 5
37 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
3

## state fluent hash keys (first line is the number of keys)
4
3 5
5 5
29 5
43 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
4

## state fluent hash keys (first line is the number of keys)
4
2 10
4 10
6 5
44 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
5

## state fluent hash keys (first line is the number of keys)
4
3 10
5 10
7 5
50 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
6

## state fluent hash keys (first line is the number of keys)
4
4 20
6 10
8 5
51 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
7

## state fluent hash keys (first line is the number of keys)
4
5 20
7 10
9 5
57 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
8

## state fluent hash keys (first line is the number of keys)
4
6 20
8 10
10 5
58 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
9

## state fluent hash keys (first line is the number of keys)
4
7 20
9 10
11 5
64 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
10

## state fluent hash keys (first line is the number of keys)
4
8 20
10 10
12 5
65 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
11

## state fluent hash keys (first line is the number of keys)
4
9 20
11 10
13 5
71 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
12

## state fluent hash keys (first line is the number of keys)
3
10 20
12 10
72 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
13

## state fluent hash keys (first line is the number of keys)
136
0 10
1 10
2 20
3 20
4 40
5 40
6 40
7 40
8 40
9 40
10 40
11 20
12 20
13 10
14 10
15 10
16 5
17 5
18 5
19 5
20 5
21 5
22 5
23 5
24 5
25 5
26 5
27 5
28 10
29 10
30 10
31 5
32 5
33 5
34 5
35 5
36 10
37 10
38 5
39 5
40 5
41 5
42 5
43 10
44 10
45 5
46 5
47 5
48 5
49 5
50 10
51 10
52 5
53 5
54 5
55 5
56 5
57 10
58 10
59 5
60 5
61 5
62 5
63 5
64 10
65 10
66 5
67 5
68 5
69 5
70 5
71 10
72 10
73 5
74 5
75 5
76 5
77 5
78 5
79 5
80 5
81 5
82 5
83 5
84 5
85 5
86 5
87 5
88 5
89 5
90 5
91 5
92 5
93 5
94 5
95 5
96 5
97 5
98 5
99 5
100 5
101 5
102 5
103 5
104 5
105 5
106 5
107 5
108 5
109 5
110 5
111 5
112 5
113 5
114 5
115 5
116 5
117 5
118 5
119 5
120 5
121 5
122 5
123 5
124 5
125 5
126 5
127 5
128 5
129 5
130 5
131 5
132 5
133 5
134 5
135 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
14

## state fluent hash keys (first line is the number of keys)
4
0 20
14 20
16 10
79 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
15

## state fluent hash keys (first line is the number of keys)
4
1 20
15 20
17 10
85 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
16

## state fluent hash keys (first line is the number of keys)
4
14 40
16 20
18 10
86 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
17

## state fluent hash keys (first line is the number of keys)
4
15 40
17 20
19 10
92 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
18

## state fluent hash keys (first line is the number of keys)
4
16 40
18 20
20 10
93 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
19

## state fluent hash keys (first line is the number of keys)
4
17 40
19 20
21 10
99 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
20

## state fluent hash keys (first line is the number of keys)
4
18 40
20 20
22 10
100 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
21

## state fluent hash keys (first line is the number of keys)
4
19 40
21 20
23 10
106 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
22

## state fluent hash keys (first line is the number of keys)
4
20 40
22 20
24 10
107 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
23

## state fluent hash keys (first line is the number of keys)
4
21 40
23 20
25 10
113 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
24

## state fluent hash keys (first line is the number of keys)
4
22 40
24 20
26 10
114 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
25

## state fluent hash keys (first line is the number of keys)
4
23 40
25 20
27 10
120 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
26

## state fluent hash keys (first line is the number of keys)
4
24 40
26 20
28 20
121 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
27

## state fluent hash keys (first line is the number of keys)
4
25 40
27 20
29 20
127 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
28

## state fluent hash keys (first line is the number of keys)
4
2 40
26 40
28 40
128 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
29

## state fluent hash keys (first line is the number of keys)
4
3 40
27 40
29 40
134 10
## kleene state fluent hash keys (first line is the number of keys)
0


#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0

## state fluent hash keys (first line is the number of keys)
4
0 40
30 20
31 10
79 20
## kleene state fluent hash keys (first line is the number of keys)
4
21896192 135
30 45
31 15
79 45

## index
1

## state fluent hash keys (first line is the number of keys)
4
30 40
31 20
32 10
80 10
## kleene state fluent hash keys (first line is the number of keys)
4
21905648 135
31 45
32 15
80 15

## index
2

## state fluent hash keys (first line is the number of keys)
4
31 40
32 20
33 10
81 10
## kleene state fluent hash keys (first line is the number of keys)
4
21915040 135
32 45
33 15
81 15

## index
3

## state fluent hash keys (first line is the number of keys)
4
32 40
33 20
34 10
82 10
## kleene state fluent hash keys (first line is the number of keys)
4
21924544 135
33 45
34 15
82 15

## index
4

## state fluent hash keys (first line is the number of keys)
4
33 40
34 20
35 10
83 10
## kleene state fluent hash keys (first line is the number of keys)
4
21934048 135
34 45
35 15
83 15

## index
5

## state fluent hash keys (first line is the number of keys)
4
34 40
35 20
36 20
84 10
## kleene state fluent hash keys (first line is the number of keys)
4
21943552 135
35 45
36 45
84 15

## index
6

## state fluent hash keys (first line is the number of keys)
4
1 40
35 40
36 40
85 20
## kleene state fluent hash keys (first line is the number of keys)
4
21962464 135
35 135
36 135
85 45

## index
7

## state fluent hash keys (first line is the number of keys)
5
2 80
37 20
38 10
44 20
128 20
## kleene state fluent hash keys (first line is the number of keys)
5
22676368 15429648
37 45
38 15
44 45
128 45

## index
8

## state fluent hash keys (first line is the number of keys)
5
37 40
38 20
39 10
45 10
129 10
## kleene state fluent hash keys (first line is the number of keys)
5
22462320 15429648
38 45
39 15
45 15
129 15

## index
9

## state fluent hash keys (first line is the number of keys)
5
38 40
39 20
40 10
46 10
130 10
## kleene state fluent hash keys (first line is the number of keys)
5
22463280 15429648
39 45
40 15
46 15
130 15

## index
10

## state fluent hash keys (first line is the number of keys)
5
39 40
40 20
41 10
47 10
131 10
## kleene state fluent hash keys (first line is the number of keys)
5
0 15429648
40 45
41 15
47 15
131 15

## index
11

## state fluent hash keys (first line is the number of keys)
5
40 40
41 20
42 10
48 10
132 10
## kleene state fluent hash keys (first line is the number of keys)
5
22482672 15429648
41 45
42 15
48 15
132 15

## index
12

## state fluent hash keys (first line is the number of keys)
5
41 40
42 20
43 20
49 10
133 10
## kleene state fluent hash keys (first line is the number of keys)
5
22768528 15429648
42 45
43 45
49 15
133 15

## index
13

## state fluent hash keys (first line is the number of keys)
5
3 80
42 40
43 40
50 20
134 20
## kleene state fluent hash keys (first line is the number of keys)
5
23682144 15429648
42 135
43 135
50 45
134 45

## index
14

## state fluent hash keys (first line is the number of keys)
5
4 80
37 80
44 40
45 20
51 20
## kleene state fluent hash keys (first line is the number of keys)
5
22073472 15429648
37 405
44 135
45 45
51 45

## index
15

## state fluent hash keys (first line is the number of keys)
5
38 80
44 80
45 40
46 20
52 10
## kleene state fluent hash keys (first line is the number of keys)
5
23605776 22276336
44 405
45 135
46 45
52 15

## index
16

## state fluent hash keys (first line is the number of keys)
5
39 80
45 80
46 40
47 20
53 10
## kleene state fluent hash keys (first line is the number of keys)
5
22257808 22294864
45 405
46 135
47 45
53 15

## index
17

## state fluent hash keys (first line is the number of keys)
5
40 80
46 80
47 40
48 20
54 10
## kleene state fluent hash keys (first line is the number of keys)
5
22276336 22313392
46 405
47 135
48 45
54 15

## index
18

## state fluent hash keys (first line is the number of keys)
5
41 80
47 80
48 40
49 20
55 10
## kleene state fluent hash keys (first line is the number of keys)
5
22294864 22331952
47 405
48 135
49 45
55 15

## index
19

## state fluent hash keys (first line is the number of keys)
5
42 80
48 80
49 40
50 40
56 10
## kleene state fluent hash keys (first line is the number of keys)
5
22313392 22350464
48 405
49 135
50 135
56 15

## index
20

## state fluent hash keys (first line is the number of keys)
5
5 80
43 80
49 80
50 80
57 20
## kleene state fluent hash keys (first line is the number of keys)
5
22331952 22369088
43 405
49 405
50 405
57 45

## index
21

## state fluent hash keys (first line is the number of keys)
5
6 80
44 160
51 40
52 20
58 20
## kleene state fluent hash keys (first line is the number of keys)
5
22350464 22387664
44 1215
51 135
52 45
58 45

## index
22

## state fluent hash keys (first line is the number of keys)
5
45 160
51 80
52 40
53 20
59 10
## kleene state fluent hash keys (first line is the number of keys)
5
22369088 22406192
51 405
52 135
53 45
59 15

## index
23

## state fluent hash keys (first line is the number of keys)
5
46 160
52 80
53 40
54 20
60 10
## kleene state fluent hash keys (first line is the number of keys)
5
22387664 22424720
52 405
53 135
54 45
60 15

## index
24

## state fluent hash keys (first line is the number of keys)
5
47 160
53 80
54 40
55 20
61 10
## kleene state fluent hash keys (first line is the number of keys)
5
22406192 22443248
53 405
54 135
55 45
61 15

## index
25

## state fluent hash keys (first line is the number of keys)
5
48 160
54 80
55 40
56 20
62 10
## kleene state fluent hash keys (first line is the number of keys)
5
22424720 22461728
54 405
55 135
56 45
62 15

## index
26

## state fluent hash keys (first line is the number of keys)
5
49 160
55 80
56 40
57 40
63 10
## kleene state fluent hash keys (first line is the number of keys)
5
22443248 22484256
55 405
56 135
57 135
63 15

## index
27

## state fluent hash keys (first line is the number of keys)
5
7 80
50 160
56 80
57 80
64 20
## kleene state fluent hash keys (first line is the number of keys)
5
7 405
50 1215
56 405
57 405
64 45

## index
28

## state fluent hash keys (first line is the number of keys)
5
8 80
51 160
58 40
59 20
65 20
## kleene state fluent hash keys (first line is the number of keys)
5
22484256 22521488
51 1215
58 135
59 45
65 45

## index
29

## state fluent hash keys (first line is the number of keys)
5
52 160
58 80
59 40
60 20
66 10
## kleene state fluent hash keys (first line is the number of keys)
5
22502912 22540016
58 405
59 135
60 45
66 15

## index
30

## state fluent hash keys (first line is the number of keys)
5
53 160
59 80
60 40
61 20
67 10
## kleene state fluent hash keys (first line is the number of keys)
5
22521488 22558544
59 405
60 135
61 45
67 15

## index
31

## state fluent hash keys (first line is the number of keys)
5
54 160
60 80
61 40
62 20
68 10
## kleene state fluent hash keys (first line is the number of keys)
5
22540016 22577072
60 405
61 135
62 45
68 15

## index
32

## state fluent hash keys (first line is the number of keys)
5
55 160
61 80
62 40
63 20
69 10
## kleene state fluent hash keys (first line is the number of keys)
5
22558544 22595552
61 405
62 135
63 45
69 15

## index
33

## state fluent hash keys (first line is the number of keys)
5
56 160
62 80
63 40
64 40
70 10
## kleene state fluent hash keys (first line is the number of keys)
5
22577072 22613984
62 405
63 135
64 135
70 15

## index
34

## state fluent hash keys (first line is the number of keys)
5
9 80
57 160
63 80
64 80
71 20
## kleene state fluent hash keys (first line is the number of keys)
5
22595552 22623552
57 1215
63 405
64 405
71 45

## index
35

## state fluent hash keys (first line is the number of keys)
5
10 80
58 160
65 40
66 20
72 20
## kleene state fluent hash keys (first line is the number of keys)
5
22613984 22633024
58 1215
65 135
66 45
72 45

## index
36

## state fluent hash keys (first line is the number of keys)
5
59 160
65 80
66 40
67 20
73 10
## kleene state fluent hash keys (first line is the number of keys)
5
22623552 22642640
65 405
66 135
67 45
73 15

## index
37

## state fluent hash keys (first line is the number of keys)
5
60 160
66 80
67 40
68 20
74 10
## kleene state fluent hash keys (first line is the number of keys)
5
22633024 22652208
66 405
67 135
68 45
74 15

## index
38

## state fluent hash keys (first line is the number of keys)
5
61 160
67 80
68 40
69 20
75 10
## kleene state fluent hash keys (first line is the number of keys)
5
22642640 22661776
67 405
68 135
69 45
75 15

## index
39

## state fluent hash keys (first line is the number of keys)
5
62 160
68 80
69 40
70 20
76 10
## kleene state fluent hash keys (first line is the number of keys)
5
22652208 22671376
68 405
69 135
70 45
76 15

## index
40

## state fluent hash keys (first line is the number of keys)
5
63 160
69 80
70 40
71 40
77 10
## kleene state fluent hash keys (first line is the number of keys)
5
22661776 22676112
69 405
70 135
71 135
77 15

## index
41

## state fluent hash keys (first line is the number of keys)
5
11 40
64 160
70 80
71 80
78 10
## kleene state fluent hash keys (first line is the number of keys)
5
22671376 22823552
64 1215
70 405
71 405
78 15

## index
42

## state fluent hash keys (first line is the number of keys)
4
12 40
65 160
72 40
73 20
## kleene state fluent hash keys (first line is the number of keys)
4
21962544 135
65 1215
72 135
73 45

## index
43

## state fluent hash keys (first line is the number of keys)
4
66 160
72 80
73 40
74 20
## kleene state fluent hash keys (first line is the number of keys)
4
22092016 1215
72 405
73 135
74 45

## index
44

## state fluent hash keys (first line is the number of keys)
4
67 160
73 80
74 40
75 20
## kleene state fluent hash keys (first line is the number of keys)
4
22110512 1215
73 405
74 135
75 45

## index
45

## state fluent hash keys (first line is the number of keys)
4
68 160
74 80
75 40
76 20
## kleene state fluent hash keys (first line is the number of keys)
4
22128912 1215
74 405
75 135
76 45

## index
46

## state fluent hash keys (first line is the number of keys)
4
69 160
75 80
76 40
77 20
## kleene state fluent hash keys (first line is the number of keys)
4
22147312 1215
75 405
76 135
77 45

## index
47

## state fluent hash keys (first line is the number of keys)
4
70 160
76 80
77 40
78 20
## kleene state fluent hash keys (first line is the number of keys)
4
22165712 1215
76 405
77 135
78 45

## index
48

## state fluent hash keys (first line is the number of keys)
4
13 20
71 160
77 80
78 40
## kleene state fluent hash keys (first line is the number of keys)
4
22184112 45
71 1215
77 405
78 135

## index
49

## state fluent hash keys (first line is the number of keys)
5
14 80
30 80
79 40
80 20
86 20
## kleene state fluent hash keys (first line is the number of keys)
5
22676112 22842128
30 405
79 135
80 45
86 45

## index
50

## state fluent hash keys (first line is the number of keys)
5
31 80
79 80
80 40
81 20
87 10
## kleene state fluent hash keys (first line is the number of keys)
5
22823552 22860656
79 405
80 135
81 45
87 15

## index
51

## state fluent hash keys (first line is the number of keys)
5
32 80
80 80
81 40
82 20
88 10
## kleene state fluent hash keys (first line is the number of keys)
5
22842128 22879184
80 405
81 135
82 45
88 15

## index
52

## state fluent hash keys (first line is the number of keys)
5
33 80
81 80
82 40
83 20
89 10
## kleene state fluent hash keys (first line is the number of keys)
5
22860656 22897712
81 405
82 135
83 45
89 15

## index
53

## state fluent hash keys (first line is the number of keys)
5
34 80
82 80
83 40
84 20
90 10
## kleene state fluent hash keys (first line is the number of keys)
5
22879184 22916272
82 405
83 135
84 45
90 15

## index
54

## state fluent hash keys (first line is the number of keys)
5
35 80
83 80
84 40
85 40
91 10
## kleene state fluent hash keys (first line is the number of keys)
5
22897712 22934784
83 405
84 135
85 135
91 15

## index
55

## state fluent hash keys (first line is the number of keys)
5
15 80
36 80
84 80
85 80
92 20
## kleene state fluent hash keys (first line is the number of keys)
5
22916272 22953408
36 405
84 405
85 405
92 45

## index
56

## state fluent hash keys (first line is the number of keys)
5
16 80
79 160
86 40
87 20
93 20
## kleene state fluent hash keys (first line is the number of keys)
5
22934784 22971984
79 1215
86 135
87 45
93 45

## index
57

## state fluent hash keys (first line is the number of keys)
5
80 160
86 80
87 40
88 20
94 10
## kleene state fluent hash keys (first line is the number of keys)
5
22953408 22990512
86 405
87 135
88 45
94 15

## index
58

## state fluent hash keys (first line is the number of keys)
5
81 160
87 80
88 40
89 20
95 10
## kleene state fluent hash keys (first line is the number of keys)
5
22971984 23009040
87 405
88 135
89 45
95 15

## index
59

## state fluent hash keys (first line is the number of keys)
5
82 160
88 80
89 40
90 20
96 10
## kleene state fluent hash keys (first line is the number of keys)
5
22990512 23027568
88 405
89 135
90 45
96 15

## index
60

## state fluent hash keys (first line is the number of keys)
5
83 160
89 80
90 40
91 20
97 10
## kleene state fluent hash keys (first line is the number of keys)
5
23009040 23046048
89 405
90 135
91 45
97 15

## index
61

## state fluent hash keys (first line is the number of keys)
5
84 160
90 80
91 40
92 40
98 10
## kleene state fluent hash keys (first line is the number of keys)
5
23027568 23064480
90 405
91 135
92 135
98 15

## index
62

## state fluent hash keys (first line is the number of keys)
5
17 80
85 160
91 80
92 80
99 20
## kleene state fluent hash keys (first line is the number of keys)
5
23046048 23083104
85 1215
91 405
92 405
99 45

## index
63

## state fluent hash keys (first line is the number of keys)
5
18 80
86 160
93 40
94 20
100 20
## kleene state fluent hash keys (first line is the number of keys)
5
23064480 23101632
86 1215
93 135
94 45
100 45

## index
64

## state fluent hash keys (first line is the number of keys)
5
87 160
93 80
94 40
95 20
101 10
## kleene state fluent hash keys (first line is the number of keys)
5
23083104 23120208
93 405
94 135
95 45
101 15

## index
65

## state fluent hash keys (first line is the number of keys)
5
88 160
94 80
95 40
96 20
102 10
## kleene state fluent hash keys (first line is the number of keys)
5
23101632 23138736
94 405
95 135
96 45
102 15

## index
66

## state fluent hash keys (first line is the number of keys)
5
89 160
95 80
96 40
97 20
103 10
## kleene state fluent hash keys (first line is the number of keys)
5
23120208 23157264
95 405
96 135
97 45
103 15

## index
67

## state fluent hash keys (first line is the number of keys)
5
90 160
96 80
97 40
98 20
104 10
## kleene state fluent hash keys (first line is the number of keys)
5
23138736 23175744
96 405
97 135
98 45
104 15

## index
68

## state fluent hash keys (first line is the number of keys)
5
91 160
97 80
98 40
99 40
105 10
## kleene state fluent hash keys (first line is the number of keys)
5
23157264 23194176
97 405
98 135
99 135
105 15

## index
69

## state fluent hash keys (first line is the number of keys)
5
19 80
92 160
98 80
99 80
106 20
## kleene state fluent hash keys (first line is the number of keys)
5
23175744 23212800
92 1215
98 405
99 405
106 45

## index
70

## state fluent hash keys (first line is the number of keys)
5
20 80
93 160
100 40
101 20
107 20
## kleene state fluent hash keys (first line is the number of keys)
5
23194176 23231376
93 1215
100 135
101 45
107 45

## index
71

## state fluent hash keys (first line is the number of keys)
5
94 160
100 80
101 40
102 20
108 10
## kleene state fluent hash keys (first line is the number of keys)
5
23212800 23249904
100 405
101 135
102 45
108 15

## index
72

## state fluent hash keys (first line is the number of keys)
5
95 160
101 80
102 40
103 20
109 10
## kleene state fluent hash keys (first line is the number of keys)
5
23231376 23268432
101 405
102 135
103 45
109 15

## index
73

## state fluent hash keys (first line is the number of keys)
5
96 160
102 80
103 40
104 20
110 10
## kleene state fluent hash keys (first line is the number of keys)
5
23249904 23286960
102 405
103 135
104 45
110 15

## index
74

## state fluent hash keys (first line is the number of keys)
5
97 160
103 80
104 40
105 20
111 10
## kleene state fluent hash keys (first line is the number of keys)
5
23268432 23305440
103 405
104 135
105 45
111 15

## index
75

## state fluent hash keys (first line is the number of keys)
5
98 160
104 80
105 40
106 40
112 10
## kleene state fluent hash keys (first line is the number of keys)
5
23286960 23323872
104 405
105 135
106 135
112 15

## index
76

## state fluent hash keys (first line is the number of keys)
5
21 80
99 160
105 80
106 80
113 20
## kleene state fluent hash keys (first line is the number of keys)
5
23305440 23342448
99 1215
105 405
106 405
113 45

## index
77

## state fluent hash keys (first line is the number of keys)
5
22 80
100 160
107 40
108 20
114 20
## kleene state fluent hash keys (first line is the number of keys)
5
23323872 23361024
100 1215
107 135
108 45
114 45

## index
78

## state fluent hash keys (first line is the number of keys)
5
101 160
107 80
108 40
109 20
115 10
## kleene state fluent hash keys (first line is the number of keys)
5
23342448 23379600
107 405
108 135
109 45
115 15

## index
79

## state fluent hash keys (first line is the number of keys)
5
102 160
108 80
109 40
110 20
116 10
## kleene state fluent hash keys (first line is the number of keys)
5
23361024 23398128
108 405
109 135
110 45
116 15

## index
80

## state fluent hash keys (first line is the number of keys)
5
103 160
109 80
110 40
111 20
117 10
## kleene state fluent hash keys (first line is the number of keys)
5
23379600 23416656
109 405
110 135
111 45
117 15

## index
81

## state fluent hash keys (first line is the number of keys)
5
104 160
110 80
111 40
112 20
118 10
## kleene state fluent hash keys (first line is the number of keys)
5
23398128 23435136
110 405
111 135
112 45
118 15

## index
82

## state fluent hash keys (first line is the number of keys)
5
105 160
111 80
112 40
113 40
119 10
## kleene state fluent hash keys (first line is the number of keys)
5
23416656 23453568
111 405
112 135
113 135
119 15

## index
83

## state fluent hash keys (first line is the number of keys)
5
23 80
106 160
112 80
113 80
120 20
## kleene state fluent hash keys (first line is the number of keys)
5
23435136 23472096
106 1215
112 405
113 405
120 45

## index
84

## state fluent hash keys (first line is the number of keys)
5
24 80
107 160
114 40
115 20
121 20
## kleene state fluent hash keys (first line is the number of keys)
5
23453568 23490624
107 1215
114 135
115 45
121 45

## index
85

## state fluent hash keys (first line is the number of keys)
5
108 160
114 80
115 40
116 20
122 10
## kleene state fluent hash keys (first line is the number of keys)
5
23472096 23509200
114 405
115 135
116 45
122 15

## index
86

## state fluent hash keys (first line is the number of keys)
5
109 160
115 80
116 40
117 20
123 10
## kleene state fluent hash keys (first line is the number of keys)
5
23490624 23527824
115 405
116 135
117 45
123 15

## index
87

## state fluent hash keys (first line is the number of keys)
5
110 160
116 80
117 40
118 20
124 10
## kleene state fluent hash keys (first line is the number of keys)
5
23509200 23546448
116 405
117 135
118 45
124 15

## index
88

## state fluent hash keys (first line is the number of keys)
5
111 160
117 80
118 40
119 20
125 10
## kleene state fluent hash keys (first line is the number of keys)
5
23527824 23565056
117 405
118 135
119 45
125 15

## index
89

## state fluent hash keys (first line is the number of keys)
5
112 160
118 80
119 40
120 40
126 10
## kleene state fluent hash keys (first line is the number of keys)
5
23546448 23583568
118 405
119 135
120 135
126 15

## index
90

## state fluent hash keys (first line is the number of keys)
5
25 80
113 160
119 80
120 80
127 20
## kleene state fluent hash keys (first line is the number of keys)
5
23565056 22462448
113 1215
119 405
120 405
127 45

## index
91

## state fluent hash keys (first line is the number of keys)
5
26 80
114 160
121 40
122 20
128 40
## kleene state fluent hash keys (first line is the number of keys)
5
23583568 22463408
114 1215
121 135
122 45
128 135

## index
92

## state fluent hash keys (first line is the number of keys)
5
115 160
121 80
122 40
123 20
129 20
## kleene state fluent hash keys (first line is the number of keys)
5
22462448 22482800
121 405
122 135
123 45
129 45

## index
93

## state fluent hash keys (first line is the number of keys)
5
116 160
122 80
123 40
124 20
130 20
## kleene state fluent hash keys (first line is the number of keys)
5
22463408 22483664
122 405
123 135
124 45
130 45

## index
94

## state fluent hash keys (first line is the number of keys)
5
117 160
123 80
124 40
125 20
131 20
## kleene state fluent hash keys (first line is the number of keys)
5
22482800 23682272
123 405
124 135
125 45
131 45

## index
95

## state fluent hash keys (first line is the number of keys)
5
118 160
124 80
125 40
126 20
132 20
## kleene state fluent hash keys (first line is the number of keys)
5
22483664 23701088
124 405
125 135
126 45
132 45

## index
96

## state fluent hash keys (first line is the number of keys)
5
119 160
125 80
126 40
127 40
133 20
## kleene state fluent hash keys (first line is the number of keys)
5
22786784 15429648
125 405
126 135
127 135
133 45

## index
97

## state fluent hash keys (first line is the number of keys)
5
27 80
120 160
126 80
127 80
134 40
## kleene state fluent hash keys (first line is the number of keys)
5
23701088 139644224228320
0 0
126 405
127 405
134 135

## index
98

## state fluent hash keys (first line is the number of keys)
5
28 80
37 160
121 160
128 80
129 40
## kleene state fluent hash keys (first line is the number of keys)
5
28 405
37 1215
121 1215
128 405
129 135

## index
99

## state fluent hash keys (first line is the number of keys)
5
38 160
122 160
128 160
129 80
130 40
## kleene state fluent hash keys (first line is the number of keys)
5
38 1215
122 1215
128 1215
129 405
130 135

## index
100

## state fluent hash keys (first line is the number of keys)
5
39 160
123 160
129 160
130 80
131 40
## kleene state fluent hash keys (first line is the number of keys)
5
39 1215
123 1215
129 1215
130 405
131 135

## index
101

## state fluent hash keys (first line is the number of keys)
5
40 160
124 160
130 160
131 80
132 40
## kleene state fluent hash keys (first line is the number of keys)
5
40 1215
124 1215
130 1215
131 405
132 135

## index
102

## state fluent hash keys (first line is the number of keys)
5
41 160
125 160
131 160
132 80
133 40
## kleene state fluent hash keys (first line is the number of keys)
5
23682272 23719904
125 1215
131 1215
132 405
133 135

## index
103

## state fluent hash keys (first line is the number of keys)
5
42 160
126 160
132 160
133 80
134 80
## kleene state fluent hash keys (first line is the number of keys)
5
42 1215
126 1215
132 1215
133 405
134 405

## index
104

## state fluent hash keys (first line is the number of keys)
5
29 80
43 160
127 160
133 160
134 160
## kleene state fluent hash keys (first line is the number of keys)
5
29 405
43 1215
127 1215
133 1215
134 1215

