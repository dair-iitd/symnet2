#####TASK##### Here
## name
skill_teaching_inst_mdp__5003
## horizon
100
## discount factor
1
## number of action fluents
32
## number of det state fluents
64
## number of prob state fluents
32
## number of preconds
0
## number of actions
33
## number of hashing functions
97
## initial state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## 1 if task is deterministic
0
## 1 if state hashing possible
0
## 1 if kleene state hashing possible
0


#####ACTION FLUENTS#####
## index
0
## name
askProb(s0)
## number of values
2
## values
0 false
1 true

## index
1
## name
askProb(s1)
## number of values
2
## values
0 false
1 true

## index
2
## name
askProb(s10)
## number of values
2
## values
0 false
1 true

## index
3
## name
askProb(s11)
## number of values
2
## values
0 false
1 true

## index
4
## name
askProb(s12)
## number of values
2
## values
0 false
1 true

## index
5
## name
askProb(s13)
## number of values
2
## values
0 false
1 true

## index
6
## name
askProb(s14)
## number of values
2
## values
0 false
1 true

## index
7
## name
askProb(s15)
## number of values
2
## values
0 false
1 true

## index
8
## name
askProb(s2)
## number of values
2
## values
0 false
1 true

## index
9
## name
askProb(s3)
## number of values
2
## values
0 false
1 true

## index
10
## name
askProb(s4)
## number of values
2
## values
0 false
1 true

## index
11
## name
askProb(s5)
## number of values
2
## values
0 false
1 true

## index
12
## name
askProb(s6)
## number of values
2
## values
0 false
1 true

## index
13
## name
askProb(s7)
## number of values
2
## values
0 false
1 true

## index
14
## name
askProb(s8)
## number of values
2
## values
0 false
1 true

## index
15
## name
askProb(s9)
## number of values
2
## values
0 false
1 true

## index
16
## name
giveHint(s0)
## number of values
2
## values
0 false
1 true

## index
17
## name
giveHint(s1)
## number of values
2
## values
0 false
1 true

## index
18
## name
giveHint(s10)
## number of values
2
## values
0 false
1 true

## index
19
## name
giveHint(s11)
## number of values
2
## values
0 false
1 true

## index
20
## name
giveHint(s12)
## number of values
2
## values
0 false
1 true

## index
21
## name
giveHint(s13)
## number of values
2
## values
0 false
1 true

## index
22
## name
giveHint(s14)
## number of values
2
## values
0 false
1 true

## index
23
## name
giveHint(s15)
## number of values
2
## values
0 false
1 true

## index
24
## name
giveHint(s2)
## number of values
2
## values
0 false
1 true

## index
25
## name
giveHint(s3)
## number of values
2
## values
0 false
1 true

## index
26
## name
giveHint(s4)
## number of values
2
## values
0 false
1 true

## index
27
## name
giveHint(s5)
## number of values
2
## values
0 false
1 true

## index
28
## name
giveHint(s6)
## number of values
2
## values
0 false
1 true

## index
29
## name
giveHint(s7)
## number of values
2
## values
0 false
1 true

## index
30
## name
giveHint(s8)
## number of values
2
## values
0 false
1 true

## index
31
## name
giveHint(s9)
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####
## index
0
## name
hintDelayVar(s0)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(16))
## hash index
0
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 1
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
1
## name
hintDelayVar(s1)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(17))
## hash index
1
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 1
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
2
## name
hintDelayVar(s10)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(18))
## hash index
2
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
3
## name
hintDelayVar(s11)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(19))
## hash index
3
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 1
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
4
## name
hintDelayVar(s12)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(20))
## hash index
4
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 1
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
5
## name
hintDelayVar(s13)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(21))
## hash index
5
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 1
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
6
## name
hintDelayVar(s14)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(22))
## hash index
6
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
7
## name
hintDelayVar(s15)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(23))
## hash index
7
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
8
## name
hintDelayVar(s2)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(24))
## hash index
8
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
9
## name
hintDelayVar(s3)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(25))
## hash index
9
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
10
## name
hintDelayVar(s4)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(26))
## hash index
10
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
11
## name
hintDelayVar(s5)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(27))
## hash index
11
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
12
## name
hintDelayVar(s6)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(28))
## hash index
12
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
13
## name
hintDelayVar(s7)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(29))
## hash index
13
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
14
## name
hintDelayVar(s8)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(30))
## hash index
14
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
15
## name
hintDelayVar(s9)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(31))
## hash index
15
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
16
## name
hintedRight(s0)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(16))
## hash index
16
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 1
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
17
## name
hintedRight(s1)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(17))
## hash index
17
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 1
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
18
## name
hintedRight(s10)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(18) $s(81) $s(93) $s(94))
## hash index
18
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
19
## name
hintedRight(s11)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(19) $s(88) $s(90))
## hash index
19
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 1
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
20
## name
hintedRight(s12)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(20) $s(81) $s(92))
## hash index
20
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 1
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
21
## name
hintedRight(s13)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(21) $s(81) $s(89) $s(90) $s(94))
## hash index
21
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 1
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
22
## name
hintedRight(s14)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(22) $s(91))
## hash index
22
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
23
## name
hintedRight(s15)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(23) $s(80) $s(95) $s(82))
## hash index
23
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
24
## name
hintedRight(s2)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(24) $s(80) $s(81))
## hash index
24
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
25
## name
hintedRight(s3)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(25) $s(80) $s(81) $s(88))
## hash index
25
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
26
## name
hintedRight(s4)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(26) $s(81))
## hash index
26
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
27
## name
hintedRight(s5)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(27) $s(88))
## hash index
27
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
28
## name
hintedRight(s6)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(28) $s(80) $s(81) $s(88) $s(90))
## hash index
28
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
29
## name
hintedRight(s7)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(29) $s(80) $s(81))
## hash index
29
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
30
## name
hintedRight(s8)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(30) $s(91))
## hash index
30
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
31
## name
hintedRight(s9)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(31) $s(88))
## hash index
31
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
32
## name
proficiencyMed(s0)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(48)) $s(32)) : $c(1)) (and($s(48) $s(16)) : $c(1)) (and($s(48) $s(64)) : $c(1)) ($s(80) : $c(1)) ($c(1) : and($s(32) $s(48) $s(0))) )
## hash index
32
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
33
## name
proficiencyMed(s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(49)) $s(33)) : $c(1)) (and($s(49) $s(17)) : $c(1)) (and($s(49) $s(65)) : $c(1)) ($s(81) : $c(1)) ($c(1) : and($s(33) $s(49) $s(1))) )
## hash index
33
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
34
## name
proficiencyMed(s10)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(50)) $s(34)) : $c(1)) (and($s(50) $s(18)) : $c(1)) (and($s(50) $s(66)) : $c(1)) ($s(82) : $c(1)) ($c(1) : and($s(34) $s(50) $s(2))) )
## hash index
34
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
35
## name
proficiencyMed(s11)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(51)) $s(35)) : $c(1)) (and($s(51) $s(19)) : $c(1)) (and($s(51) $s(67)) : $c(1)) ($s(83) : $c(1)) ($c(1) : and($s(35) $s(51) $s(3))) )
## hash index
35
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
36
## name
proficiencyMed(s12)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(52)) $s(36)) : $c(1)) (and($s(52) $s(20)) : $c(1)) (and($s(52) $s(68)) : $c(1)) ($s(84) : $c(1)) ($c(1) : and($s(36) $s(52) $s(4))) )
## hash index
36
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
37
## name
proficiencyMed(s13)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(53)) $s(37)) : $c(1)) (and($s(53) $s(21)) : $c(1)) (and($s(53) $s(69)) : $c(1)) ($s(85) : $c(1)) ($c(1) : and($s(37) $s(53) $s(5))) )
## hash index
37
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
38
## name
proficiencyMed(s14)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(54)) $s(38)) : $c(1)) (and($s(54) $s(22)) : $c(1)) (and($s(54) $s(70)) : $c(1)) ($s(86) : $c(1)) ($c(1) : and($s(38) $s(54) $s(6))) )
## hash index
38
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
39
## name
proficiencyMed(s15)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(55)) $s(39)) : $c(1)) (and($s(55) $s(23)) : $c(1)) (and($s(55) $s(71)) : $c(1)) ($s(87) : $c(1)) ($c(1) : and($s(39) $s(55) $s(7))) )
## hash index
39
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
40
## name
proficiencyMed(s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(56)) $s(40)) : $c(1)) (and($s(56) $s(24)) : $c(1)) (and($s(56) $s(72)) : $c(1)) ($s(88) : $c(1)) ($c(1) : and($s(40) $s(56) $s(8))) )
## hash index
40
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
41
## name
proficiencyMed(s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(57)) $s(41)) : $c(1)) (and($s(57) $s(25)) : $c(1)) (and($s(57) $s(73)) : $c(1)) ($s(89) : $c(1)) ($c(1) : and($s(41) $s(57) $s(9))) )
## hash index
41
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
42
## name
proficiencyMed(s4)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(58)) $s(42)) : $c(1)) (and($s(58) $s(26)) : $c(1)) (and($s(58) $s(74)) : $c(1)) ($s(90) : $c(1)) ($c(1) : and($s(42) $s(58) $s(10))) )
## hash index
42
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
43
## name
proficiencyMed(s5)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(59)) $s(43)) : $c(1)) (and($s(59) $s(27)) : $c(1)) (and($s(59) $s(75)) : $c(1)) ($s(91) : $c(1)) ($c(1) : and($s(43) $s(59) $s(11))) )
## hash index
43
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
44
## name
proficiencyMed(s6)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(60)) $s(44)) : $c(1)) (and($s(60) $s(28)) : $c(1)) (and($s(60) $s(76)) : $c(1)) ($s(92) : $c(1)) ($c(1) : and($s(44) $s(60) $s(12))) )
## hash index
44
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
45
## name
proficiencyMed(s7)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(61)) $s(45)) : $c(1)) (and($s(61) $s(29)) : $c(1)) (and($s(61) $s(77)) : $c(1)) ($s(93) : $c(1)) ($c(1) : and($s(45) $s(61) $s(13))) )
## hash index
45
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
46
## name
proficiencyMed(s8)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(62)) $s(46)) : $c(1)) (and($s(62) $s(30)) : $c(1)) (and($s(62) $s(78)) : $c(1)) ($s(94) : $c(1)) ($c(1) : and($s(46) $s(62) $s(14))) )
## hash index
46
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
47
## name
proficiencyMed(s9)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(63)) $s(47)) : $c(1)) (and($s(63) $s(31)) : $c(1)) (and($s(63) $s(79)) : $c(1)) ($s(95) : $c(1)) ($c(1) : and($s(47) $s(63) $s(15))) )
## hash index
47
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
48
## name
updateTurn(s0)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) or($a(0) $a(16)))
## hash index
48
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 1
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 2

## index
49
## name
updateTurn(s1)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) or($a(1) $a(17)))
## hash index
49
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 1
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 2
32 0

## index
50
## name
updateTurn(s10)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) or($a(2) $a(18)))
## hash index
50
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 2
31 0
32 0

## index
51
## name
updateTurn(s11)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) or($a(3) $a(19)))
## hash index
51
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 1
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 2
30 0
31 0
32 0

## index
52
## name
updateTurn(s12)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) or($a(4) $a(20)))
## hash index
52
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 1
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 2
29 0
30 0
31 0
32 0

## index
53
## name
updateTurn(s13)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) or($a(5) $a(21)))
## hash index
53
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 1
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 2
28 0
29 0
30 0
31 0
32 0

## index
54
## name
updateTurn(s14)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) or($a(6) $a(22)))
## hash index
54
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 2
27 0
28 0
29 0
30 0
31 0
32 0

## index
55
## name
updateTurn(s15)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) or($a(7) $a(23)))
## hash index
55
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 2
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
56
## name
updateTurn(s2)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) or($a(8) $a(24)))
## hash index
56
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 2
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
57
## name
updateTurn(s3)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) or($a(9) $a(25)))
## hash index
57
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 2
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
58
## name
updateTurn(s4)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) or($a(10) $a(26)))
## hash index
58
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 2
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
59
## name
updateTurn(s5)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) or($a(11) $a(27)))
## hash index
59
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 2
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
60
## name
updateTurn(s6)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) or($a(12) $a(28)))
## hash index
60
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 2
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
61
## name
updateTurn(s7)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) or($a(13) $a(29)))
## hash index
61
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 2
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
62
## name
updateTurn(s8)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) or($a(14) $a(30)))
## hash index
62
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 2
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
63
## name
updateTurn(s9)
## number of values
2
## values
0 false
1 true
## formula
and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) or($a(15) $a(31)))
## hash index
63
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 2
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0



#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
answeredRight(s0)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(0) $s(80)) : Bernoulli($c(0.8966451))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(0) $s(32)) : Bernoulli($c(0.65))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(0) $s(32) $a(0)) : $c(0)) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(0)) : Bernoulli($c(0.54360324))) ($c(1) : $c(0)) )
## hash index
64
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 1

## index
1
## name
answeredRight(s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(1) $s(81)) : Bernoulli($c(0.8701245))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(1) $s(33)) : Bernoulli($c(0.65))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(1) $s(33) $a(1)) : $c(0)) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(1)) : Bernoulli($c(0.549016))) ($c(1) : $c(0)) )
## hash index
65
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 1
32 0

## index
2
## name
answeredRight(s10)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(2) $s(82)) : Bernoulli($c(0.9534721))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(2) $s(34) $s(81) $s(93) $s(94)) : Bernoulli($c(0.65))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(2) $s(34) $a(2)) : Bernoulli($c(0.396242138743401))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(2) $s(81) $s(93) $s(94)) : Bernoulli($c(0.5028512))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(2) $a(2)) : Bernoulli($c(0.214570668339729))) ($c(1) : $c(0)) )
## hash index
66
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 1
31 0
32 0

## index
3
## name
answeredRight(s11)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(3) $s(83)) : Bernoulli($c(0.95918983))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(3) $s(35) $s(88) $s(90)) : Bernoulli($c(0.65))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(3) $s(35) $a(3)) : Bernoulli($c(0.511409842967987))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(3) $s(88) $s(90)) : Bernoulli($c(0.51924795))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(3) $a(3)) : Bernoulli($c(0.328747618198395))) ($c(1) : $c(0)) )
## hash index
67
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 1
30 0
31 0
32 0

## index
4
## name
answeredRight(s12)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(4) $s(84)) : Bernoulli($c(0.9787701))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(4) $s(36) $s(81) $s(92)) : Bernoulli($c(0.65))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(4) $s(36) $a(4)) : Bernoulli($c(0.503764390945435))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(4) $s(81) $s(92)) : Bernoulli($c(0.6345702))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(4) $a(4)) : Bernoulli($c(0.436639428138733))) ($c(1) : $c(0)) )
## hash index
68
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 1
29 0
30 0
31 0
32 0

## index
5
## name
answeredRight(s13)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(5) $s(85)) : Bernoulli($c(0.9897237))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(5) $s(37) $s(81) $s(89) $s(90) $s(94)) : Bernoulli($c(0.65))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(5) $s(37) $a(5)) : Bernoulli($c(0.558962869644165))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(5) $s(81) $s(89) $s(90) $s(94)) : Bernoulli($c(0.5530151))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(5) $a(5)) : Bernoulli($c(0.287410354614258))) ($c(1) : $c(0)) )
## hash index
69
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 1
28 0
29 0
30 0
31 0
32 0

## index
6
## name
answeredRight(s14)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(6) $s(86)) : Bernoulli($c(0.9789203))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(6) $s(38) $s(91)) : Bernoulli($c(0.65))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(6) $s(38) $a(6)) : Bernoulli($c(0.61917170882225))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(6) $s(91)) : Bernoulli($c(0.5928608))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(6) $a(6)) : Bernoulli($c(0.571771448850632))) ($c(1) : $c(0)) )
## hash index
70
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 1
27 0
28 0
29 0
30 0
31 0
32 0

## index
7
## name
answeredRight(s15)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(7) $s(87)) : Bernoulli($c(0.9007779))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(7) $s(39) $s(80) $s(95) $s(82)) : Bernoulli($c(0.65))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(7) $s(39) $a(7)) : Bernoulli($c(0.60782605111599))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(7) $s(80) $s(95) $s(82)) : Bernoulli($c(0.64945805))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(7) $a(7)) : Bernoulli($c(0.396445432305336))) ($c(1) : $c(0)) )
## hash index
71
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 1
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
8
## name
answeredRight(s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(8) $s(88)) : Bernoulli($c(0.91540754))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(8) $s(40) $s(80) $s(81)) : Bernoulli($c(0.65))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(8) $s(40) $a(8)) : Bernoulli($c(0.558517670631409))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(8) $s(80) $s(81)) : Bernoulli($c(0.6453321))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(8) $a(8)) : Bernoulli($c(0.595714497566223))) ($c(1) : $c(0)) )
## hash index
72
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 1
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
9
## name
answeredRight(s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(9) $s(89)) : Bernoulli($c(0.89677674))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(9) $s(41) $s(80) $s(81) $s(88)) : Bernoulli($c(0.65))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(9) $s(41) $a(9)) : Bernoulli($c(0.637045499682426))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(9) $s(80) $s(81) $s(88)) : Bernoulli($c(0.59657973))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(9) $a(9)) : Bernoulli($c(0.392799612879753))) ($c(1) : $c(0)) )
## hash index
73
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 1
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
10
## name
answeredRight(s4)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(10) $s(90)) : Bernoulli($c(0.85620093))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(10) $s(42) $s(81)) : Bernoulli($c(0.65))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(10) $s(42) $a(10)) : Bernoulli($c(0.575015199184418))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(10) $s(81)) : Bernoulli($c(0.644712))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(10) $a(10)) : Bernoulli($c(0.556431663036346))) ($c(1) : $c(0)) )
## hash index
74
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 1
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
11
## name
answeredRight(s5)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(11) $s(91)) : Bernoulli($c(0.96629214))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(11) $s(43) $s(88)) : Bernoulli($c(0.65))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(11) $s(43) $a(11)) : Bernoulli($c(0.594287937879562))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(11) $s(88)) : Bernoulli($c(0.5377234))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(11) $a(11)) : Bernoulli($c(0.449130421876907))) ($c(1) : $c(0)) )
## hash index
75
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 1
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
12
## name
answeredRight(s6)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(12) $s(92)) : Bernoulli($c(0.8954182))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(12) $s(44) $s(80) $s(81) $s(88) $s(90)) : Bernoulli($c(0.65))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(12) $s(44) $a(12)) : Bernoulli($c(0.469982051849365))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(12) $s(80) $s(81) $s(88) $s(90)) : Bernoulli($c(0.54158384))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(12) $a(12)) : Bernoulli($c(0.382204234600067))) ($c(1) : $c(0)) )
## hash index
76
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 1
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
13
## name
answeredRight(s7)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(13) $s(93)) : Bernoulli($c(0.9770257))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(13) $s(45) $s(80) $s(81)) : Bernoulli($c(0.65))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(13) $s(45) $a(13)) : Bernoulli($c(0.627083563804626))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(13) $s(80) $s(81)) : Bernoulli($c(0.6370752))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(13) $a(13)) : Bernoulli($c(0.591001546382904))) ($c(1) : $c(0)) )
## hash index
77
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 1
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
14
## name
answeredRight(s8)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(14) $s(94)) : Bernoulli($c(0.87508917))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(14) $s(46) $s(91)) : Bernoulli($c(0.65))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(14) $s(46) $a(14)) : Bernoulli($c(0.597317677736282))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(14) $s(91)) : Bernoulli($c(0.5008669))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(14) $a(14)) : Bernoulli($c(0.489227300882339))) ($c(1) : $c(0)) )
## hash index
78
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 1
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
15
## name
answeredRight(s9)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(15) $s(95)) : Bernoulli($c(0.99352336))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(15) $s(47) $s(88)) : Bernoulli($c(0.65))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(15) $s(47) $a(15)) : Bernoulli($c(0.574054759740829))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(15) $s(88)) : Bernoulli($c(0.61252815))) (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55)) $a(15) $a(15)) : Bernoulli($c(0.521750259399414))) ($c(1) : $c(0)) )
## hash index
79
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 1
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
16
## name
proficiencyHigh(s0)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55))) : $s(80)) (and(~($s(48)) $s(80)) : Bernoulli($c(0.99))) (and($s(32) $s(48) $s(64)) : $c(1)) ($c(1) : and($s(80) $s(48) or($s(0) $s(64)))) )
## hash index
80
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
17
## name
proficiencyHigh(s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55))) : $s(81)) (and(~($s(49)) $s(81)) : Bernoulli($c(0.980362930893898))) (and($s(33) $s(49) $s(65)) : $c(1)) ($c(1) : and($s(81) $s(49) or($s(1) $s(65)))) )
## hash index
81
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
18
## name
proficiencyHigh(s10)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55))) : $s(82)) (and(~($s(50)) $s(82)) : Bernoulli($c(0.983239382505417))) (and($s(34) $s(50) $s(66)) : $c(1)) ($c(1) : and($s(82) $s(50) or($s(2) $s(66)))) )
## hash index
82
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
19
## name
proficiencyHigh(s11)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55))) : $s(83)) (and(~($s(51)) $s(83)) : Bernoulli($c(0.984630089998245))) (and($s(35) $s(51) $s(67)) : $c(1)) ($c(1) : and($s(83) $s(51) or($s(3) $s(67)))) )
## hash index
83
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
20
## name
proficiencyHigh(s12)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55))) : $s(84)) (and(~($s(52)) $s(84)) : Bernoulli($c(0.99))) (and($s(36) $s(52) $s(68)) : $c(1)) ($c(1) : and($s(84) $s(52) or($s(4) $s(68)))) )
## hash index
84
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
21
## name
proficiencyHigh(s13)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55))) : $s(85)) (and(~($s(53)) $s(85)) : Bernoulli($c(0.986756905913353))) (and($s(37) $s(53) $s(69)) : $c(1)) ($c(1) : and($s(85) $s(53) or($s(5) $s(69)))) )
## hash index
85
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
22
## name
proficiencyHigh(s14)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55))) : $s(86)) (and(~($s(54)) $s(86)) : Bernoulli($c(0.979532507061958))) (and($s(38) $s(54) $s(70)) : $c(1)) ($c(1) : and($s(86) $s(54) or($s(6) $s(70)))) )
## hash index
86
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
23
## name
proficiencyHigh(s15)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55))) : $s(87)) (and(~($s(55)) $s(87)) : Bernoulli($c(0.978245484828949))) (and($s(39) $s(55) $s(71)) : $c(1)) ($c(1) : and($s(87) $s(55) or($s(7) $s(71)))) )
## hash index
87
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
24
## name
proficiencyHigh(s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55))) : $s(88)) (and(~($s(56)) $s(88)) : Bernoulli($c(0.950750231742859))) (and($s(40) $s(56) $s(72)) : $c(1)) ($c(1) : and($s(88) $s(56) or($s(8) $s(72)))) )
## hash index
88
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
25
## name
proficiencyHigh(s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55))) : $s(89)) (and(~($s(57)) $s(89)) : Bernoulli($c(0.962597772479057))) (and($s(41) $s(57) $s(73)) : $c(1)) ($c(1) : and($s(89) $s(57) or($s(9) $s(73)))) )
## hash index
89
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
26
## name
proficiencyHigh(s4)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55))) : $s(90)) (and(~($s(58)) $s(90)) : Bernoulli($c(0.983262991905212))) (and($s(42) $s(58) $s(74)) : $c(1)) ($c(1) : and($s(90) $s(58) or($s(10) $s(74)))) )
## hash index
90
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
27
## name
proficiencyHigh(s5)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55))) : $s(91)) (and(~($s(59)) $s(91)) : Bernoulli($c(0.971066331863403))) (and($s(43) $s(59) $s(75)) : $c(1)) ($c(1) : and($s(91) $s(59) or($s(11) $s(75)))) )
## hash index
91
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
28
## name
proficiencyHigh(s6)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55))) : $s(92)) (and(~($s(60)) $s(92)) : Bernoulli($c(0.977464735507965))) (and($s(44) $s(60) $s(76)) : $c(1)) ($c(1) : and($s(92) $s(60) or($s(12) $s(76)))) )
## hash index
92
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
29
## name
proficiencyHigh(s7)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55))) : $s(93)) (and(~($s(61)) $s(93)) : Bernoulli($c(0.976683905720711))) (and($s(45) $s(61) $s(77)) : $c(1)) ($c(1) : and($s(93) $s(61) or($s(13) $s(77)))) )
## hash index
93
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
30
## name
proficiencyHigh(s8)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55))) : $s(94)) (and(~($s(62)) $s(94)) : Bernoulli($c(0.972189405560493))) (and($s(46) $s(62) $s(78)) : $c(1)) ($c(1) : and($s(94) $s(62) or($s(14) $s(78)))) )
## hash index
94
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0

## index
31
## name
proficiencyHigh(s9)
## number of values
2
## values
0 false
1 true
## formula
switch( (and(~($s(48)) ~($s(49)) ~($s(56)) ~($s(57)) ~($s(58)) ~($s(59)) ~($s(60)) ~($s(61)) ~($s(62)) ~($s(63)) ~($s(50)) ~($s(51)) ~($s(52)) ~($s(53)) ~($s(54)) ~($s(55))) : $s(95)) (and(~($s(63)) $s(95)) : Bernoulli($c(0.977593165636063))) (and($s(47) $s(63) $s(79)) : $c(1)) ($c(1) : and($s(95) $s(63) or($s(15) $s(79)))) )
## hash index
95
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0



#####REWARD#####
## formula
+(*($s(80) $c(1.2438534)) *($s(81) $c(1.1399393)) *($s(88) $c(2.161841)) *($s(89) $c(3.3496277)) *($s(90) $c(2.075445)) *($s(91) $c(3.4852612)) *($s(92) $c(3.4389858)) *($s(93) $c(2.1079314)) *($s(94) $c(4.330511)) *($s(95) $c(3.466391)) *($s(82) $c(5.104766)) *($s(83) $c(3.257901)) *($s(84) $c(4.401972)) *($s(85) $c(5.132298)) *($s(86) $c(4.2296596)) *($s(87) $c(6.3164525)) -($c(0) *(~($s(32)) $c(1.2438534))) -($c(0) *(~($s(33)) $c(1.1399393))) -($c(0) *(~($s(40)) $c(2.161841))) -($c(0) *(~($s(41)) $c(3.3496277))) -($c(0) *(~($s(42)) $c(2.075445))) -($c(0) *(~($s(43)) $c(3.4852612))) -($c(0) *(~($s(44)) $c(3.4389858))) -($c(0) *(~($s(45)) $c(2.1079314))) -($c(0) *(~($s(46)) $c(4.330511))) -($c(0) *(~($s(47)) $c(3.466391))) -($c(0) *(~($s(34)) $c(5.104766))) -($c(0) *(~($s(35)) $c(3.257901))) -($c(0) *(~($s(36)) $c(4.401972))) -($c(0) *(~($s(37)) $c(5.132298))) -($c(0) *(~($s(38)) $c(4.2296596))) -($c(0) *(~($s(39)) $c(6.3164525))))
## min
-55.2428359
## max
55.2428359
## independent from actions
1
## hash index
96
## caching type
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0
21 0
22 0
23 0
24 0
25 0
26 0
27 0
28 0
29 0
30 0
31 0
32 0


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
4
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
5
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
6
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
7
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
8
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
9
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
10
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
11
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
12
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
13
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
14
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
15
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
16
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
17
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
18
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
19
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
20
## state
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
21
## state
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
22
## state
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
23
## state
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
24
## state
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
25
## state
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
26
## state
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
27
## state
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
28
## state
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
29
## state
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
30
## state
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
31
## state
0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
32
## state
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####
## index
0

## state fluent hash keys (first line is the number of keys)
2
32 1
80 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
1

## state fluent hash keys (first line is the number of keys)
2
33 1
81 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
2

## state fluent hash keys (first line is the number of keys)
2
34 1
82 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
3

## state fluent hash keys (first line is the number of keys)
2
35 1
83 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
4

## state fluent hash keys (first line is the number of keys)
2
36 1
84 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
5

## state fluent hash keys (first line is the number of keys)
2
37 1
85 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
6

## state fluent hash keys (first line is the number of keys)
2
38 1
86 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
7

## state fluent hash keys (first line is the number of keys)
2
39 1
87 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
8

## state fluent hash keys (first line is the number of keys)
2
40 1
88 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
9

## state fluent hash keys (first line is the number of keys)
2
41 1
89 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
10

## state fluent hash keys (first line is the number of keys)
2
42 1
90 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
11

## state fluent hash keys (first line is the number of keys)
2
43 1
91 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
12

## state fluent hash keys (first line is the number of keys)
2
44 1
92 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
13

## state fluent hash keys (first line is the number of keys)
2
45 1
93 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
14

## state fluent hash keys (first line is the number of keys)
2
46 1
94 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
15

## state fluent hash keys (first line is the number of keys)
2
47 1
95 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
16

## state fluent hash keys (first line is the number of keys)
1
32 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
17

## state fluent hash keys (first line is the number of keys)
1
33 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
18

## state fluent hash keys (first line is the number of keys)
1
34 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
19

## state fluent hash keys (first line is the number of keys)
1
35 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
20

## state fluent hash keys (first line is the number of keys)
1
36 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
21

## state fluent hash keys (first line is the number of keys)
1
37 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
22

## state fluent hash keys (first line is the number of keys)
1
38 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
23

## state fluent hash keys (first line is the number of keys)
1
39 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
24

## state fluent hash keys (first line is the number of keys)
1
40 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
25

## state fluent hash keys (first line is the number of keys)
1
41 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
26

## state fluent hash keys (first line is the number of keys)
1
42 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
27

## state fluent hash keys (first line is the number of keys)
1
43 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
28

## state fluent hash keys (first line is the number of keys)
1
44 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
29

## state fluent hash keys (first line is the number of keys)
1
45 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
30

## state fluent hash keys (first line is the number of keys)
1
46 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
31

## state fluent hash keys (first line is the number of keys)
1
47 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
32

## state fluent hash keys (first line is the number of keys)
4
32 4
64 2
80 2
96 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
33

## state fluent hash keys (first line is the number of keys)
4
33 4
65 2
81 2
96 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
34

## state fluent hash keys (first line is the number of keys)
4
34 4
66 2
82 2
96 4
## kleene state fluent hash keys (first line is the number of keys)
0

## index
35

## state fluent hash keys (first line is the number of keys)
4
35 4
67 2
83 2
96 8
## kleene state fluent hash keys (first line is the number of keys)
0

## index
36

## state fluent hash keys (first line is the number of keys)
4
36 4
68 2
84 2
96 16
## kleene state fluent hash keys (first line is the number of keys)
0

## index
37

## state fluent hash keys (first line is the number of keys)
4
37 4
69 2
85 2
96 32
## kleene state fluent hash keys (first line is the number of keys)
0

## index
38

## state fluent hash keys (first line is the number of keys)
4
38 4
70 2
86 2
96 64
## kleene state fluent hash keys (first line is the number of keys)
0

## index
39

## state fluent hash keys (first line is the number of keys)
4
39 4
71 2
87 2
96 128
## kleene state fluent hash keys (first line is the number of keys)
0

## index
40

## state fluent hash keys (first line is the number of keys)
4
40 4
72 2
88 2
96 256
## kleene state fluent hash keys (first line is the number of keys)
0

## index
41

## state fluent hash keys (first line is the number of keys)
4
41 4
73 2
89 2
96 512
## kleene state fluent hash keys (first line is the number of keys)
0

## index
42

## state fluent hash keys (first line is the number of keys)
4
42 4
74 2
90 2
96 1024
## kleene state fluent hash keys (first line is the number of keys)
0

## index
43

## state fluent hash keys (first line is the number of keys)
4
43 4
75 2
91 2
96 2048
## kleene state fluent hash keys (first line is the number of keys)
0

## index
44

## state fluent hash keys (first line is the number of keys)
4
44 4
76 2
92 2
96 4096
## kleene state fluent hash keys (first line is the number of keys)
0

## index
45

## state fluent hash keys (first line is the number of keys)
4
45 4
77 2
93 2
96 8192
## kleene state fluent hash keys (first line is the number of keys)
0

## index
46

## state fluent hash keys (first line is the number of keys)
4
46 4
78 2
94 2
96 16384
## kleene state fluent hash keys (first line is the number of keys)
0

## index
47

## state fluent hash keys (first line is the number of keys)
4
47 4
79 2
95 2
96 32768
## kleene state fluent hash keys (first line is the number of keys)
0

## index
48

## state fluent hash keys (first line is the number of keys)
81
0 2
1 2
2 2
3 2
4 2
5 2
6 2
7 2
8 2
9 2
10 2
11 2
12 2
13 2
14 2
15 2
16 2
17 2
18 2
19 2
20 2
21 2
22 2
23 2
24 2
25 2
26 2
27 2
28 2
29 2
30 2
31 2
32 8
48 3
49 3
50 3
51 3
52 3
53 3
54 3
55 3
56 3
57 3
58 3
59 3
60 3
61 3
62 3
63 3
64 4
65 4
66 4
67 4
68 4
69 4
70 4
71 4
72 4
73 4
74 4
75 4
76 4
77 4
78 4
79 4
80 4
81 4
82 4
83 4
84 4
85 4
86 4
87 4
88 4
89 4
90 4
91 4
92 4
93 4
94 4
95 4
## kleene state fluent hash keys (first line is the number of keys)
0

## index
49

## state fluent hash keys (first line is the number of keys)
81
0 4
1 4
2 4
3 4
4 4
5 4
6 4
7 4
8 4
9 4
10 4
11 4
12 4
13 4
14 4
15 4
16 4
17 4
18 4
19 4
20 4
21 4
22 4
23 4
24 4
25 4
26 4
27 4
28 4
29 4
30 4
31 4
33 8
48 6
49 6
50 6
51 6
52 6
53 6
54 6
55 6
56 6
57 6
58 6
59 6
60 6
61 6
62 6
63 6
64 8
65 8
66 8
67 8
68 8
69 8
70 8
71 8
72 8
73 8
74 8
75 8
76 8
77 8
78 8
79 8
80 8
81 8
82 8
83 8
84 8
85 8
86 8
87 8
88 8
89 8
90 8
91 8
92 8
93 8
94 8
95 8
## kleene state fluent hash keys (first line is the number of keys)
0

## index
50

## state fluent hash keys (first line is the number of keys)
81
0 8
1 8
2 8
3 8
4 8
5 8
6 8
7 8
8 8
9 8
10 8
11 8
12 8
13 8
14 8
15 8
16 8
17 8
18 8
19 8
20 8
21 8
22 8
23 8
24 8
25 8
26 8
27 8
28 8
29 8
30 8
31 8
34 8
48 12
49 12
50 12
51 12
52 12
53 12
54 12
55 12
56 12
57 12
58 12
59 12
60 12
61 12
62 12
63 12
64 16
65 16
66 16
67 16
68 16
69 16
70 16
71 16
72 16
73 16
74 16
75 16
76 16
77 16
78 16
79 16
80 16
81 16
82 16
83 16
84 16
85 16
86 16
87 16
88 16
89 16
90 16
91 16
92 16
93 16
94 16
95 16
## kleene state fluent hash keys (first line is the number of keys)
0

## index
51

## state fluent hash keys (first line is the number of keys)
81
0 16
1 16
2 16
3 16
4 16
5 16
6 16
7 16
8 16
9 16
10 16
11 16
12 16
13 16
14 16
15 16
16 16
17 16
18 16
19 16
20 16
21 16
22 16
23 16
24 16
25 16
26 16
27 16
28 16
29 16
30 16
31 16
35 8
48 24
49 24
50 24
51 24
52 24
53 24
54 24
55 24
56 24
57 24
58 24
59 24
60 24
61 24
62 24
63 24
64 32
65 32
66 32
67 32
68 32
69 32
70 32
71 32
72 32
73 32
74 32
75 32
76 32
77 32
78 32
79 32
80 32
81 32
82 32
83 32
84 32
85 32
86 32
87 32
88 32
89 32
90 32
91 32
92 32
93 32
94 32
95 32
## kleene state fluent hash keys (first line is the number of keys)
0

## index
52

## state fluent hash keys (first line is the number of keys)
81
0 32
1 32
2 32
3 32
4 32
5 32
6 32
7 32
8 32
9 32
10 32
11 32
12 32
13 32
14 32
15 32
16 32
17 32
18 32
19 32
20 32
21 32
22 32
23 32
24 32
25 32
26 32
27 32
28 32
29 32
30 32
31 32
36 8
48 48
49 48
50 48
51 48
52 48
53 48
54 48
55 48
56 48
57 48
58 48
59 48
60 48
61 48
62 48
63 48
64 64
65 64
66 64
67 64
68 64
69 64
70 64
71 64
72 64
73 64
74 64
75 64
76 64
77 64
78 64
79 64
80 64
81 64
82 64
83 64
84 64
85 64
86 64
87 64
88 64
89 64
90 64
91 64
92 64
93 64
94 64
95 64
## kleene state fluent hash keys (first line is the number of keys)
0

## index
53

## state fluent hash keys (first line is the number of keys)
81
0 64
1 64
2 64
3 64
4 64
5 64
6 64
7 64
8 64
9 64
10 64
11 64
12 64
13 64
14 64
15 64
16 64
17 64
18 64
19 64
20 64
21 64
22 64
23 64
24 64
25 64
26 64
27 64
28 64
29 64
30 64
31 64
37 8
48 96
49 96
50 96
51 96
52 96
53 96
54 96
55 96
56 96
57 96
58 96
59 96
60 96
61 96
62 96
63 96
64 128
65 128
66 128
67 128
68 128
69 128
70 128
71 128
72 128
73 128
74 128
75 128
76 128
77 128
78 128
79 128
80 128
81 128
82 128
83 128
84 128
85 128
86 128
87 128
88 128
89 128
90 128
91 128
92 128
93 128
94 128
95 128
## kleene state fluent hash keys (first line is the number of keys)
0

## index
54

## state fluent hash keys (first line is the number of keys)
81
0 128
1 128
2 128
3 128
4 128
5 128
6 128
7 128
8 128
9 128
10 128
11 128
12 128
13 128
14 128
15 128
16 128
17 128
18 128
19 128
20 128
21 128
22 128
23 128
24 128
25 128
26 128
27 128
28 128
29 128
30 128
31 128
38 8
48 192
49 192
50 192
51 192
52 192
53 192
54 192
55 192
56 192
57 192
58 192
59 192
60 192
61 192
62 192
63 192
64 256
65 256
66 256
67 256
68 256
69 256
70 256
71 256
72 256
73 256
74 256
75 256
76 256
77 256
78 256
79 256
80 256
81 256
82 256
83 256
84 256
85 256
86 256
87 256
88 256
89 256
90 256
91 256
92 256
93 256
94 256
95 256
## kleene state fluent hash keys (first line is the number of keys)
0

## index
55

## state fluent hash keys (first line is the number of keys)
81
0 256
1 256
2 256
3 256
4 256
5 256
6 256
7 256
8 256
9 256
10 256
11 256
12 256
13 256
14 256
15 256
16 256
17 256
18 256
19 256
20 256
21 256
22 256
23 256
24 256
25 256
26 256
27 256
28 256
29 256
30 256
31 256
39 8
48 384
49 384
50 384
51 384
52 384
53 384
54 384
55 384
56 384
57 384
58 384
59 384
60 384
61 384
62 384
63 384
64 512
65 512
66 512
67 512
68 512
69 512
70 512
71 512
72 512
73 512
74 512
75 512
76 512
77 512
78 512
79 512
80 512
81 512
82 512
83 512
84 512
85 512
86 512
87 512
88 512
89 512
90 512
91 512
92 512
93 512
94 512
95 512
## kleene state fluent hash keys (first line is the number of keys)
0

## index
56

## state fluent hash keys (first line is the number of keys)
81
0 512
1 512
2 512
3 512
4 512
5 512
6 512
7 512
8 512
9 512
10 512
11 512
12 512
13 512
14 512
15 512
16 512
17 512
18 512
19 512
20 512
21 512
22 512
23 512
24 512
25 512
26 512
27 512
28 512
29 512
30 512
31 512
40 8
48 768
49 768
50 768
51 768
52 768
53 768
54 768
55 768
56 768
57 768
58 768
59 768
60 768
61 768
62 768
63 768
64 1024
65 1024
66 1024
67 1024
68 1024
69 1024
70 1024
71 1024
72 1024
73 1024
74 1024
75 1024
76 1024
77 1024
78 1024
79 1024
80 1024
81 1024
82 1024
83 1024
84 1024
85 1024
86 1024
87 1024
88 1024
89 1024
90 1024
91 1024
92 1024
93 1024
94 1024
95 1024
## kleene state fluent hash keys (first line is the number of keys)
0

## index
57

## state fluent hash keys (first line is the number of keys)
81
0 1024
1 1024
2 1024
3 1024
4 1024
5 1024
6 1024
7 1024
8 1024
9 1024
10 1024
11 1024
12 1024
13 1024
14 1024
15 1024
16 1024
17 1024
18 1024
19 1024
20 1024
21 1024
22 1024
23 1024
24 1024
25 1024
26 1024
27 1024
28 1024
29 1024
30 1024
31 1024
41 8
48 1536
49 1536
50 1536
51 1536
52 1536
53 1536
54 1536
55 1536
56 1536
57 1536
58 1536
59 1536
60 1536
61 1536
62 1536
63 1536
64 2048
65 2048
66 2048
67 2048
68 2048
69 2048
70 2048
71 2048
72 2048
73 2048
74 2048
75 2048
76 2048
77 2048
78 2048
79 2048
80 2048
81 2048
82 2048
83 2048
84 2048
85 2048
86 2048
87 2048
88 2048
89 2048
90 2048
91 2048
92 2048
93 2048
94 2048
95 2048
## kleene state fluent hash keys (first line is the number of keys)
0

## index
58

## state fluent hash keys (first line is the number of keys)
81
0 2048
1 2048
2 2048
3 2048
4 2048
5 2048
6 2048
7 2048
8 2048
9 2048
10 2048
11 2048
12 2048
13 2048
14 2048
15 2048
16 2048
17 2048
18 2048
19 2048
20 2048
21 2048
22 2048
23 2048
24 2048
25 2048
26 2048
27 2048
28 2048
29 2048
30 2048
31 2048
42 8
48 3072
49 3072
50 3072
51 3072
52 3072
53 3072
54 3072
55 3072
56 3072
57 3072
58 3072
59 3072
60 3072
61 3072
62 3072
63 3072
64 4096
65 4096
66 4096
67 4096
68 4096
69 4096
70 4096
71 4096
72 4096
73 4096
74 4096
75 4096
76 4096
77 4096
78 4096
79 4096
80 4096
81 4096
82 4096
83 4096
84 4096
85 4096
86 4096
87 4096
88 4096
89 4096
90 4096
91 4096
92 4096
93 4096
94 4096
95 4096
## kleene state fluent hash keys (first line is the number of keys)
0

## index
59

## state fluent hash keys (first line is the number of keys)
81
0 4096
1 4096
2 4096
3 4096
4 4096
5 4096
6 4096
7 4096
8 4096
9 4096
10 4096
11 4096
12 4096
13 4096
14 4096
15 4096
16 4096
17 4096
18 4096
19 4096
20 4096
21 4096
22 4096
23 4096
24 4096
25 4096
26 4096
27 4096
28 4096
29 4096
30 4096
31 4096
43 8
48 6144
49 6144
50 6144
51 6144
52 6144
53 6144
54 6144
55 6144
56 6144
57 6144
58 6144
59 6144
60 6144
61 6144
62 6144
63 6144
64 8192
65 8192
66 8192
67 8192
68 8192
69 8192
70 8192
71 8192
72 8192
73 8192
74 8192
75 8192
76 8192
77 8192
78 8192
79 8192
80 8192
81 8192
82 8192
83 8192
84 8192
85 8192
86 8192
87 8192
88 8192
89 8192
90 8192
91 8192
92 8192
93 8192
94 8192
95 8192
## kleene state fluent hash keys (first line is the number of keys)
0

## index
60

## state fluent hash keys (first line is the number of keys)
81
0 8192
1 8192
2 8192
3 8192
4 8192
5 8192
6 8192
7 8192
8 8192
9 8192
10 8192
11 8192
12 8192
13 8192
14 8192
15 8192
16 8192
17 8192
18 8192
19 8192
20 8192
21 8192
22 8192
23 8192
24 8192
25 8192
26 8192
27 8192
28 8192
29 8192
30 8192
31 8192
44 8
48 12288
49 12288
50 12288
51 12288
52 12288
53 12288
54 12288
55 12288
56 12288
57 12288
58 12288
59 12288
60 12288
61 12288
62 12288
63 12288
64 16384
65 16384
66 16384
67 16384
68 16384
69 16384
70 16384
71 16384
72 16384
73 16384
74 16384
75 16384
76 16384
77 16384
78 16384
79 16384
80 16384
81 16384
82 16384
83 16384
84 16384
85 16384
86 16384
87 16384
88 16384
89 16384
90 16384
91 16384
92 16384
93 16384
94 16384
95 16384
## kleene state fluent hash keys (first line is the number of keys)
0

## index
61

## state fluent hash keys (first line is the number of keys)
81
0 16384
1 16384
2 16384
3 16384
4 16384
5 16384
6 16384
7 16384
8 16384
9 16384
10 16384
11 16384
12 16384
13 16384
14 16384
15 16384
16 16384
17 16384
18 16384
19 16384
20 16384
21 16384
22 16384
23 16384
24 16384
25 16384
26 16384
27 16384
28 16384
29 16384
30 16384
31 16384
45 8
48 24576
49 24576
50 24576
51 24576
52 24576
53 24576
54 24576
55 24576
56 24576
57 24576
58 24576
59 24576
60 24576
61 24576
62 24576
63 24576
64 32768
65 32768
66 32768
67 32768
68 32768
69 32768
70 32768
71 32768
72 32768
73 32768
74 32768
75 32768
76 32768
77 32768
78 32768
79 32768
80 32768
81 32768
82 32768
83 32768
84 32768
85 32768
86 32768
87 32768
88 32768
89 32768
90 32768
91 32768
92 32768
93 32768
94 32768
95 32768
## kleene state fluent hash keys (first line is the number of keys)
0

## index
62

## state fluent hash keys (first line is the number of keys)
81
0 32768
1 32768
2 32768
3 32768
4 32768
5 32768
6 32768
7 32768
8 32768
9 32768
10 32768
11 32768
12 32768
13 32768
14 32768
15 32768
16 32768
17 32768
18 32768
19 32768
20 32768
21 32768
22 32768
23 32768
24 32768
25 32768
26 32768
27 32768
28 32768
29 32768
30 32768
31 32768
46 8
48 49152
49 49152
50 49152
51 49152
52 49152
53 49152
54 49152
55 49152
56 49152
57 49152
58 49152
59 49152
60 49152
61 49152
62 49152
63 49152
64 65536
65 65536
66 65536
67 65536
68 65536
69 65536
70 65536
71 65536
72 65536
73 65536
74 65536
75 65536
76 65536
77 65536
78 65536
79 65536
80 65536
81 65536
82 65536
83 65536
84 65536
85 65536
86 65536
87 65536
88 65536
89 65536
90 65536
91 65536
92 65536
93 65536
94 65536
95 65536
## kleene state fluent hash keys (first line is the number of keys)
0

## index
63

## state fluent hash keys (first line is the number of keys)
81
0 65536
1 65536
2 65536
3 65536
4 65536
5 65536
6 65536
7 65536
8 65536
9 65536
10 65536
11 65536
12 65536
13 65536
14 65536
15 65536
16 65536
17 65536
18 65536
19 65536
20 65536
21 65536
22 65536
23 65536
24 65536
25 65536
26 65536
27 65536
28 65536
29 65536
30 65536
31 65536
47 8
48 98304
49 98304
50 98304
51 98304
52 98304
53 98304
54 98304
55 98304
56 98304
57 98304
58 98304
59 98304
60 98304
61 98304
62 98304
63 98304
64 131072
65 131072
66 131072
67 131072
68 131072
69 131072
70 131072
71 131072
72 131072
73 131072
74 131072
75 131072
76 131072
77 131072
78 131072
79 131072
80 131072
81 131072
82 131072
83 131072
84 131072
85 131072
86 131072
87 131072
88 131072
89 131072
90 131072
91 131072
92 131072
93 131072
94 131072
95 131072
## kleene state fluent hash keys (first line is the number of keys)
0


#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0

## state fluent hash keys (first line is the number of keys)
2
32 16
80 262144
## kleene state fluent hash keys (first line is the number of keys)
2
19691040 81
80 387420489

## index
1

## state fluent hash keys (first line is the number of keys)
2
33 16
81 262144
## kleene state fluent hash keys (first line is the number of keys)
2
19720288 81
81 387420489

## index
2

## state fluent hash keys (first line is the number of keys)
2
34 16
82 262144
## kleene state fluent hash keys (first line is the number of keys)
2
19720752 81
82 387420489

## index
3

## state fluent hash keys (first line is the number of keys)
2
35 16
83 262144
## kleene state fluent hash keys (first line is the number of keys)
2
19672384 81
83 387420489

## index
4

## state fluent hash keys (first line is the number of keys)
2
36 16
84 262144
## kleene state fluent hash keys (first line is the number of keys)
2
19721856 81
84 387420489

## index
5

## state fluent hash keys (first line is the number of keys)
2
37 16
85 262144
## kleene state fluent hash keys (first line is the number of keys)
2
19722656 81
85 387420489

## index
6

## state fluent hash keys (first line is the number of keys)
2
38 16
86 262144
## kleene state fluent hash keys (first line is the number of keys)
2
19723120 81
86 387420489

## index
7

## state fluent hash keys (first line is the number of keys)
2
39 16
87 262144
## kleene state fluent hash keys (first line is the number of keys)
2
19724448 81
87 387420489

## index
8

## state fluent hash keys (first line is the number of keys)
2
40 16
88 262144
## kleene state fluent hash keys (first line is the number of keys)
2
19725488 81
88 387420489

## index
9

## state fluent hash keys (first line is the number of keys)
2
41 16
89 262144
## kleene state fluent hash keys (first line is the number of keys)
2
19726640 81
89 387420489

## index
10

## state fluent hash keys (first line is the number of keys)
2
42 16
90 262144
## kleene state fluent hash keys (first line is the number of keys)
2
19728176 81
90 387420489

## index
11

## state fluent hash keys (first line is the number of keys)
2
43 16
91 262144
## kleene state fluent hash keys (first line is the number of keys)
2
19729712 81
91 387420489

## index
12

## state fluent hash keys (first line is the number of keys)
2
44 16
92 262144
## kleene state fluent hash keys (first line is the number of keys)
2
19730704 81
92 387420489

## index
13

## state fluent hash keys (first line is the number of keys)
2
45 16
93 262144
## kleene state fluent hash keys (first line is the number of keys)
2
19732224 81
93 387420489

## index
14

## state fluent hash keys (first line is the number of keys)
2
46 16
94 262144
## kleene state fluent hash keys (first line is the number of keys)
2
19733472 81
94 387420489

## index
15

## state fluent hash keys (first line is the number of keys)
2
47 16
95 262144
## kleene state fluent hash keys (first line is the number of keys)
2
19734192 81
95 387420489

## index
16

## state fluent hash keys (first line is the number of keys)
14
23 131072
24 131072
25 131072
28 131072
29 131072
32 32
64 262144
71 262144
72 262144
73 262144
76 262144
77 262144
80 524288
96 65536
## kleene state fluent hash keys (first line is the number of keys)
14
19795056 18075664
24 86093442
25 86093442
28 86093442
29 86093442
32 243
64 258280326
71 258280326
72 258280326
73 258280326
76 258280326
77 258280326
80 1162261467
96 43046721

## index
17

## state fluent hash keys (first line is the number of keys)
20
18 131072
20 131072
21 131072
24 262144
25 262144
26 131072
28 262144
29 262144
33 32
65 262144
66 262144
68 262144
69 262144
72 524288
73 524288
74 262144
76 524288
77 524288
81 524288
96 131072
## kleene state fluent hash keys (first line is the number of keys)
20
19655968 18075664
20 86093442
21 86093442
24 258280326
25 258280326
26 86093442
28 258280326
29 258280326
33 243
65 258280326
66 258280326
68 258280326
69 258280326
72 774840978
73 774840978
74 258280326
76 774840978
77 774840978
81 1162261467
96 129140163

## index
18

## state fluent hash keys (first line is the number of keys)
6
23 262144
34 32
66 524288
71 524288
82 524288
96 262144
## kleene state fluent hash keys (first line is the number of keys)
6
19677344 18075664
34 243
66 774840978
71 774840978
82 1162261467
96 387420489

## index
19

## state fluent hash keys (first line is the number of keys)
4
35 32
67 262144
83 524288
96 524288
## kleene state fluent hash keys (first line is the number of keys)
4
19625392 243
67 258280326
83 1162261467
96 1162261467

## index
20

## state fluent hash keys (first line is the number of keys)
4
36 32
68 524288
84 524288
96 1048576
## kleene state fluent hash keys (first line is the number of keys)
4
19668224 243
68 774840978
84 1162261467
96 3486784401

## index
21

## state fluent hash keys (first line is the number of keys)
4
37 32
69 524288
85 524288
96 2097152
## kleene state fluent hash keys (first line is the number of keys)
4
19671392 243
69 774840978
85 1162261467
96 10460353203

## index
22

## state fluent hash keys (first line is the number of keys)
4
38 32
70 262144
86 524288
96 4194304
## kleene state fluent hash keys (first line is the number of keys)
4
19674656 243
70 258280326
86 1162261467
96 31381059609

## index
23

## state fluent hash keys (first line is the number of keys)
4
39 32
71 1048576
87 524288
96 8388608
## kleene state fluent hash keys (first line is the number of keys)
4
19624128 18075664
71 2324522934
87 1162261467
96 94143178827

## index
24

## state fluent hash keys (first line is the number of keys)
14
19 131072
25 524288
27 131072
28 524288
31 131072
40 32
67 524288
72 1048576
73 1048576
75 262144
76 1048576
79 262144
88 524288
96 16777216
## kleene state fluent hash keys (first line is the number of keys)
14
19726704 18075664
25 774840978
27 86093442
28 774840978
31 86093442
40 243
67 774840978
72 2324522934
73 2324522934
75 258280326
76 2324522934
79 258280326
88 1162261467
96 282429536481

## index
25

## state fluent hash keys (first line is the number of keys)
6
21 262144
41 32
69 1048576
73 2097152
89 524288
96 33554432
## kleene state fluent hash keys (first line is the number of keys)
6
19627584 18075664
41 243
69 2324522934
73 6973568802
89 1162261467
96 847288609443

## index
26

## state fluent hash keys (first line is the number of keys)
10
19 262144
21 524288
28 1048576
42 32
67 1048576
69 2097152
74 524288
76 2097152
90 524288
96 67108864
## kleene state fluent hash keys (first line is the number of keys)
10
19728240 18075664
21 774840978
28 2324522934
42 243
67 2324522934
69 6973568802
74 774840978
76 6973568802
90 1162261467
96 2541865828329

## index
27

## state fluent hash keys (first line is the number of keys)
8
22 131072
30 131072
43 32
70 524288
75 524288
78 262144
91 524288
96 134217728
## kleene state fluent hash keys (first line is the number of keys)
8
19696288 18075664
30 86093442
43 243
70 774840978
75 774840978
78 258280326
91 1162261467
96 7625597484987

## index
28

## state fluent hash keys (first line is the number of keys)
6
20 262144
44 32
68 1048576
76 4194304
92 524288
96 268435456
## kleene state fluent hash keys (first line is the number of keys)
6
19615984 18075664
44 243
68 2324522934
76 20920706406
92 1162261467
96 22876792454961

## index
29

## state fluent hash keys (first line is the number of keys)
6
18 262144
45 32
66 1048576
77 1048576
93 524288
96 536870912
## kleene state fluent hash keys (first line is the number of keys)
6
19631456 18075664
45 243
66 2324522934
77 2324522934
93 1162261467
96 68630377364883

## index
30

## state fluent hash keys (first line is the number of keys)
8
18 524288
21 1048576
46 32
66 2097152
69 4194304
78 524288
94 524288
96 1073741824
## kleene state fluent hash keys (first line is the number of keys)
8
19708016 18075664
21 2324522934
46 243
66 6973568802
69 20920706406
78 774840978
94 1162261467
96 205891132094649

## index
31

## state fluent hash keys (first line is the number of keys)
6
23 524288
47 32
71 2097152
79 524288
95 524288
96 2147483648
## kleene state fluent hash keys (first line is the number of keys)
6
19767680 139783402363872
47 243
71 6973568802
79 774840978
95 1162261467
96 617673396283947

