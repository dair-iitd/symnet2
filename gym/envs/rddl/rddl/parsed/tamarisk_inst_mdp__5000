#####TASK##### Here
## name
tamarisk_inst_mdp__5000
## horizon
100
## discount factor
1
## number of action fluents
18
## number of det state fluents
0
## number of prob state fluents
36
## number of preconds
0
## number of actions
19
## number of hashing functions
37
## initial state
0 0 0 0 1 0 0 0 1 0 0 1 0 0 0 0 1 1 1 0 0 0 0 0 0 1 0 0 1 0 0 0 0 0 0 1 
## 1 if task is deterministic
0
## 1 if state hashing possible
1
## 1 if kleene state hashing possible
1


#####ACTION FLUENTS#####
## index
0
## name
eradicate(r1)
## number of values
2
## values
0 false
1 true

## index
1
## name
eradicate(r2)
## number of values
2
## values
0 false
1 true

## index
2
## name
eradicate(r3)
## number of values
2
## values
0 false
1 true

## index
3
## name
eradicate(r4)
## number of values
2
## values
0 false
1 true

## index
4
## name
eradicate(r5)
## number of values
2
## values
0 false
1 true

## index
5
## name
eradicate(r6)
## number of values
2
## values
0 false
1 true

## index
6
## name
eradicate(r7)
## number of values
2
## values
0 false
1 true

## index
7
## name
eradicate(r8)
## number of values
2
## values
0 false
1 true

## index
8
## name
eradicate(r9)
## number of values
2
## values
0 false
1 true

## index
9
## name
restore(r1)
## number of values
2
## values
0 false
1 true

## index
10
## name
restore(r2)
## number of values
2
## values
0 false
1 true

## index
11
## name
restore(r3)
## number of values
2
## values
0 false
1 true

## index
12
## name
restore(r4)
## number of values
2
## values
0 false
1 true

## index
13
## name
restore(r5)
## number of values
2
## values
0 false
1 true

## index
14
## name
restore(r6)
## number of values
2
## values
0 false
1 true

## index
15
## name
restore(r7)
## number of values
2
## values
0 false
1 true

## index
16
## name
restore(r8)
## number of values
2
## values
0 false
1 true

## index
17
## name
restore(r9)
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####


#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
native-at(s1s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(18) $s(0)) : Bernoulli($c(0.2))) (and(~($s(18)) $s(0) $a(9)) : $c(1)) (and(~($s(18)) ~($s(0)) $a(9)) : Bernoulli($c(0.9))) ($s(0) : Bernoulli($c(0.95))) (and(~($s(18)) ~($s(0))) : Bernoulli($c(0.1))) ($c(1) : $s(0)) )
## hash index
0
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0

## index
1
## name
native-at(s1s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(19) $s(1)) : Bernoulli($c(0.2))) (and(~($s(19)) $s(1) $a(9)) : $c(1)) (and(~($s(19)) ~($s(1)) $a(9)) : Bernoulli($c(0.9))) ($s(1) : Bernoulli($c(0.95))) (and(~($s(19)) ~($s(1))) : Bernoulli($c(0.1))) ($c(1) : $s(1)) )
## hash index
1
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0

## index
2
## name
native-at(s2s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(20) $s(2)) : Bernoulli($c(0.2))) (and(~($s(20)) $s(2) $a(10)) : $c(1)) (and(~($s(20)) ~($s(2)) $a(10)) : Bernoulli($c(0.9))) ($s(2) : Bernoulli($c(0.95))) (and(~($s(20)) ~($s(2))) : Bernoulli($c(0.1))) ($c(1) : $s(2)) )
## hash index
2
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0

## index
3
## name
native-at(s2s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(21) $s(3)) : Bernoulli($c(0.2))) (and(~($s(21)) $s(3) $a(10)) : $c(1)) (and(~($s(21)) ~($s(3)) $a(10)) : Bernoulli($c(0.9))) ($s(3) : Bernoulli($c(0.95))) (and(~($s(21)) ~($s(3))) : Bernoulli($c(0.1))) ($c(1) : $s(3)) )
## hash index
3
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0

## index
4
## name
native-at(s3s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(22) $s(4)) : Bernoulli($c(0.2))) (and(~($s(22)) $s(4) $a(11)) : $c(1)) (and(~($s(22)) ~($s(4)) $a(11)) : Bernoulli($c(0.9))) ($s(4) : Bernoulli($c(0.95))) (and(~($s(22)) ~($s(4))) : Bernoulli($c(0.1))) ($c(1) : $s(4)) )
## hash index
4
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0

## index
5
## name
native-at(s3s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(23) $s(5)) : Bernoulli($c(0.2))) (and(~($s(23)) $s(5) $a(11)) : $c(1)) (and(~($s(23)) ~($s(5)) $a(11)) : Bernoulli($c(0.9))) ($s(5) : Bernoulli($c(0.95))) (and(~($s(23)) ~($s(5))) : Bernoulli($c(0.1))) ($c(1) : $s(5)) )
## hash index
5
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0

## index
6
## name
native-at(s4s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(24) $s(6)) : Bernoulli($c(0.2))) (and(~($s(24)) $s(6) $a(12)) : $c(1)) (and(~($s(24)) ~($s(6)) $a(12)) : Bernoulli($c(0.9))) ($s(6) : Bernoulli($c(0.95))) (and(~($s(24)) ~($s(6))) : Bernoulli($c(0.1))) ($c(1) : $s(6)) )
## hash index
6
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0

## index
7
## name
native-at(s4s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(25) $s(7)) : Bernoulli($c(0.2))) (and(~($s(25)) $s(7) $a(12)) : $c(1)) (and(~($s(25)) ~($s(7)) $a(12)) : Bernoulli($c(0.9))) ($s(7) : Bernoulli($c(0.95))) (and(~($s(25)) ~($s(7))) : Bernoulli($c(0.1))) ($c(1) : $s(7)) )
## hash index
7
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0

## index
8
## name
native-at(s5s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(26) $s(8)) : Bernoulli($c(0.2))) (and(~($s(26)) $s(8) $a(13)) : $c(1)) (and(~($s(26)) ~($s(8)) $a(13)) : Bernoulli($c(0.9))) ($s(8) : Bernoulli($c(0.95))) (and(~($s(26)) ~($s(8))) : Bernoulli($c(0.1))) ($c(1) : $s(8)) )
## hash index
8
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0

## index
9
## name
native-at(s5s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(27) $s(9)) : Bernoulli($c(0.2))) (and(~($s(27)) $s(9) $a(13)) : $c(1)) (and(~($s(27)) ~($s(9)) $a(13)) : Bernoulli($c(0.9))) ($s(9) : Bernoulli($c(0.95))) (and(~($s(27)) ~($s(9))) : Bernoulli($c(0.1))) ($c(1) : $s(9)) )
## hash index
9
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0

## index
10
## name
native-at(s6s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(28) $s(10)) : Bernoulli($c(0.2))) (and(~($s(28)) $s(10) $a(14)) : $c(1)) (and(~($s(28)) ~($s(10)) $a(14)) : Bernoulli($c(0.9))) ($s(10) : Bernoulli($c(0.95))) (and(~($s(28)) ~($s(10))) : Bernoulli($c(0.1))) ($c(1) : $s(10)) )
## hash index
10
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0

## index
11
## name
native-at(s6s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(29) $s(11)) : Bernoulli($c(0.2))) (and(~($s(29)) $s(11) $a(14)) : $c(1)) (and(~($s(29)) ~($s(11)) $a(14)) : Bernoulli($c(0.9))) ($s(11) : Bernoulli($c(0.95))) (and(~($s(29)) ~($s(11))) : Bernoulli($c(0.1))) ($c(1) : $s(11)) )
## hash index
11
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0

## index
12
## name
native-at(s7s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(30) $s(12)) : Bernoulli($c(0.2))) (and(~($s(30)) $s(12) $a(15)) : $c(1)) (and(~($s(30)) ~($s(12)) $a(15)) : Bernoulli($c(0.9))) ($s(12) : Bernoulli($c(0.95))) (and(~($s(30)) ~($s(12))) : Bernoulli($c(0.1))) ($c(1) : $s(12)) )
## hash index
12
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0

## index
13
## name
native-at(s7s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(31) $s(13)) : Bernoulli($c(0.2))) (and(~($s(31)) $s(13) $a(15)) : $c(1)) (and(~($s(31)) ~($s(13)) $a(15)) : Bernoulli($c(0.9))) ($s(13) : Bernoulli($c(0.95))) (and(~($s(31)) ~($s(13))) : Bernoulli($c(0.1))) ($c(1) : $s(13)) )
## hash index
13
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0

## index
14
## name
native-at(s8s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(32) $s(14)) : Bernoulli($c(0.2))) (and(~($s(32)) $s(14) $a(16)) : $c(1)) (and(~($s(32)) ~($s(14)) $a(16)) : Bernoulli($c(0.9))) ($s(14) : Bernoulli($c(0.95))) (and(~($s(32)) ~($s(14))) : Bernoulli($c(0.1))) ($c(1) : $s(14)) )
## hash index
14
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0

## index
15
## name
native-at(s8s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(33) $s(15)) : Bernoulli($c(0.2))) (and(~($s(33)) $s(15) $a(16)) : $c(1)) (and(~($s(33)) ~($s(15)) $a(16)) : Bernoulli($c(0.9))) ($s(15) : Bernoulli($c(0.95))) (and(~($s(33)) ~($s(15))) : Bernoulli($c(0.1))) ($c(1) : $s(15)) )
## hash index
15
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0

## index
16
## name
native-at(s9s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(34) $s(16)) : Bernoulli($c(0.2))) (and(~($s(34)) $s(16) $a(17)) : $c(1)) (and(~($s(34)) ~($s(16)) $a(17)) : Bernoulli($c(0.9))) ($s(16) : Bernoulli($c(0.95))) (and(~($s(34)) ~($s(16))) : Bernoulli($c(0.1))) ($c(1) : $s(16)) )
## hash index
16
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0

## index
17
## name
native-at(s9s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(35) $s(17)) : Bernoulli($c(0.2))) (and(~($s(35)) $s(17) $a(17)) : $c(1)) (and(~($s(35)) ~($s(17)) $a(17)) : Bernoulli($c(0.9))) ($s(17) : Bernoulli($c(0.95))) (and(~($s(35)) ~($s(17))) : Bernoulli($c(0.1))) ($c(1) : $s(17)) )
## hash index
17
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0

## index
18
## name
tamarisk-at(s1s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(18) $s(0)) : Bernoulli($c(0.8))) (and(~($s(18)) $a(0)) : $c(0)) (and($s(18) $a(0)) : Bernoulli($c(0.1))) ($s(18) : Bernoulli($c(0.95))) (and(~($s(18)) ~($s(0))) : Bernoulli(+(*(-($c(1) *(switch( ($s(19) : $c(0.4)) ($c(1) : $c(1)) ) *(switch( ($s(20) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(21) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(18)) )
## hash index
18
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 1

## index
19
## name
tamarisk-at(s1s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(19) $s(1)) : Bernoulli($c(0.8))) (and(~($s(19)) $a(0)) : $c(0)) (and($s(19) $a(0)) : Bernoulli($c(0.1))) ($s(19) : Bernoulli($c(0.95))) (and(~($s(19)) ~($s(1))) : Bernoulli(+(*(-($c(1) *(switch( ($s(18) : $c(0.4)) ($c(1) : $c(1)) ) *(switch( ($s(20) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(21) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(19)) )
## hash index
19
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 1

## index
20
## name
tamarisk-at(s2s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(20) $s(2)) : Bernoulli($c(0.8))) (and(~($s(20)) $a(1)) : $c(0)) (and($s(20) $a(1)) : Bernoulli($c(0.1))) ($s(20) : Bernoulli($c(0.95))) (and(~($s(20)) ~($s(2))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(21) : $c(0.4)) ($c(1) : $c(1)) ) *(switch( ($s(18) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(19) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(22) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(23) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(20)) )
## hash index
20
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 1
18 0

## index
21
## name
tamarisk-at(s2s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(21) $s(3)) : Bernoulli($c(0.8))) (and(~($s(21)) $a(1)) : $c(0)) (and($s(21) $a(1)) : Bernoulli($c(0.1))) ($s(21) : Bernoulli($c(0.95))) (and(~($s(21)) ~($s(3))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(20) : $c(0.4)) ($c(1) : $c(1)) ) *(switch( ($s(18) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(19) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(22) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(23) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(21)) )
## hash index
21
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 1
18 0

## index
22
## name
tamarisk-at(s3s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(22) $s(4)) : Bernoulli($c(0.8))) (and(~($s(22)) $a(2)) : $c(0)) (and($s(22) $a(2)) : Bernoulli($c(0.1))) ($s(22) : Bernoulli($c(0.95))) (and(~($s(22)) ~($s(4))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(23) : $c(0.4)) ($c(1) : $c(1)) ) *(switch( ($s(20) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(21) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(24) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(25) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(22)) )
## hash index
22
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 1
17 0
18 0

## index
23
## name
tamarisk-at(s3s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(23) $s(5)) : Bernoulli($c(0.8))) (and(~($s(23)) $a(2)) : $c(0)) (and($s(23) $a(2)) : Bernoulli($c(0.1))) ($s(23) : Bernoulli($c(0.95))) (and(~($s(23)) ~($s(5))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(22) : $c(0.4)) ($c(1) : $c(1)) ) *(switch( ($s(20) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(21) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(24) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(25) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(23)) )
## hash index
23
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 1
17 0
18 0

## index
24
## name
tamarisk-at(s4s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(24) $s(6)) : Bernoulli($c(0.8))) (and(~($s(24)) $a(3)) : $c(0)) (and($s(24) $a(3)) : Bernoulli($c(0.1))) ($s(24) : Bernoulli($c(0.95))) (and(~($s(24)) ~($s(6))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(25) : $c(0.4)) ($c(1) : $c(1)) ) *(switch( ($s(22) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(23) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(26) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(27) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(24)) )
## hash index
24
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 1
16 0
17 0
18 0

## index
25
## name
tamarisk-at(s4s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(25) $s(7)) : Bernoulli($c(0.8))) (and(~($s(25)) $a(3)) : $c(0)) (and($s(25) $a(3)) : Bernoulli($c(0.1))) ($s(25) : Bernoulli($c(0.95))) (and(~($s(25)) ~($s(7))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(24) : $c(0.4)) ($c(1) : $c(1)) ) *(switch( ($s(22) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(23) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(26) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(27) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(25)) )
## hash index
25
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 1
16 0
17 0
18 0

## index
26
## name
tamarisk-at(s5s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(26) $s(8)) : Bernoulli($c(0.8))) (and(~($s(26)) $a(4)) : $c(0)) (and($s(26) $a(4)) : Bernoulli($c(0.1))) ($s(26) : Bernoulli($c(0.95))) (and(~($s(26)) ~($s(8))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(27) : $c(0.4)) ($c(1) : $c(1)) ) *(switch( ($s(24) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(25) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(28) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(29) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(26)) )
## hash index
26
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0

## index
27
## name
tamarisk-at(s5s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(27) $s(9)) : Bernoulli($c(0.8))) (and(~($s(27)) $a(4)) : $c(0)) (and($s(27) $a(4)) : Bernoulli($c(0.1))) ($s(27) : Bernoulli($c(0.95))) (and(~($s(27)) ~($s(9))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(26) : $c(0.4)) ($c(1) : $c(1)) ) *(switch( ($s(24) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(25) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(28) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(29) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(27)) )
## hash index
27
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0

## index
28
## name
tamarisk-at(s6s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(28) $s(10)) : Bernoulli($c(0.8))) (and(~($s(28)) $a(5)) : $c(0)) (and($s(28) $a(5)) : Bernoulli($c(0.1))) ($s(28) : Bernoulli($c(0.95))) (and(~($s(28)) ~($s(10))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(29) : $c(0.4)) ($c(1) : $c(1)) ) *(switch( ($s(26) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(27) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(30) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(31) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(28)) )
## hash index
28
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 1
14 0
15 0
16 0
17 0
18 0

## index
29
## name
tamarisk-at(s6s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(29) $s(11)) : Bernoulli($c(0.8))) (and(~($s(29)) $a(5)) : $c(0)) (and($s(29) $a(5)) : Bernoulli($c(0.1))) ($s(29) : Bernoulli($c(0.95))) (and(~($s(29)) ~($s(11))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(28) : $c(0.4)) ($c(1) : $c(1)) ) *(switch( ($s(26) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(27) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(30) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(31) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(29)) )
## hash index
29
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 1
14 0
15 0
16 0
17 0
18 0

## index
30
## name
tamarisk-at(s7s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(30) $s(12)) : Bernoulli($c(0.8))) (and(~($s(30)) $a(6)) : $c(0)) (and($s(30) $a(6)) : Bernoulli($c(0.1))) ($s(30) : Bernoulli($c(0.95))) (and(~($s(30)) ~($s(12))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(31) : $c(0.4)) ($c(1) : $c(1)) ) *(switch( ($s(28) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(29) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(32) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(33) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(30)) )
## hash index
30
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 1
13 0
14 0
15 0
16 0
17 0
18 0

## index
31
## name
tamarisk-at(s7s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(31) $s(13)) : Bernoulli($c(0.8))) (and(~($s(31)) $a(6)) : $c(0)) (and($s(31) $a(6)) : Bernoulli($c(0.1))) ($s(31) : Bernoulli($c(0.95))) (and(~($s(31)) ~($s(13))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(30) : $c(0.4)) ($c(1) : $c(1)) ) *(switch( ($s(28) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(29) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(32) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(33) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(31)) )
## hash index
31
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 1
13 0
14 0
15 0
16 0
17 0
18 0

## index
32
## name
tamarisk-at(s8s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(32) $s(14)) : Bernoulli($c(0.8))) (and(~($s(32)) $a(7)) : $c(0)) (and($s(32) $a(7)) : Bernoulli($c(0.1))) ($s(32) : Bernoulli($c(0.95))) (and(~($s(32)) ~($s(14))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(33) : $c(0.4)) ($c(1) : $c(1)) ) *(switch( ($s(30) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(31) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(34) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(35) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(32)) )
## hash index
32
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 1
12 0
13 0
14 0
15 0
16 0
17 0
18 0

## index
33
## name
tamarisk-at(s8s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(33) $s(15)) : Bernoulli($c(0.8))) (and(~($s(33)) $a(7)) : $c(0)) (and($s(33) $a(7)) : Bernoulli($c(0.1))) ($s(33) : Bernoulli($c(0.95))) (and(~($s(33)) ~($s(15))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(32) : $c(0.4)) ($c(1) : $c(1)) ) *(switch( ($s(30) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(31) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(34) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(35) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(33)) )
## hash index
33
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 1
12 0
13 0
14 0
15 0
16 0
17 0
18 0

## index
34
## name
tamarisk-at(s9s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(34) $s(16)) : Bernoulli($c(0.8))) (and(~($s(34)) $a(8)) : $c(0)) (and($s(34) $a(8)) : Bernoulli($c(0.1))) ($s(34) : Bernoulli($c(0.95))) (and(~($s(34)) ~($s(16))) : Bernoulli(+(*(-($c(1) *(switch( ($s(35) : $c(0.4)) ($c(1) : $c(1)) ) *(switch( ($s(32) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(33) : $c(0.4)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(34)) )
## hash index
34
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0

## index
35
## name
tamarisk-at(s9s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(35) $s(17)) : Bernoulli($c(0.8))) (and(~($s(35)) $a(8)) : $c(0)) (and($s(35) $a(8)) : Bernoulli($c(0.1))) ($s(35) : Bernoulli($c(0.95))) (and(~($s(35)) ~($s(17))) : Bernoulli(+(*(-($c(1) *(switch( ($s(34) : $c(0.4)) ($c(1) : $c(1)) ) *(switch( ($s(32) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(33) : $c(0.4)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(35)) )
## hash index
35
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0



#####REWARD#####
## formula
+(*(or($s(18) $s(19)) $c(-5)) *(or($s(20) $s(21)) $c(-5)) *(or($s(22) $s(23)) $c(-5)) *(or($s(24) $s(25)) $c(-5)) *(or($s(26) $s(27)) $c(-5)) *(or($s(28) $s(29)) $c(-5)) *(or($s(30) $s(31)) $c(-5)) *(or($s(32) $s(33)) $c(-5)) *(or($s(34) $s(35)) $c(-5)) *($s(18) $c(-0.5)) *($s(19) $c(-0.5)) *($s(20) $c(-0.5)) *($s(21) $c(-0.5)) *($s(22) $c(-0.5)) *($s(23) $c(-0.5)) *($s(24) $c(-0.5)) *($s(25) $c(-0.5)) *($s(26) $c(-0.5)) *($s(27) $c(-0.5)) *($s(28) $c(-0.5)) *($s(29) $c(-0.5)) *($s(30) $c(-0.5)) *($s(31) $c(-0.5)) *($s(32) $c(-0.5)) *($s(33) $c(-0.5)) *($s(34) $c(-0.5)) *($s(35) $c(-0.5)) *(and(~($s(18)) ~($s(0))) $c(-0.25)) *(and(~($s(19)) ~($s(1))) $c(-0.25)) *(and(~($s(20)) ~($s(2))) $c(-0.25)) *(and(~($s(21)) ~($s(3))) $c(-0.25)) *(and(~($s(22)) ~($s(4))) $c(-0.25)) *(and(~($s(23)) ~($s(5))) $c(-0.25)) *(and(~($s(24)) ~($s(6))) $c(-0.25)) *(and(~($s(25)) ~($s(7))) $c(-0.25)) *(and(~($s(26)) ~($s(8))) $c(-0.25)) *(and(~($s(27)) ~($s(9))) $c(-0.25)) *(and(~($s(28)) ~($s(10))) $c(-0.25)) *(and(~($s(29)) ~($s(11))) $c(-0.25)) *(and(~($s(30)) ~($s(12))) $c(-0.25)) *(and(~($s(31)) ~($s(13))) $c(-0.25)) *(and(~($s(32)) ~($s(14))) $c(-0.25)) *(and(~($s(33)) ~($s(15))) $c(-0.25)) *(and(~($s(34)) ~($s(16))) $c(-0.25)) *(and(~($s(35)) ~($s(17))) $c(-0.25)) *($a(0) $c(-0.49)) *($a(1) $c(-0.49)) *($a(2) $c(-0.49)) *($a(3) $c(-0.49)) *($a(4) $c(-0.49)) *($a(5) $c(-0.49)) *($a(6) $c(-0.49)) *($a(7) $c(-0.49)) *($a(8) $c(-0.49)) *($a(9) $c(-0.9)) *($a(10) $c(-0.9)) *($a(11) $c(-0.9)) *($a(12) $c(-0.9)) *($a(13) $c(-0.9)) *($a(14) $c(-0.9)) *($a(15) $c(-0.9)) *($a(16) $c(-0.9)) *($a(17) $c(-0.9)) *(and($a(9) ~($s(18)) ~($s(0))) $c(-0.4)) *(and($a(9) ~($s(19)) ~($s(1))) $c(-0.4)) *(and($a(10) ~($s(20)) ~($s(2))) $c(-0.4)) *(and($a(10) ~($s(21)) ~($s(3))) $c(-0.4)) *(and($a(11) ~($s(22)) ~($s(4))) $c(-0.4)) *(and($a(11) ~($s(23)) ~($s(5))) $c(-0.4)) *(and($a(12) ~($s(24)) ~($s(6))) $c(-0.4)) *(and($a(12) ~($s(25)) ~($s(7))) $c(-0.4)) *(and($a(13) ~($s(26)) ~($s(8))) $c(-0.4)) *(and($a(13) ~($s(27)) ~($s(9))) $c(-0.4)) *(and($a(14) ~($s(28)) ~($s(10))) $c(-0.4)) *(and($a(14) ~($s(29)) ~($s(11))) $c(-0.4)) *(and($a(15) ~($s(30)) ~($s(12))) $c(-0.4)) *(and($a(15) ~($s(31)) ~($s(13))) $c(-0.4)) *(and($a(16) ~($s(32)) ~($s(14))) $c(-0.4)) *(and($a(16) ~($s(33)) ~($s(15))) $c(-0.4)) *(and($a(17) ~($s(34)) ~($s(16))) $c(-0.4)) *(and($a(17) ~($s(35)) ~($s(17))) $c(-0.4)))
## min
-60.2
## max
-0
## independent from actions
0
## hash index
36
## caching type
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4
5 5
6 6
7 7
8 8
9 9
10 10
11 11
12 12
13 13
14 14
15 15
16 16
17 17
18 18


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
4
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
5
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
6
## state
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
7
## state
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
8
## state
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
9
## state
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
10
## state
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
11
## state
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
12
## state
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
13
## state
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
14
## state
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
15
## state
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
16
## state
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
17
## state
0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
18
## state
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####

#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
0 2
18 2
36 19
## kleene state fluent hash keys (first line is the number of keys)
3
0 2
18 2
36 19

## index
1
## state hash key (for each value in the domain)
0 2
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
1 2
19 2
36 38
## kleene state fluent hash keys (first line is the number of keys)
3
60686896 2
19 2
36 57

## index
2
## state hash key (for each value in the domain)
0 4
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
2 2
20 2
36 76
## kleene state fluent hash keys (first line is the number of keys)
3
60686976 2
20 2
36 171

## index
3
## state hash key (for each value in the domain)
0 8
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
3 2
21 2
36 152
## kleene state fluent hash keys (first line is the number of keys)
3
60687056 2
21 2
36 513

## index
4
## state hash key (for each value in the domain)
0 16
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
4 2
22 2
36 304
## kleene state fluent hash keys (first line is the number of keys)
3
60687136 2
22 2
36 1539

## index
5
## state hash key (for each value in the domain)
0 32
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
5 2
23 2
36 608
## kleene state fluent hash keys (first line is the number of keys)
3
60687216 2
23 2
36 4617

## index
6
## state hash key (for each value in the domain)
0 64
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
6 2
24 2
36 1216
## kleene state fluent hash keys (first line is the number of keys)
3
60687296 2
24 2
36 13851

## index
7
## state hash key (for each value in the domain)
0 128
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
7 2
25 2
36 2432
## kleene state fluent hash keys (first line is the number of keys)
3
60687376 2
25 2
36 41553

## index
8
## state hash key (for each value in the domain)
0 256
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
8 2
26 2
36 4864
## kleene state fluent hash keys (first line is the number of keys)
3
60687456 2
26 2
36 124659

## index
9
## state hash key (for each value in the domain)
0 512
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
9 2
27 2
36 9728
## kleene state fluent hash keys (first line is the number of keys)
3
60687536 2
27 2
36 373977

## index
10
## state hash key (for each value in the domain)
0 1024
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
10 2
28 2
36 19456
## kleene state fluent hash keys (first line is the number of keys)
3
60687616 2
28 2
36 1121931

## index
11
## state hash key (for each value in the domain)
0 2048
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
11 2
29 2
36 38912
## kleene state fluent hash keys (first line is the number of keys)
3
60687696 2
29 2
36 3365793

## index
12
## state hash key (for each value in the domain)
0 4096
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
12 2
30 2
36 77824
## kleene state fluent hash keys (first line is the number of keys)
3
60687776 2
30 2
36 10097379

## index
13
## state hash key (for each value in the domain)
0 8192
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
13 2
31 2
36 155648
## kleene state fluent hash keys (first line is the number of keys)
3
60687856 2
31 2
36 30292137

## index
14
## state hash key (for each value in the domain)
0 16384
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
14 2
32 2
36 311296
## kleene state fluent hash keys (first line is the number of keys)
3
60687936 2
32 2
36 90876411

## index
15
## state hash key (for each value in the domain)
0 32768
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
15 2
33 2
36 622592
## kleene state fluent hash keys (first line is the number of keys)
3
60688016 2
33 2
36 272629233

## index
16
## state hash key (for each value in the domain)
0 65536
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
16 2
34 2
36 1245184
## kleene state fluent hash keys (first line is the number of keys)
3
60688096 2
34 2
36 817887699

## index
17
## state hash key (for each value in the domain)
0 131072
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
17 2
35 2
36 2490368
## kleene state fluent hash keys (first line is the number of keys)
3
60688176 2
35 2
36 2453663097

## index
18
## state hash key (for each value in the domain)
0 262144
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
6
0 4
18 4
19 4
20 4
21 4
36 4980736
## kleene state fluent hash keys (first line is the number of keys)
6
19512416 19279888
18 6
19 6
20 6
21 6
36 7360989291

## index
19
## state hash key (for each value in the domain)
0 524288
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
6
1 4
18 8
19 8
20 8
21 8
36 9961472
## kleene state fluent hash keys (first line is the number of keys)
6
60495552 19279888
18 18
19 18
20 18
21 18
36 22082967873

## index
20
## state hash key (for each value in the domain)
0 1048576
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
2 4
18 16
19 16
20 16
21 16
22 4
23 4
36 19922944
## kleene state fluent hash keys (first line is the number of keys)
8
60495696 19279888
18 54
19 54
20 54
21 54
22 6
23 6
36 66248903619

## index
21
## state hash key (for each value in the domain)
0 2097152
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
3 4
18 32
19 32
20 32
21 32
22 8
23 8
36 39845888
## kleene state fluent hash keys (first line is the number of keys)
8
60495840 19279888
18 162
19 162
20 162
21 162
22 18
23 18
36 198746710857

## index
22
## state hash key (for each value in the domain)
0 4194304
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
4 4
20 64
21 64
22 16
23 16
24 4
25 4
36 79691776
## kleene state fluent hash keys (first line is the number of keys)
8
60495984 19279888
20 486
21 486
22 54
23 54
24 6
25 6
36 596240132571

## index
23
## state hash key (for each value in the domain)
0 8388608
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
5 4
20 128
21 128
22 32
23 32
24 8
25 8
36 159383552
## kleene state fluent hash keys (first line is the number of keys)
8
60526192 19279888
20 1458
21 1458
22 162
23 162
24 18
25 18
36 1788720397713

## index
24
## state hash key (for each value in the domain)
0 16777216
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
6 4
22 64
23 64
24 16
25 16
26 4
27 4
36 318767104
## kleene state fluent hash keys (first line is the number of keys)
8
61939872 60586400
22 486
23 486
24 54
25 54
26 6
27 6
36 5366161193139

## index
25
## state hash key (for each value in the domain)
0 33554432
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
7 4
22 128
23 128
24 32
25 32
26 8
27 8
36 637534208
## kleene state fluent hash keys (first line is the number of keys)
8
7 6
22 1458
23 1458
24 162
25 162
26 18
27 18
36 16098483579417

## index
26
## state hash key (for each value in the domain)
0 67108864
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
8 4
24 64
25 64
26 16
27 16
28 4
29 4
36 1275068416
## kleene state fluent hash keys (first line is the number of keys)
8
60556288 60616512
24 486
25 486
26 54
27 54
28 6
29 6
36 48295450738251

## index
27
## state hash key (for each value in the domain)
0 134217728
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
9 4
24 128
25 128
26 32
27 32
28 8
29 8
36 2550136832
## kleene state fluent hash keys (first line is the number of keys)
8
9 6
24 1458
25 1458
26 162
27 162
28 18
29 18
36 144886352214753

## index
28
## state hash key (for each value in the domain)
0 268435456
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
10 4
26 64
27 64
28 16
29 16
30 4
31 4
36 5100273664
## kleene state fluent hash keys (first line is the number of keys)
8
60586400 60646624
26 486
27 486
28 54
29 54
30 6
31 6
36 434659056644259

## index
29
## state hash key (for each value in the domain)
0 536870912
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
11 4
26 128
27 128
28 32
29 32
30 8
31 8
36 10200547328
## kleene state fluent hash keys (first line is the number of keys)
8
11 6
26 1458
27 1458
28 162
29 162
30 18
31 18
36 1303977169932777

## index
30
## state hash key (for each value in the domain)
0 1073741824
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
12 4
28 64
29 64
30 16
31 16
32 4
33 4
36 20401094656
## kleene state fluent hash keys (first line is the number of keys)
8
60616512 60676736
28 486
29 486
30 54
31 54
32 6
33 6
36 3911931509798331

## index
31
## state hash key (for each value in the domain)
0 2147483648
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
13 4
28 128
29 128
30 32
31 32
32 8
33 8
36 40802189312
## kleene state fluent hash keys (first line is the number of keys)
8
13 6
28 1458
29 1458
30 162
31 162
32 18
33 18
36 11735794529394993

## index
32
## state hash key (for each value in the domain)
0 4294967296
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
14 4
30 64
31 64
32 16
33 16
34 4
35 4
36 81604378624
## kleene state fluent hash keys (first line is the number of keys)
8
60646624 60685152
30 486
31 486
32 54
33 54
34 6
35 6
36 35207383588184979

## index
33
## state hash key (for each value in the domain)
0 8589934592
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
8
15 4
30 128
31 128
32 32
33 32
34 8
35 8
36 163208757248
## kleene state fluent hash keys (first line is the number of keys)
8
15 6
30 1458
31 1458
32 162
33 162
34 18
35 18
36 105622150764554937

## index
34
## state hash key (for each value in the domain)
0 17179869184
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
6
16 4
32 64
33 64
34 16
35 16
36 326417514496
## kleene state fluent hash keys (first line is the number of keys)
6
60676736 139786228382688
32 486
33 486
34 54
35 54
36 316866452293664811

## index
35
## state hash key (for each value in the domain)
0 34359738368
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
6
17 4
32 128
33 128
34 32
35 32
36 652835028992
## kleene state fluent hash keys (first line is the number of keys)
6
17 6
32 1458
33 1458
34 162
35 162
36 950599356880994433

