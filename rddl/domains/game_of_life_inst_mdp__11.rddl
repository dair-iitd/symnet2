non-fluents nf_game_of_life_inst_mdp__11 {
	domain = game_of_life_mdp;
	objects {
		x_pos : {x1,x2,x3,x4,x5,x6};
		y_pos : {y1,y2,y3,y4,y5,y6};
	};
	non-fluents {
		NOISE-PROB(x1,y1) = 0.050003648;
		NEIGHBOR(x1,y1,x1,y2);
		NEIGHBOR(x1,y1,x2,y1);
		NEIGHBOR(x1,y1,x2,y2);
		NOISE-PROB(x1,y2) = 0.06557123;
		NEIGHBOR(x1,y2,x1,y1);
		NEIGHBOR(x1,y2,x1,y3);
		NEIGHBOR(x1,y2,x2,y1);
		NEIGHBOR(x1,y2,x2,y2);
		NEIGHBOR(x1,y2,x2,y3);
		NOISE-PROB(x1,y3) = 0.07004702;
		NEIGHBOR(x1,y3,x1,y2);
		NEIGHBOR(x1,y3,x1,y4);
		NEIGHBOR(x1,y3,x2,y2);
		NEIGHBOR(x1,y3,x2,y3);
		NEIGHBOR(x1,y3,x2,y4);
		NOISE-PROB(x1,y4) = 0.08488037;
		NEIGHBOR(x1,y4,x1,y3);
		NEIGHBOR(x1,y4,x1,y5);
		NEIGHBOR(x1,y4,x2,y3);
		NEIGHBOR(x1,y4,x2,y4);
		NEIGHBOR(x1,y4,x2,y5);
		NOISE-PROB(x1,y5) = 0.078470655;
		NEIGHBOR(x1,y5,x1,y4);
		NEIGHBOR(x1,y5,x1,y6);
		NEIGHBOR(x1,y5,x2,y4);
		NEIGHBOR(x1,y5,x2,y5);
		NEIGHBOR(x1,y5,x2,y6);
		NOISE-PROB(x1,y6) = 0.05807898;
		NEIGHBOR(x1,y6,x1,y5);
		NEIGHBOR(x1,y6,x2,y5);
		NEIGHBOR(x1,y6,x2,y6);
		NOISE-PROB(x2,y1) = 0.053802002;
		NEIGHBOR(x2,y1,x1,y1);
		NEIGHBOR(x2,y1,x1,y2);
		NEIGHBOR(x2,y1,x2,y2);
		NEIGHBOR(x2,y1,x3,y1);
		NEIGHBOR(x2,y1,x3,y2);
		NOISE-PROB(x2,y2) = 0.058585778;
		NEIGHBOR(x2,y2,x1,y1);
		NEIGHBOR(x2,y2,x1,y2);
		NEIGHBOR(x2,y2,x1,y3);
		NEIGHBOR(x2,y2,x2,y1);
		NEIGHBOR(x2,y2,x2,y3);
		NEIGHBOR(x2,y2,x3,y1);
		NEIGHBOR(x2,y2,x3,y2);
		NEIGHBOR(x2,y2,x3,y3);
		NOISE-PROB(x2,y3) = 0.031584658;
		NEIGHBOR(x2,y3,x1,y2);
		NEIGHBOR(x2,y3,x1,y3);
		NEIGHBOR(x2,y3,x1,y4);
		NEIGHBOR(x2,y3,x2,y2);
		NEIGHBOR(x2,y3,x2,y4);
		NEIGHBOR(x2,y3,x3,y2);
		NEIGHBOR(x2,y3,x3,y3);
		NEIGHBOR(x2,y3,x3,y4);
		NOISE-PROB(x2,y4) = 0.026055554;
		NEIGHBOR(x2,y4,x1,y3);
		NEIGHBOR(x2,y4,x1,y4);
		NEIGHBOR(x2,y4,x1,y5);
		NEIGHBOR(x2,y4,x2,y3);
		NEIGHBOR(x2,y4,x2,y5);
		NEIGHBOR(x2,y4,x3,y3);
		NEIGHBOR(x2,y4,x3,y4);
		NEIGHBOR(x2,y4,x3,y5);
		NOISE-PROB(x2,y5) = 0.06789141;
		NEIGHBOR(x2,y5,x1,y4);
		NEIGHBOR(x2,y5,x1,y5);
		NEIGHBOR(x2,y5,x1,y6);
		NEIGHBOR(x2,y5,x2,y4);
		NEIGHBOR(x2,y5,x2,y6);
		NEIGHBOR(x2,y5,x3,y4);
		NEIGHBOR(x2,y5,x3,y5);
		NEIGHBOR(x2,y5,x3,y6);
		NOISE-PROB(x2,y6) = 0.02440157;
		NEIGHBOR(x2,y6,x1,y5);
		NEIGHBOR(x2,y6,x1,y6);
		NEIGHBOR(x2,y6,x2,y5);
		NEIGHBOR(x2,y6,x3,y5);
		NEIGHBOR(x2,y6,x3,y6);
		NOISE-PROB(x3,y1) = 0.08512871;
		NEIGHBOR(x3,y1,x2,y1);
		NEIGHBOR(x3,y1,x2,y2);
		NEIGHBOR(x3,y1,x3,y2);
		NEIGHBOR(x3,y1,x4,y1);
		NEIGHBOR(x3,y1,x4,y2);
		NOISE-PROB(x3,y2) = 0.022747764;
		NEIGHBOR(x3,y2,x2,y1);
		NEIGHBOR(x3,y2,x2,y2);
		NEIGHBOR(x3,y2,x2,y3);
		NEIGHBOR(x3,y2,x3,y1);
		NEIGHBOR(x3,y2,x3,y3);
		NEIGHBOR(x3,y2,x4,y1);
		NEIGHBOR(x3,y2,x4,y2);
		NEIGHBOR(x3,y2,x4,y3);
		NOISE-PROB(x3,y3) = 0.043800324;
		NEIGHBOR(x3,y3,x2,y2);
		NEIGHBOR(x3,y3,x2,y3);
		NEIGHBOR(x3,y3,x2,y4);
		NEIGHBOR(x3,y3,x3,y2);
		NEIGHBOR(x3,y3,x3,y4);
		NEIGHBOR(x3,y3,x4,y2);
		NEIGHBOR(x3,y3,x4,y3);
		NEIGHBOR(x3,y3,x4,y4);
		NOISE-PROB(x3,y4) = 0.053717576;
		NEIGHBOR(x3,y4,x2,y3);
		NEIGHBOR(x3,y4,x2,y4);
		NEIGHBOR(x3,y4,x2,y5);
		NEIGHBOR(x3,y4,x3,y3);
		NEIGHBOR(x3,y4,x3,y5);
		NEIGHBOR(x3,y4,x4,y3);
		NEIGHBOR(x3,y4,x4,y4);
		NEIGHBOR(x3,y4,x4,y5);
		NOISE-PROB(x3,y5) = 0.072631896;
		NEIGHBOR(x3,y5,x2,y4);
		NEIGHBOR(x3,y5,x2,y5);
		NEIGHBOR(x3,y5,x2,y6);
		NEIGHBOR(x3,y5,x3,y4);
		NEIGHBOR(x3,y5,x3,y6);
		NEIGHBOR(x3,y5,x4,y4);
		NEIGHBOR(x3,y5,x4,y5);
		NEIGHBOR(x3,y5,x4,y6);
		NOISE-PROB(x3,y6) = 0.048804164;
		NEIGHBOR(x3,y6,x2,y5);
		NEIGHBOR(x3,y6,x2,y6);
		NEIGHBOR(x3,y6,x3,y5);
		NEIGHBOR(x3,y6,x4,y5);
		NEIGHBOR(x3,y6,x4,y6);
		NOISE-PROB(x4,y1) = 0.051871944;
		NEIGHBOR(x4,y1,x3,y1);
		NEIGHBOR(x4,y1,x3,y2);
		NEIGHBOR(x4,y1,x4,y2);
		NEIGHBOR(x4,y1,x5,y1);
		NEIGHBOR(x4,y1,x5,y2);
		NOISE-PROB(x4,y2) = 0.05190487;
		NEIGHBOR(x4,y2,x3,y1);
		NEIGHBOR(x4,y2,x3,y2);
		NEIGHBOR(x4,y2,x3,y3);
		NEIGHBOR(x4,y2,x4,y1);
		NEIGHBOR(x4,y2,x4,y3);
		NEIGHBOR(x4,y2,x5,y1);
		NEIGHBOR(x4,y2,x5,y2);
		NEIGHBOR(x4,y2,x5,y3);
		NOISE-PROB(x4,y3) = 0.08709076;
		NEIGHBOR(x4,y3,x3,y2);
		NEIGHBOR(x4,y3,x3,y3);
		NEIGHBOR(x4,y3,x3,y4);
		NEIGHBOR(x4,y3,x4,y2);
		NEIGHBOR(x4,y3,x4,y4);
		NEIGHBOR(x4,y3,x5,y2);
		NEIGHBOR(x4,y3,x5,y3);
		NEIGHBOR(x4,y3,x5,y4);
		NOISE-PROB(x4,y4) = 0.03569354;
		NEIGHBOR(x4,y4,x3,y3);
		NEIGHBOR(x4,y4,x3,y4);
		NEIGHBOR(x4,y4,x3,y5);
		NEIGHBOR(x4,y4,x4,y3);
		NEIGHBOR(x4,y4,x4,y5);
		NEIGHBOR(x4,y4,x5,y3);
		NEIGHBOR(x4,y4,x5,y4);
		NEIGHBOR(x4,y4,x5,y5);
		NOISE-PROB(x4,y5) = 0.059852548;
		NEIGHBOR(x4,y5,x3,y4);
		NEIGHBOR(x4,y5,x3,y5);
		NEIGHBOR(x4,y5,x3,y6);
		NEIGHBOR(x4,y5,x4,y4);
		NEIGHBOR(x4,y5,x4,y6);
		NEIGHBOR(x4,y5,x5,y4);
		NEIGHBOR(x4,y5,x5,y5);
		NEIGHBOR(x4,y5,x5,y6);
		NOISE-PROB(x4,y6) = 0.06540068;
		NEIGHBOR(x4,y6,x3,y5);
		NEIGHBOR(x4,y6,x3,y6);
		NEIGHBOR(x4,y6,x4,y5);
		NEIGHBOR(x4,y6,x5,y5);
		NEIGHBOR(x4,y6,x5,y6);
		NOISE-PROB(x5,y1) = 0.024672762;
		NEIGHBOR(x5,y1,x4,y1);
		NEIGHBOR(x5,y1,x4,y2);
		NEIGHBOR(x5,y1,x5,y2);
		NEIGHBOR(x5,y1,x6,y1);
		NEIGHBOR(x5,y1,x6,y2);
		NOISE-PROB(x5,y2) = 0.02077609;
		NEIGHBOR(x5,y2,x4,y1);
		NEIGHBOR(x5,y2,x4,y2);
		NEIGHBOR(x5,y2,x4,y3);
		NEIGHBOR(x5,y2,x5,y1);
		NEIGHBOR(x5,y2,x5,y3);
		NEIGHBOR(x5,y2,x6,y1);
		NEIGHBOR(x5,y2,x6,y2);
		NEIGHBOR(x5,y2,x6,y3);
		NOISE-PROB(x5,y3) = 0.030901778;
		NEIGHBOR(x5,y3,x4,y2);
		NEIGHBOR(x5,y3,x4,y3);
		NEIGHBOR(x5,y3,x4,y4);
		NEIGHBOR(x5,y3,x5,y2);
		NEIGHBOR(x5,y3,x5,y4);
		NEIGHBOR(x5,y3,x6,y2);
		NEIGHBOR(x5,y3,x6,y3);
		NEIGHBOR(x5,y3,x6,y4);
		NOISE-PROB(x5,y4) = 0.07854527;
		NEIGHBOR(x5,y4,x4,y3);
		NEIGHBOR(x5,y4,x4,y4);
		NEIGHBOR(x5,y4,x4,y5);
		NEIGHBOR(x5,y4,x5,y3);
		NEIGHBOR(x5,y4,x5,y5);
		NEIGHBOR(x5,y4,x6,y3);
		NEIGHBOR(x5,y4,x6,y4);
		NEIGHBOR(x5,y4,x6,y5);
		NOISE-PROB(x5,y5) = 0.022833396;
		NEIGHBOR(x5,y5,x4,y4);
		NEIGHBOR(x5,y5,x4,y5);
		NEIGHBOR(x5,y5,x4,y6);
		NEIGHBOR(x5,y5,x5,y4);
		NEIGHBOR(x5,y5,x5,y6);
		NEIGHBOR(x5,y5,x6,y4);
		NEIGHBOR(x5,y5,x6,y5);
		NEIGHBOR(x5,y5,x6,y6);
		NOISE-PROB(x5,y6) = 0.04943175;
		NEIGHBOR(x5,y6,x4,y5);
		NEIGHBOR(x5,y6,x4,y6);
		NEIGHBOR(x5,y6,x5,y5);
		NEIGHBOR(x5,y6,x6,y5);
		NEIGHBOR(x5,y6,x6,y6);
		NOISE-PROB(x6,y1) = 0.034910265;
		NEIGHBOR(x6,y1,x5,y1);
		NEIGHBOR(x6,y1,x5,y2);
		NEIGHBOR(x6,y1,x6,y2);
		NOISE-PROB(x6,y2) = 0.04826132;
		NEIGHBOR(x6,y2,x5,y1);
		NEIGHBOR(x6,y2,x5,y2);
		NEIGHBOR(x6,y2,x5,y3);
		NEIGHBOR(x6,y2,x6,y1);
		NEIGHBOR(x6,y2,x6,y3);
		NOISE-PROB(x6,y3) = 0.056289878;
		NEIGHBOR(x6,y3,x5,y2);
		NEIGHBOR(x6,y3,x5,y3);
		NEIGHBOR(x6,y3,x5,y4);
		NEIGHBOR(x6,y3,x6,y2);
		NEIGHBOR(x6,y3,x6,y4);
		NOISE-PROB(x6,y4) = 0.040081132;
		NEIGHBOR(x6,y4,x5,y3);
		NEIGHBOR(x6,y4,x5,y4);
		NEIGHBOR(x6,y4,x5,y5);
		NEIGHBOR(x6,y4,x6,y3);
		NEIGHBOR(x6,y4,x6,y5);
		NOISE-PROB(x6,y5) = 0.044558965;
		NEIGHBOR(x6,y5,x5,y4);
		NEIGHBOR(x6,y5,x5,y5);
		NEIGHBOR(x6,y5,x5,y6);
		NEIGHBOR(x6,y5,x6,y4);
		NEIGHBOR(x6,y5,x6,y6);
		NOISE-PROB(x6,y6) = 0.042528078;
		NEIGHBOR(x6,y6,x5,y5);
		NEIGHBOR(x6,y6,x5,y6);
		NEIGHBOR(x6,y6,x6,y5);
	};
}

instance game_of_life_inst_mdp__11 {
	domain = game_of_life_mdp;
	non-fluents = nf_game_of_life_inst_mdp__11;
	init-state {
		alive(x4,y2);
	};

	max-nondef-actions = 1;
	horizon  = 100;
	discount = 1.0;
}
