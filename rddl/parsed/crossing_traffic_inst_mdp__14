#####TASK##### Here
## name
crossing_traffic_inst_mdp__14
## horizon
100
## discount factor
1
## number of action fluents
4
## number of det state fluents
96
## number of prob state fluents
18
## number of preconds
0
## number of actions
5
## number of hashing functions
115
## initial state
1 1 1 1 1 1 1 0 1 0 1 0 1 0 0 1 0 1 0 1 0 0 1 0 1 0 1 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 0 1 0 1 1 0 0 0 1 1 0 1 1 0 
## 1 if task is deterministic
0
## 1 if state hashing possible
0
## 1 if kleene state hashing possible
0


#####ACTION FLUENTS#####
## index
0
## name
move-east
## number of values
2
## values
0 false
1 true

## index
1
## name
move-north
## number of values
2
## values
0 false
1 true

## index
2
## name
move-south
## number of values
2
## values
0 false
1 true

## index
3
## name
move-west
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####
## index
0
## name
obstacle-at(x1, y10)
## number of values
2
## values
0 false
1 true
## formula
$s(18)
## hash index
0
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
1
## name
obstacle-at(x1, y11)
## number of values
2
## values
0 false
1 true
## formula
$s(19)
## hash index
1
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
2
## name
obstacle-at(x1, y12)
## number of values
2
## values
0 false
1 true
## formula
$s(20)
## hash index
2
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
3
## name
obstacle-at(x1, y13)
## number of values
2
## values
0 false
1 true
## formula
$s(21)
## hash index
3
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
4
## name
obstacle-at(x1, y14)
## number of values
2
## values
0 false
1 true
## formula
$s(22)
## hash index
4
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
5
## name
obstacle-at(x1, y15)
## number of values
2
## values
0 false
1 true
## formula
$s(23)
## hash index
5
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
6
## name
obstacle-at(x1, y16)
## number of values
2
## values
0 false
1 true
## formula
$s(24)
## hash index
6
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
7
## name
obstacle-at(x1, y17)
## number of values
2
## values
0 false
1 true
## formula
$s(25)
## hash index
7
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
8
## name
obstacle-at(x1, y18)
## number of values
2
## values
0 false
1 true
## formula
$s(26)
## hash index
8
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
9
## name
obstacle-at(x1, y19)
## number of values
2
## values
0 false
1 true
## formula
$s(27)
## hash index
9
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
10
## name
obstacle-at(x1, y2)
## number of values
2
## values
0 false
1 true
## formula
$s(28)
## hash index
10
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
11
## name
obstacle-at(x1, y3)
## number of values
2
## values
0 false
1 true
## formula
$s(29)
## hash index
11
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
12
## name
obstacle-at(x1, y4)
## number of values
2
## values
0 false
1 true
## formula
$s(30)
## hash index
12
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
13
## name
obstacle-at(x1, y5)
## number of values
2
## values
0 false
1 true
## formula
$s(31)
## hash index
13
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
14
## name
obstacle-at(x1, y6)
## number of values
2
## values
0 false
1 true
## formula
$s(32)
## hash index
14
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
15
## name
obstacle-at(x1, y7)
## number of values
2
## values
0 false
1 true
## formula
$s(33)
## hash index
15
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
16
## name
obstacle-at(x1, y8)
## number of values
2
## values
0 false
1 true
## formula
$s(34)
## hash index
16
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
17
## name
obstacle-at(x1, y9)
## number of values
2
## values
0 false
1 true
## formula
$s(35)
## hash index
17
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
18
## name
obstacle-at(x2, y10)
## number of values
2
## values
0 false
1 true
## formula
$s(96)
## hash index
18
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
19
## name
obstacle-at(x2, y11)
## number of values
2
## values
0 false
1 true
## formula
$s(97)
## hash index
19
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
20
## name
obstacle-at(x2, y12)
## number of values
2
## values
0 false
1 true
## formula
$s(98)
## hash index
20
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
21
## name
obstacle-at(x2, y13)
## number of values
2
## values
0 false
1 true
## formula
$s(99)
## hash index
21
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
22
## name
obstacle-at(x2, y14)
## number of values
2
## values
0 false
1 true
## formula
$s(100)
## hash index
22
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
23
## name
obstacle-at(x2, y15)
## number of values
2
## values
0 false
1 true
## formula
$s(101)
## hash index
23
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
24
## name
obstacle-at(x2, y16)
## number of values
2
## values
0 false
1 true
## formula
$s(102)
## hash index
24
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
25
## name
obstacle-at(x2, y17)
## number of values
2
## values
0 false
1 true
## formula
$s(103)
## hash index
25
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
26
## name
obstacle-at(x2, y18)
## number of values
2
## values
0 false
1 true
## formula
$s(104)
## hash index
26
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
27
## name
obstacle-at(x2, y19)
## number of values
2
## values
0 false
1 true
## formula
$s(105)
## hash index
27
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
28
## name
obstacle-at(x2, y2)
## number of values
2
## values
0 false
1 true
## formula
$s(106)
## hash index
28
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
29
## name
obstacle-at(x2, y3)
## number of values
2
## values
0 false
1 true
## formula
$s(107)
## hash index
29
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
30
## name
obstacle-at(x2, y4)
## number of values
2
## values
0 false
1 true
## formula
$s(108)
## hash index
30
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
31
## name
obstacle-at(x2, y5)
## number of values
2
## values
0 false
1 true
## formula
$s(109)
## hash index
31
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
32
## name
obstacle-at(x2, y6)
## number of values
2
## values
0 false
1 true
## formula
$s(110)
## hash index
32
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
33
## name
obstacle-at(x2, y7)
## number of values
2
## values
0 false
1 true
## formula
$s(111)
## hash index
33
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
34
## name
obstacle-at(x2, y8)
## number of values
2
## values
0 false
1 true
## formula
$s(112)
## hash index
34
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
35
## name
obstacle-at(x2, y9)
## number of values
2
## values
0 false
1 true
## formula
$s(113)
## hash index
35
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
36
## name
robot-at(x1, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(36)) : $c(0)) (and($a(2) $s(47) ~($s(10))) : $c(1)) (and($a(0) $s(36)) : $c(0)) (and($a(3) $s(56)) : $c(1)) ($c(1) : $s(36)) )
## hash index
36
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
37
## name
robot-at(x1, y10)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(55) ~($s(17))) : $c(1)) (and($a(1) $s(37)) : $c(0)) (and($a(2) $s(38) ~($s(1))) : $c(1)) (and($a(2) $s(37)) : $c(0)) (and($a(0) $s(37)) : $c(0)) (and($a(3) $s(57) ~($s(18))) : $c(1)) ($c(1) : and($s(37) ~($s(0)))) )
## hash index
37
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
38
## name
robot-at(x1, y11)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(37) ~($s(0))) : $c(1)) (and($a(1) $s(38)) : $c(0)) (and($a(2) $s(39) ~($s(2))) : $c(1)) (and($a(2) $s(38)) : $c(0)) (and($a(0) $s(38)) : $c(0)) (and($a(3) $s(58) ~($s(19))) : $c(1)) ($c(1) : and($s(38) ~($s(1)))) )
## hash index
38
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
39
## name
robot-at(x1, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(38) ~($s(1))) : $c(1)) (and($a(1) $s(39)) : $c(0)) (and($a(2) $s(40) ~($s(3))) : $c(1)) (and($a(2) $s(39)) : $c(0)) (and($a(0) $s(39)) : $c(0)) (and($a(3) $s(59) ~($s(20))) : $c(1)) ($c(1) : and($s(39) ~($s(2)))) )
## hash index
39
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
40
## name
robot-at(x1, y13)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(39) ~($s(2))) : $c(1)) (and($a(1) $s(40)) : $c(0)) (and($a(2) $s(41) ~($s(4))) : $c(1)) (and($a(2) $s(40)) : $c(0)) (and($a(0) $s(40)) : $c(0)) (and($a(3) $s(60) ~($s(21))) : $c(1)) ($c(1) : and($s(40) ~($s(3)))) )
## hash index
40
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
41
## name
robot-at(x1, y14)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(40) ~($s(3))) : $c(1)) (and($a(1) $s(41)) : $c(0)) (and($a(2) $s(42) ~($s(5))) : $c(1)) (and($a(2) $s(41)) : $c(0)) (and($a(0) $s(41)) : $c(0)) (and($a(3) $s(61) ~($s(22))) : $c(1)) ($c(1) : and($s(41) ~($s(4)))) )
## hash index
41
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
42
## name
robot-at(x1, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(41) ~($s(4))) : $c(1)) (and($a(1) $s(42)) : $c(0)) (and($a(2) $s(43) ~($s(6))) : $c(1)) (and($a(2) $s(42)) : $c(0)) (and($a(0) $s(42)) : $c(0)) (and($a(3) $s(62) ~($s(23))) : $c(1)) ($c(1) : and($s(42) ~($s(5)))) )
## hash index
42
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
43
## name
robot-at(x1, y16)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(42) ~($s(5))) : $c(1)) (and($a(1) $s(43)) : $c(0)) (and($a(2) $s(44) ~($s(7))) : $c(1)) (and($a(2) $s(43)) : $c(0)) (and($a(0) $s(43)) : $c(0)) (and($a(3) $s(63) ~($s(24))) : $c(1)) ($c(1) : and($s(43) ~($s(6)))) )
## hash index
43
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
44
## name
robot-at(x1, y17)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(43) ~($s(6))) : $c(1)) (and($a(1) $s(44)) : $c(0)) (and($a(2) $s(45) ~($s(8))) : $c(1)) (and($a(2) $s(44)) : $c(0)) (and($a(0) $s(44)) : $c(0)) (and($a(3) $s(64) ~($s(25))) : $c(1)) ($c(1) : and($s(44) ~($s(7)))) )
## hash index
44
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
45
## name
robot-at(x1, y18)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(44) ~($s(7))) : $c(1)) (and($a(1) $s(45)) : $c(0)) (and($a(2) $s(46) ~($s(9))) : $c(1)) (and($a(2) $s(45)) : $c(0)) (and($a(0) $s(45)) : $c(0)) (and($a(3) $s(65) ~($s(26))) : $c(1)) ($c(1) : and($s(45) ~($s(8)))) )
## hash index
45
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
46
## name
robot-at(x1, y19)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(45) ~($s(8))) : $c(1)) (and($a(1) $s(46)) : $c(0)) (and($a(2) $s(48)) : $c(1)) (and($a(2) $s(46)) : $c(0)) (and($a(0) $s(46)) : $c(0)) (and($a(3) $s(66) ~($s(27))) : $c(1)) ($c(1) : and($s(46) ~($s(9)))) )
## hash index
46
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
47
## name
robot-at(x1, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(36)) : $c(1)) (and($a(1) $s(47)) : $c(0)) (and($a(2) $s(49) ~($s(11))) : $c(1)) (and($a(2) $s(47)) : $c(0)) (and($a(0) $s(47)) : $c(0)) (and($a(3) $s(67) ~($s(28))) : $c(1)) ($c(1) : and($s(47) ~($s(10)))) )
## hash index
47
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
48
## name
robot-at(x1, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(46) ~($s(9))) : $c(1)) (and($a(2) $s(48)) : $c(0)) (and($a(0) $s(48)) : $c(0)) (and($a(3) $s(68)) : $c(1)) ($c(1) : $s(48)) )
## hash index
48
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
49
## name
robot-at(x1, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(47) ~($s(10))) : $c(1)) (and($a(1) $s(49)) : $c(0)) (and($a(2) $s(50) ~($s(12))) : $c(1)) (and($a(2) $s(49)) : $c(0)) (and($a(0) $s(49)) : $c(0)) (and($a(3) $s(69) ~($s(29))) : $c(1)) ($c(1) : and($s(49) ~($s(11)))) )
## hash index
49
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
50
## name
robot-at(x1, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(49) ~($s(11))) : $c(1)) (and($a(1) $s(50)) : $c(0)) (and($a(2) $s(51) ~($s(13))) : $c(1)) (and($a(2) $s(50)) : $c(0)) (and($a(0) $s(50)) : $c(0)) (and($a(3) $s(70) ~($s(30))) : $c(1)) ($c(1) : and($s(50) ~($s(12)))) )
## hash index
50
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
51
## name
robot-at(x1, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(50) ~($s(12))) : $c(1)) (and($a(1) $s(51)) : $c(0)) (and($a(2) $s(52) ~($s(14))) : $c(1)) (and($a(2) $s(51)) : $c(0)) (and($a(0) $s(51)) : $c(0)) (and($a(3) $s(71) ~($s(31))) : $c(1)) ($c(1) : and($s(51) ~($s(13)))) )
## hash index
51
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
52
## name
robot-at(x1, y6)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(51) ~($s(13))) : $c(1)) (and($a(1) $s(52)) : $c(0)) (and($a(2) $s(53) ~($s(15))) : $c(1)) (and($a(2) $s(52)) : $c(0)) (and($a(0) $s(52)) : $c(0)) (and($a(3) $s(72) ~($s(32))) : $c(1)) ($c(1) : and($s(52) ~($s(14)))) )
## hash index
52
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
53
## name
robot-at(x1, y7)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(52) ~($s(14))) : $c(1)) (and($a(1) $s(53)) : $c(0)) (and($a(2) $s(54) ~($s(16))) : $c(1)) (and($a(2) $s(53)) : $c(0)) (and($a(0) $s(53)) : $c(0)) (and($a(3) $s(73) ~($s(33))) : $c(1)) ($c(1) : and($s(53) ~($s(15)))) )
## hash index
53
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
54
## name
robot-at(x1, y8)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(53) ~($s(15))) : $c(1)) (and($a(1) $s(54)) : $c(0)) (and($a(2) $s(55) ~($s(17))) : $c(1)) (and($a(2) $s(54)) : $c(0)) (and($a(0) $s(54)) : $c(0)) (and($a(3) $s(74) ~($s(34))) : $c(1)) ($c(1) : and($s(54) ~($s(16)))) )
## hash index
54
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
55
## name
robot-at(x1, y9)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(54) ~($s(16))) : $c(1)) (and($a(1) $s(55)) : $c(0)) (and($a(2) $s(37) ~($s(0))) : $c(1)) (and($a(2) $s(55)) : $c(0)) (and($a(0) $s(55)) : $c(0)) (and($a(3) $s(75) ~($s(35))) : $c(1)) ($c(1) : and($s(55) ~($s(17)))) )
## hash index
55
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
56
## name
robot-at(x2, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(56)) : $c(0)) (and($a(2) $s(67) ~($s(28))) : $c(1)) (and($a(0) $s(36)) : $c(1)) (and($a(0) $s(56)) : $c(0)) (and($a(3) $s(76)) : $c(1)) (and($a(3) $s(56)) : $c(0)) ($c(1) : $s(56)) )
## hash index
56
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
57
## name
robot-at(x2, y10)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(75) ~($s(35))) : $c(1)) (and($a(1) $s(57)) : $c(0)) (and($a(2) $s(58) ~($s(19))) : $c(1)) (and($a(2) $s(57)) : $c(0)) (and($a(0) $s(37) ~($s(0))) : $c(1)) (and($a(0) $s(57)) : $c(0)) (and($a(3) $s(77) ~($s(96))) : $c(1)) (and($a(3) $s(57)) : $c(0)) ($c(1) : and($s(57) ~($s(18)))) )
## hash index
57
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
58
## name
robot-at(x2, y11)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(57) ~($s(18))) : $c(1)) (and($a(1) $s(58)) : $c(0)) (and($a(2) $s(59) ~($s(20))) : $c(1)) (and($a(2) $s(58)) : $c(0)) (and($a(0) $s(38) ~($s(1))) : $c(1)) (and($a(0) $s(58)) : $c(0)) (and($a(3) $s(78) ~($s(97))) : $c(1)) (and($a(3) $s(58)) : $c(0)) ($c(1) : and($s(58) ~($s(19)))) )
## hash index
58
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
59
## name
robot-at(x2, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(58) ~($s(19))) : $c(1)) (and($a(1) $s(59)) : $c(0)) (and($a(2) $s(60) ~($s(21))) : $c(1)) (and($a(2) $s(59)) : $c(0)) (and($a(0) $s(39) ~($s(2))) : $c(1)) (and($a(0) $s(59)) : $c(0)) (and($a(3) $s(79) ~($s(98))) : $c(1)) (and($a(3) $s(59)) : $c(0)) ($c(1) : and($s(59) ~($s(20)))) )
## hash index
59
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
60
## name
robot-at(x2, y13)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(59) ~($s(20))) : $c(1)) (and($a(1) $s(60)) : $c(0)) (and($a(2) $s(61) ~($s(22))) : $c(1)) (and($a(2) $s(60)) : $c(0)) (and($a(0) $s(40) ~($s(3))) : $c(1)) (and($a(0) $s(60)) : $c(0)) (and($a(3) $s(80) ~($s(99))) : $c(1)) (and($a(3) $s(60)) : $c(0)) ($c(1) : and($s(60) ~($s(21)))) )
## hash index
60
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
61
## name
robot-at(x2, y14)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(60) ~($s(21))) : $c(1)) (and($a(1) $s(61)) : $c(0)) (and($a(2) $s(62) ~($s(23))) : $c(1)) (and($a(2) $s(61)) : $c(0)) (and($a(0) $s(41) ~($s(4))) : $c(1)) (and($a(0) $s(61)) : $c(0)) (and($a(3) $s(81) ~($s(100))) : $c(1)) (and($a(3) $s(61)) : $c(0)) ($c(1) : and($s(61) ~($s(22)))) )
## hash index
61
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
62
## name
robot-at(x2, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(61) ~($s(22))) : $c(1)) (and($a(1) $s(62)) : $c(0)) (and($a(2) $s(63) ~($s(24))) : $c(1)) (and($a(2) $s(62)) : $c(0)) (and($a(0) $s(42) ~($s(5))) : $c(1)) (and($a(0) $s(62)) : $c(0)) (and($a(3) $s(82) ~($s(101))) : $c(1)) (and($a(3) $s(62)) : $c(0)) ($c(1) : and($s(62) ~($s(23)))) )
## hash index
62
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
63
## name
robot-at(x2, y16)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(62) ~($s(23))) : $c(1)) (and($a(1) $s(63)) : $c(0)) (and($a(2) $s(64) ~($s(25))) : $c(1)) (and($a(2) $s(63)) : $c(0)) (and($a(0) $s(43) ~($s(6))) : $c(1)) (and($a(0) $s(63)) : $c(0)) (and($a(3) $s(83) ~($s(102))) : $c(1)) (and($a(3) $s(63)) : $c(0)) ($c(1) : and($s(63) ~($s(24)))) )
## hash index
63
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
64
## name
robot-at(x2, y17)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(63) ~($s(24))) : $c(1)) (and($a(1) $s(64)) : $c(0)) (and($a(2) $s(65) ~($s(26))) : $c(1)) (and($a(2) $s(64)) : $c(0)) (and($a(0) $s(44) ~($s(7))) : $c(1)) (and($a(0) $s(64)) : $c(0)) (and($a(3) $s(84) ~($s(103))) : $c(1)) (and($a(3) $s(64)) : $c(0)) ($c(1) : and($s(64) ~($s(25)))) )
## hash index
64
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
65
## name
robot-at(x2, y18)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(64) ~($s(25))) : $c(1)) (and($a(1) $s(65)) : $c(0)) (and($a(2) $s(66) ~($s(27))) : $c(1)) (and($a(2) $s(65)) : $c(0)) (and($a(0) $s(45) ~($s(8))) : $c(1)) (and($a(0) $s(65)) : $c(0)) (and($a(3) $s(85) ~($s(104))) : $c(1)) (and($a(3) $s(65)) : $c(0)) ($c(1) : and($s(65) ~($s(26)))) )
## hash index
65
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
66
## name
robot-at(x2, y19)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(65) ~($s(26))) : $c(1)) (and($a(1) $s(66)) : $c(0)) (and($a(2) $s(68)) : $c(1)) (and($a(2) $s(66)) : $c(0)) (and($a(0) $s(46) ~($s(9))) : $c(1)) (and($a(0) $s(66)) : $c(0)) (and($a(3) $s(86) ~($s(105))) : $c(1)) (and($a(3) $s(66)) : $c(0)) ($c(1) : and($s(66) ~($s(27)))) )
## hash index
66
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
67
## name
robot-at(x2, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(56)) : $c(1)) (and($a(1) $s(67)) : $c(0)) (and($a(2) $s(69) ~($s(29))) : $c(1)) (and($a(2) $s(67)) : $c(0)) (and($a(0) $s(47) ~($s(10))) : $c(1)) (and($a(0) $s(67)) : $c(0)) (and($a(3) $s(87) ~($s(106))) : $c(1)) (and($a(3) $s(67)) : $c(0)) ($c(1) : and($s(67) ~($s(28)))) )
## hash index
67
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
68
## name
robot-at(x2, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(66) ~($s(27))) : $c(1)) (and($a(2) $s(68)) : $c(0)) (and($a(0) $s(48)) : $c(1)) (and($a(0) $s(68)) : $c(0)) (and($a(3) $s(88)) : $c(1)) (and($a(3) $s(68)) : $c(0)) ($c(1) : $s(68)) )
## hash index
68
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
69
## name
robot-at(x2, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(67) ~($s(28))) : $c(1)) (and($a(1) $s(69)) : $c(0)) (and($a(2) $s(70) ~($s(30))) : $c(1)) (and($a(2) $s(69)) : $c(0)) (and($a(0) $s(49) ~($s(11))) : $c(1)) (and($a(0) $s(69)) : $c(0)) (and($a(3) $s(89) ~($s(107))) : $c(1)) (and($a(3) $s(69)) : $c(0)) ($c(1) : and($s(69) ~($s(29)))) )
## hash index
69
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
70
## name
robot-at(x2, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(69) ~($s(29))) : $c(1)) (and($a(1) $s(70)) : $c(0)) (and($a(2) $s(71) ~($s(31))) : $c(1)) (and($a(2) $s(70)) : $c(0)) (and($a(0) $s(50) ~($s(12))) : $c(1)) (and($a(0) $s(70)) : $c(0)) (and($a(3) $s(90) ~($s(108))) : $c(1)) (and($a(3) $s(70)) : $c(0)) ($c(1) : and($s(70) ~($s(30)))) )
## hash index
70
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
71
## name
robot-at(x2, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(70) ~($s(30))) : $c(1)) (and($a(1) $s(71)) : $c(0)) (and($a(2) $s(72) ~($s(32))) : $c(1)) (and($a(2) $s(71)) : $c(0)) (and($a(0) $s(51) ~($s(13))) : $c(1)) (and($a(0) $s(71)) : $c(0)) (and($a(3) $s(91) ~($s(109))) : $c(1)) (and($a(3) $s(71)) : $c(0)) ($c(1) : and($s(71) ~($s(31)))) )
## hash index
71
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
72
## name
robot-at(x2, y6)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(71) ~($s(31))) : $c(1)) (and($a(1) $s(72)) : $c(0)) (and($a(2) $s(73) ~($s(33))) : $c(1)) (and($a(2) $s(72)) : $c(0)) (and($a(0) $s(52) ~($s(14))) : $c(1)) (and($a(0) $s(72)) : $c(0)) (and($a(3) $s(92) ~($s(110))) : $c(1)) (and($a(3) $s(72)) : $c(0)) ($c(1) : and($s(72) ~($s(32)))) )
## hash index
72
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
73
## name
robot-at(x2, y7)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(72) ~($s(32))) : $c(1)) (and($a(1) $s(73)) : $c(0)) (and($a(2) $s(74) ~($s(34))) : $c(1)) (and($a(2) $s(73)) : $c(0)) (and($a(0) $s(53) ~($s(15))) : $c(1)) (and($a(0) $s(73)) : $c(0)) (and($a(3) $s(93) ~($s(111))) : $c(1)) (and($a(3) $s(73)) : $c(0)) ($c(1) : and($s(73) ~($s(33)))) )
## hash index
73
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
74
## name
robot-at(x2, y8)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(73) ~($s(33))) : $c(1)) (and($a(1) $s(74)) : $c(0)) (and($a(2) $s(75) ~($s(35))) : $c(1)) (and($a(2) $s(74)) : $c(0)) (and($a(0) $s(54) ~($s(16))) : $c(1)) (and($a(0) $s(74)) : $c(0)) (and($a(3) $s(94) ~($s(112))) : $c(1)) (and($a(3) $s(74)) : $c(0)) ($c(1) : and($s(74) ~($s(34)))) )
## hash index
74
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
75
## name
robot-at(x2, y9)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(74) ~($s(34))) : $c(1)) (and($a(1) $s(75)) : $c(0)) (and($a(2) $s(57) ~($s(18))) : $c(1)) (and($a(2) $s(75)) : $c(0)) (and($a(0) $s(55) ~($s(17))) : $c(1)) (and($a(0) $s(75)) : $c(0)) (and($a(3) $s(95) ~($s(113))) : $c(1)) (and($a(3) $s(75)) : $c(0)) ($c(1) : and($s(75) ~($s(35)))) )
## hash index
75
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
76
## name
robot-at(x3, y1)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(76)) : $c(0)) (and($a(2) $s(87) ~($s(106))) : $c(1)) (and($a(0) $s(56)) : $c(1)) (and($a(3) $s(76)) : $c(0)) ($c(1) : $s(76)) )
## hash index
76
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
77
## name
robot-at(x3, y10)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(95) ~($s(113))) : $c(1)) (and($a(1) $s(77)) : $c(0)) (and($a(2) $s(78) ~($s(97))) : $c(1)) (and($a(2) $s(77)) : $c(0)) (and($a(0) $s(57) ~($s(18))) : $c(1)) (and($a(3) $s(77)) : $c(0)) ($c(1) : and($s(77) ~($s(96)))) )
## hash index
77
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
78
## name
robot-at(x3, y11)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(77) ~($s(96))) : $c(1)) (and($a(1) $s(78)) : $c(0)) (and($a(2) $s(79) ~($s(98))) : $c(1)) (and($a(2) $s(78)) : $c(0)) (and($a(0) $s(58) ~($s(19))) : $c(1)) (and($a(3) $s(78)) : $c(0)) ($c(1) : and($s(78) ~($s(97)))) )
## hash index
78
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
79
## name
robot-at(x3, y12)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(78) ~($s(97))) : $c(1)) (and($a(1) $s(79)) : $c(0)) (and($a(2) $s(80) ~($s(99))) : $c(1)) (and($a(2) $s(79)) : $c(0)) (and($a(0) $s(59) ~($s(20))) : $c(1)) (and($a(3) $s(79)) : $c(0)) ($c(1) : and($s(79) ~($s(98)))) )
## hash index
79
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
80
## name
robot-at(x3, y13)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(79) ~($s(98))) : $c(1)) (and($a(1) $s(80)) : $c(0)) (and($a(2) $s(81) ~($s(100))) : $c(1)) (and($a(2) $s(80)) : $c(0)) (and($a(0) $s(60) ~($s(21))) : $c(1)) (and($a(3) $s(80)) : $c(0)) ($c(1) : and($s(80) ~($s(99)))) )
## hash index
80
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
81
## name
robot-at(x3, y14)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(80) ~($s(99))) : $c(1)) (and($a(1) $s(81)) : $c(0)) (and($a(2) $s(82) ~($s(101))) : $c(1)) (and($a(2) $s(81)) : $c(0)) (and($a(0) $s(61) ~($s(22))) : $c(1)) (and($a(3) $s(81)) : $c(0)) ($c(1) : and($s(81) ~($s(100)))) )
## hash index
81
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
82
## name
robot-at(x3, y15)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(81) ~($s(100))) : $c(1)) (and($a(1) $s(82)) : $c(0)) (and($a(2) $s(83) ~($s(102))) : $c(1)) (and($a(2) $s(82)) : $c(0)) (and($a(0) $s(62) ~($s(23))) : $c(1)) (and($a(3) $s(82)) : $c(0)) ($c(1) : and($s(82) ~($s(101)))) )
## hash index
82
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
83
## name
robot-at(x3, y16)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(82) ~($s(101))) : $c(1)) (and($a(1) $s(83)) : $c(0)) (and($a(2) $s(84) ~($s(103))) : $c(1)) (and($a(2) $s(83)) : $c(0)) (and($a(0) $s(63) ~($s(24))) : $c(1)) (and($a(3) $s(83)) : $c(0)) ($c(1) : and($s(83) ~($s(102)))) )
## hash index
83
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
84
## name
robot-at(x3, y17)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(83) ~($s(102))) : $c(1)) (and($a(1) $s(84)) : $c(0)) (and($a(2) $s(85) ~($s(104))) : $c(1)) (and($a(2) $s(84)) : $c(0)) (and($a(0) $s(64) ~($s(25))) : $c(1)) (and($a(3) $s(84)) : $c(0)) ($c(1) : and($s(84) ~($s(103)))) )
## hash index
84
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
85
## name
robot-at(x3, y18)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(84) ~($s(103))) : $c(1)) (and($a(1) $s(85)) : $c(0)) (and($a(2) $s(86) ~($s(105))) : $c(1)) (and($a(2) $s(85)) : $c(0)) (and($a(0) $s(65) ~($s(26))) : $c(1)) (and($a(3) $s(85)) : $c(0)) ($c(1) : and($s(85) ~($s(104)))) )
## hash index
85
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
86
## name
robot-at(x3, y19)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(85) ~($s(104))) : $c(1)) (and($a(1) $s(86)) : $c(0)) (and($a(2) $s(88)) : $c(1)) (and($a(2) $s(86)) : $c(0)) (and($a(0) $s(66) ~($s(27))) : $c(1)) (and($a(3) $s(86)) : $c(0)) ($c(1) : and($s(86) ~($s(105)))) )
## hash index
86
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
87
## name
robot-at(x3, y2)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(76)) : $c(1)) (and($a(1) $s(87)) : $c(0)) (and($a(2) $s(89) ~($s(107))) : $c(1)) (and($a(2) $s(87)) : $c(0)) (and($a(0) $s(67) ~($s(28))) : $c(1)) (and($a(3) $s(87)) : $c(0)) ($c(1) : and($s(87) ~($s(106)))) )
## hash index
87
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
88
## name
robot-at(x3, y20)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(1)) ($s(88) : $c(0)) (and($a(1) $s(86) ~($s(105))) : $c(1)) (and($a(2) $s(88)) : $c(0)) (and($a(0) $s(68)) : $c(1)) (and($a(3) $s(88)) : $c(0)) ($c(1) : $s(88)) )
## hash index
88
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
89
## name
robot-at(x3, y3)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(87) ~($s(106))) : $c(1)) (and($a(1) $s(89)) : $c(0)) (and($a(2) $s(90) ~($s(108))) : $c(1)) (and($a(2) $s(89)) : $c(0)) (and($a(0) $s(69) ~($s(29))) : $c(1)) (and($a(3) $s(89)) : $c(0)) ($c(1) : and($s(89) ~($s(107)))) )
## hash index
89
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
90
## name
robot-at(x3, y4)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(89) ~($s(107))) : $c(1)) (and($a(1) $s(90)) : $c(0)) (and($a(2) $s(91) ~($s(109))) : $c(1)) (and($a(2) $s(90)) : $c(0)) (and($a(0) $s(70) ~($s(30))) : $c(1)) (and($a(3) $s(90)) : $c(0)) ($c(1) : and($s(90) ~($s(108)))) )
## hash index
90
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
91
## name
robot-at(x3, y5)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(90) ~($s(108))) : $c(1)) (and($a(1) $s(91)) : $c(0)) (and($a(2) $s(92) ~($s(110))) : $c(1)) (and($a(2) $s(91)) : $c(0)) (and($a(0) $s(71) ~($s(31))) : $c(1)) (and($a(3) $s(91)) : $c(0)) ($c(1) : and($s(91) ~($s(109)))) )
## hash index
91
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
92
## name
robot-at(x3, y6)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(91) ~($s(109))) : $c(1)) (and($a(1) $s(92)) : $c(0)) (and($a(2) $s(93) ~($s(111))) : $c(1)) (and($a(2) $s(92)) : $c(0)) (and($a(0) $s(72) ~($s(32))) : $c(1)) (and($a(3) $s(92)) : $c(0)) ($c(1) : and($s(92) ~($s(110)))) )
## hash index
92
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
93
## name
robot-at(x3, y7)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(92) ~($s(110))) : $c(1)) (and($a(1) $s(93)) : $c(0)) (and($a(2) $s(94) ~($s(112))) : $c(1)) (and($a(2) $s(93)) : $c(0)) (and($a(0) $s(73) ~($s(33))) : $c(1)) (and($a(3) $s(93)) : $c(0)) ($c(1) : and($s(93) ~($s(111)))) )
## hash index
93
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
94
## name
robot-at(x3, y8)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(93) ~($s(111))) : $c(1)) (and($a(1) $s(94)) : $c(0)) (and($a(2) $s(95) ~($s(113))) : $c(1)) (and($a(2) $s(94)) : $c(0)) (and($a(0) $s(74) ~($s(34))) : $c(1)) (and($a(3) $s(94)) : $c(0)) ($c(1) : and($s(94) ~($s(112)))) )
## hash index
94
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4

## index
95
## name
robot-at(x3, y9)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(88) : $c(0)) (and($a(1) $s(94) ~($s(112))) : $c(1)) (and($a(1) $s(95)) : $c(0)) (and($a(2) $s(77) ~($s(96))) : $c(1)) (and($a(2) $s(95)) : $c(0)) (and($a(0) $s(75) ~($s(35))) : $c(1)) (and($a(3) $s(95)) : $c(0)) ($c(1) : and($s(95) ~($s(113)))) )
## hash index
95
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4



#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
obstacle-at(x3, y10)
## number of values
2
## values
0 false
1 true
## formula
Bernoulli($c(0.2))
## hash index
96
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
1
## name
obstacle-at(x3, y11)
## number of values
2
## values
0 false
1 true
## formula
Bernoulli($c(0.2))
## hash index
97
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
2
## name
obstacle-at(x3, y12)
## number of values
2
## values
0 false
1 true
## formula
Bernoulli($c(0.2))
## hash index
98
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
3
## name
obstacle-at(x3, y13)
## number of values
2
## values
0 false
1 true
## formula
Bernoulli($c(0.2))
## hash index
99
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
4
## name
obstacle-at(x3, y14)
## number of values
2
## values
0 false
1 true
## formula
Bernoulli($c(0.2))
## hash index
100
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
5
## name
obstacle-at(x3, y15)
## number of values
2
## values
0 false
1 true
## formula
Bernoulli($c(0.2))
## hash index
101
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
6
## name
obstacle-at(x3, y16)
## number of values
2
## values
0 false
1 true
## formula
Bernoulli($c(0.2))
## hash index
102
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
7
## name
obstacle-at(x3, y17)
## number of values
2
## values
0 false
1 true
## formula
Bernoulli($c(0.2))
## hash index
103
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
8
## name
obstacle-at(x3, y18)
## number of values
2
## values
0 false
1 true
## formula
Bernoulli($c(0.2))
## hash index
104
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
9
## name
obstacle-at(x3, y19)
## number of values
2
## values
0 false
1 true
## formula
Bernoulli($c(0.2))
## hash index
105
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
10
## name
obstacle-at(x3, y2)
## number of values
2
## values
0 false
1 true
## formula
Bernoulli($c(0.2))
## hash index
106
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
11
## name
obstacle-at(x3, y3)
## number of values
2
## values
0 false
1 true
## formula
Bernoulli($c(0.2))
## hash index
107
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
12
## name
obstacle-at(x3, y4)
## number of values
2
## values
0 false
1 true
## formula
Bernoulli($c(0.2))
## hash index
108
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
13
## name
obstacle-at(x3, y5)
## number of values
2
## values
0 false
1 true
## formula
Bernoulli($c(0.2))
## hash index
109
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
14
## name
obstacle-at(x3, y6)
## number of values
2
## values
0 false
1 true
## formula
Bernoulli($c(0.2))
## hash index
110
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
15
## name
obstacle-at(x3, y7)
## number of values
2
## values
0 false
1 true
## formula
Bernoulli($c(0.2))
## hash index
111
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
16
## name
obstacle-at(x3, y8)
## number of values
2
## values
0 false
1 true
## formula
Bernoulli($c(0.2))
## hash index
112
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0

## index
17
## name
obstacle-at(x3, y9)
## number of values
2
## values
0 false
1 true
## formula
Bernoulli($c(0.2))
## hash index
113
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0



#####REWARD#####
## formula
-($c(0) ~($s(88)))
## min
-1
## max
0
## independent from actions
1
## hash index
114
## caching type
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 1 0 0 
## relevant preconditions
0


## index
4
## state
1 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####
## index
0

## state fluent hash keys (first line is the number of keys)
4
37 5
38 5
55 5
57 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
1

## state fluent hash keys (first line is the number of keys)
4
37 10
38 10
39 5
58 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
2

## state fluent hash keys (first line is the number of keys)
4
38 20
39 10
40 5
59 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
3

## state fluent hash keys (first line is the number of keys)
4
39 20
40 10
41 5
60 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
4

## state fluent hash keys (first line is the number of keys)
4
40 20
41 10
42 5
61 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
5

## state fluent hash keys (first line is the number of keys)
4
41 20
42 10
43 5
62 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
6

## state fluent hash keys (first line is the number of keys)
4
42 20
43 10
44 5
63 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
7

## state fluent hash keys (first line is the number of keys)
4
43 20
44 10
45 5
64 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
8

## state fluent hash keys (first line is the number of keys)
4
44 20
45 10
46 5
65 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
9

## state fluent hash keys (first line is the number of keys)
4
45 20
46 10
48 5
66 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
10

## state fluent hash keys (first line is the number of keys)
4
36 5
47 5
49 5
67 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
11

## state fluent hash keys (first line is the number of keys)
4
47 10
49 10
50 5
69 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
12

## state fluent hash keys (first line is the number of keys)
4
49 20
50 10
51 5
70 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
13

## state fluent hash keys (first line is the number of keys)
4
50 20
51 10
52 5
71 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
14

## state fluent hash keys (first line is the number of keys)
4
51 20
52 10
53 5
72 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
15

## state fluent hash keys (first line is the number of keys)
4
52 20
53 10
54 5
73 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
16

## state fluent hash keys (first line is the number of keys)
4
53 20
54 10
55 10
74 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
17

## state fluent hash keys (first line is the number of keys)
4
37 20
54 20
55 20
75 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
18

## state fluent hash keys (first line is the number of keys)
6
0 1
37 40
57 10
58 10
75 10
77 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
19

## state fluent hash keys (first line is the number of keys)
6
1 1
38 40
57 20
58 20
59 10
78 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
20

## state fluent hash keys (first line is the number of keys)
6
2 1
39 40
58 40
59 20
60 10
79 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
21

## state fluent hash keys (first line is the number of keys)
6
3 1
40 40
59 40
60 20
61 10
80 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
22

## state fluent hash keys (first line is the number of keys)
6
4 1
41 40
60 40
61 20
62 10
81 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
23

## state fluent hash keys (first line is the number of keys)
6
5 1
42 40
61 40
62 20
63 10
82 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
24

## state fluent hash keys (first line is the number of keys)
6
6 1
43 40
62 40
63 20
64 10
83 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
25

## state fluent hash keys (first line is the number of keys)
6
7 1
44 40
63 40
64 20
65 10
84 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
26

## state fluent hash keys (first line is the number of keys)
6
8 1
45 40
64 40
65 20
66 10
85 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
27

## state fluent hash keys (first line is the number of keys)
6
9 1
46 20
65 40
66 20
68 5
86 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
28

## state fluent hash keys (first line is the number of keys)
6
10 1
47 20
56 5
67 10
69 10
87 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
29

## state fluent hash keys (first line is the number of keys)
6
11 1
49 40
67 20
69 20
70 10
89 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
30

## state fluent hash keys (first line is the number of keys)
6
12 1
50 40
69 40
70 20
71 10
90 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
31

## state fluent hash keys (first line is the number of keys)
6
13 1
51 40
70 40
71 20
72 10
91 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
32

## state fluent hash keys (first line is the number of keys)
6
14 1
52 40
71 40
72 20
73 10
92 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
33

## state fluent hash keys (first line is the number of keys)
6
15 1
53 40
72 40
73 20
74 10
93 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
34

## state fluent hash keys (first line is the number of keys)
6
16 1
54 40
73 40
74 20
75 20
94 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
35

## state fluent hash keys (first line is the number of keys)
6
17 1
55 40
57 40
74 40
75 40
95 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
36

## state fluent hash keys (first line is the number of keys)
3
36 10
47 40
56 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
37

## state fluent hash keys (first line is the number of keys)
4
37 80
38 80
55 80
57 80
## kleene state fluent hash keys (first line is the number of keys)
0

## index
38

## state fluent hash keys (first line is the number of keys)
4
37 160
38 160
39 80
58 80
## kleene state fluent hash keys (first line is the number of keys)
0

## index
39

## state fluent hash keys (first line is the number of keys)
4
38 320
39 160
40 80
59 80
## kleene state fluent hash keys (first line is the number of keys)
0

## index
40

## state fluent hash keys (first line is the number of keys)
4
39 320
40 160
41 80
60 80
## kleene state fluent hash keys (first line is the number of keys)
0

## index
41

## state fluent hash keys (first line is the number of keys)
4
40 320
41 160
42 80
61 80
## kleene state fluent hash keys (first line is the number of keys)
0

## index
42

## state fluent hash keys (first line is the number of keys)
4
41 320
42 160
43 80
62 80
## kleene state fluent hash keys (first line is the number of keys)
0

## index
43

## state fluent hash keys (first line is the number of keys)
4
42 320
43 160
44 80
63 80
## kleene state fluent hash keys (first line is the number of keys)
0

## index
44

## state fluent hash keys (first line is the number of keys)
4
43 320
44 160
45 80
64 80
## kleene state fluent hash keys (first line is the number of keys)
0

## index
45

## state fluent hash keys (first line is the number of keys)
4
44 320
45 160
46 40
65 80
## kleene state fluent hash keys (first line is the number of keys)
0

## index
46

## state fluent hash keys (first line is the number of keys)
4
45 320
46 80
48 10
66 40
## kleene state fluent hash keys (first line is the number of keys)
0

## index
47

## state fluent hash keys (first line is the number of keys)
4
36 20
47 80
49 80
67 40
## kleene state fluent hash keys (first line is the number of keys)
0

## index
48

## state fluent hash keys (first line is the number of keys)
3
46 160
48 20
68 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
49

## state fluent hash keys (first line is the number of keys)
4
47 160
49 160
50 80
69 80
## kleene state fluent hash keys (first line is the number of keys)
0

## index
50

## state fluent hash keys (first line is the number of keys)
4
49 320
50 160
51 80
70 80
## kleene state fluent hash keys (first line is the number of keys)
0

## index
51

## state fluent hash keys (first line is the number of keys)
4
50 320
51 160
52 80
71 80
## kleene state fluent hash keys (first line is the number of keys)
0

## index
52

## state fluent hash keys (first line is the number of keys)
4
51 320
52 160
53 80
72 80
## kleene state fluent hash keys (first line is the number of keys)
0

## index
53

## state fluent hash keys (first line is the number of keys)
4
52 320
53 160
54 80
73 80
## kleene state fluent hash keys (first line is the number of keys)
0

## index
54

## state fluent hash keys (first line is the number of keys)
4
53 320
54 160
55 160
74 80
## kleene state fluent hash keys (first line is the number of keys)
0

## index
55

## state fluent hash keys (first line is the number of keys)
4
37 320
54 320
55 320
75 80
## kleene state fluent hash keys (first line is the number of keys)
0

## index
56

## state fluent hash keys (first line is the number of keys)
4
36 40
56 20
67 80
76 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
57

## state fluent hash keys (first line is the number of keys)
5
37 640
57 160
58 160
75 160
77 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
58

## state fluent hash keys (first line is the number of keys)
5
38 640
57 320
58 320
59 160
78 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
59

## state fluent hash keys (first line is the number of keys)
5
39 640
58 640
59 320
60 160
79 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
60

## state fluent hash keys (first line is the number of keys)
5
40 640
59 640
60 320
61 160
80 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
61

## state fluent hash keys (first line is the number of keys)
5
41 640
60 640
61 320
62 160
81 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
62

## state fluent hash keys (first line is the number of keys)
5
42 640
61 640
62 320
63 160
82 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
63

## state fluent hash keys (first line is the number of keys)
5
43 640
62 640
63 320
64 160
83 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
64

## state fluent hash keys (first line is the number of keys)
5
44 640
63 640
64 320
65 160
84 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
65

## state fluent hash keys (first line is the number of keys)
5
45 640
64 640
65 320
66 80
85 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
66

## state fluent hash keys (first line is the number of keys)
5
46 320
65 640
66 160
68 20
86 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
67

## state fluent hash keys (first line is the number of keys)
5
47 320
56 40
67 160
69 160
87 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
68

## state fluent hash keys (first line is the number of keys)
4
48 40
66 320
68 40
88 5
## kleene state fluent hash keys (first line is the number of keys)
0

## index
69

## state fluent hash keys (first line is the number of keys)
5
49 640
67 320
69 320
70 160
89 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
70

## state fluent hash keys (first line is the number of keys)
5
50 640
69 640
70 320
71 160
90 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
71

## state fluent hash keys (first line is the number of keys)
5
51 640
70 640
71 320
72 160
91 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
72

## state fluent hash keys (first line is the number of keys)
5
52 640
71 640
72 320
73 160
92 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
73

## state fluent hash keys (first line is the number of keys)
5
53 640
72 640
73 320
74 160
93 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
74

## state fluent hash keys (first line is the number of keys)
5
54 640
73 640
74 320
75 320
94 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
75

## state fluent hash keys (first line is the number of keys)
5
55 640
57 640
74 640
75 640
95 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
76

## state fluent hash keys (first line is the number of keys)
3
56 80
76 10
87 20
## kleene state fluent hash keys (first line is the number of keys)
0

## index
77

## state fluent hash keys (first line is the number of keys)
4
57 1280
77 20
78 20
95 20
## kleene state fluent hash keys (first line is the number of keys)
0

## index
78

## state fluent hash keys (first line is the number of keys)
4
58 1280
77 40
78 40
79 20
## kleene state fluent hash keys (first line is the number of keys)
0

## index
79

## state fluent hash keys (first line is the number of keys)
4
59 1280
78 80
79 40
80 20
## kleene state fluent hash keys (first line is the number of keys)
0

## index
80

## state fluent hash keys (first line is the number of keys)
4
60 1280
79 80
80 40
81 20
## kleene state fluent hash keys (first line is the number of keys)
0

## index
81

## state fluent hash keys (first line is the number of keys)
4
61 1280
80 80
81 40
82 20
## kleene state fluent hash keys (first line is the number of keys)
0

## index
82

## state fluent hash keys (first line is the number of keys)
4
62 1280
81 80
82 40
83 20
## kleene state fluent hash keys (first line is the number of keys)
0

## index
83

## state fluent hash keys (first line is the number of keys)
4
63 1280
82 80
83 40
84 20
## kleene state fluent hash keys (first line is the number of keys)
0

## index
84

## state fluent hash keys (first line is the number of keys)
4
64 1280
83 80
84 40
85 20
## kleene state fluent hash keys (first line is the number of keys)
0

## index
85

## state fluent hash keys (first line is the number of keys)
4
65 1280
84 80
85 40
86 20
## kleene state fluent hash keys (first line is the number of keys)
0

## index
86

## state fluent hash keys (first line is the number of keys)
4
66 640
85 80
86 40
88 10
## kleene state fluent hash keys (first line is the number of keys)
0

## index
87

## state fluent hash keys (first line is the number of keys)
4
67 640
76 20
87 40
89 20
## kleene state fluent hash keys (first line is the number of keys)
0

## index
88

## state fluent hash keys (first line is the number of keys)
61
36 80
37 1280
38 1280
39 1280
40 1280
41 1280
42 1280
43 1280
44 1280
45 1280
46 640
47 640
48 80
49 1280
50 1280
51 1280
52 1280
53 1280
54 1280
55 1280
56 160
57 2560
58 2560
59 2560
60 2560
61 2560
62 2560
63 2560
64 2560
65 2560
66 1280
67 1280
68 80
69 1280
70 1280
71 1280
72 1280
73 1280
74 1280
75 1280
76 40
77 80
78 160
79 160
80 160
81 160
82 160
83 160
84 160
85 160
86 80
87 80
88 20
89 40
90 20
91 20
92 20
93 20
94 20
95 40
114 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
89

## state fluent hash keys (first line is the number of keys)
4
69 2560
87 160
89 80
90 40
## kleene state fluent hash keys (first line is the number of keys)
0

## index
90

## state fluent hash keys (first line is the number of keys)
4
70 2560
89 160
90 80
91 40
## kleene state fluent hash keys (first line is the number of keys)
0

## index
91

## state fluent hash keys (first line is the number of keys)
4
71 2560
90 160
91 80
92 40
## kleene state fluent hash keys (first line is the number of keys)
0

## index
92

## state fluent hash keys (first line is the number of keys)
4
72 2560
91 160
92 80
93 40
## kleene state fluent hash keys (first line is the number of keys)
0

## index
93

## state fluent hash keys (first line is the number of keys)
4
73 2560
92 160
93 80
94 40
## kleene state fluent hash keys (first line is the number of keys)
0

## index
94

## state fluent hash keys (first line is the number of keys)
4
74 2560
93 160
94 80
95 80
## kleene state fluent hash keys (first line is the number of keys)
0

## index
95

## state fluent hash keys (first line is the number of keys)
4
75 2560
77 160
94 160
95 160
## kleene state fluent hash keys (first line is the number of keys)
0


#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0

## state fluent hash keys (first line is the number of keys)
5
18 1
57 5120
77 320
78 320
95 320
## kleene state fluent hash keys (first line is the number of keys)
5
28919216 140224311749600
57 295245
77 3645
78 3645
95 3645

## index
1

## state fluent hash keys (first line is the number of keys)
5
19 1
58 5120
77 640
78 640
79 320
## kleene state fluent hash keys (first line is the number of keys)
5
28919504 28666688
58 295245
77 10935
78 10935
79 3645

## index
2

## state fluent hash keys (first line is the number of keys)
5
20 1
59 5120
78 1280
79 640
80 320
## kleene state fluent hash keys (first line is the number of keys)
5
28645344 28688080
59 295245
78 32805
79 10935
80 3645

## index
3

## state fluent hash keys (first line is the number of keys)
5
21 1
60 5120
79 1280
80 640
81 320
## kleene state fluent hash keys (first line is the number of keys)
5
28666688 28709472
60 295245
79 32805
80 10935
81 3645

## index
4

## state fluent hash keys (first line is the number of keys)
5
22 1
61 5120
80 1280
81 640
82 320
## kleene state fluent hash keys (first line is the number of keys)
5
28688080 28730864
61 295245
80 32805
81 10935
82 3645

## index
5

## state fluent hash keys (first line is the number of keys)
5
23 1
62 5120
81 1280
82 640
83 320
## kleene state fluent hash keys (first line is the number of keys)
5
28709472 28752256
62 295245
81 32805
82 10935
83 3645

## index
6

## state fluent hash keys (first line is the number of keys)
5
24 1
63 5120
82 1280
83 640
84 320
## kleene state fluent hash keys (first line is the number of keys)
5
28730864 28773648
63 295245
82 32805
83 10935
84 3645

## index
7

## state fluent hash keys (first line is the number of keys)
5
25 1
64 5120
83 1280
84 640
85 320
## kleene state fluent hash keys (first line is the number of keys)
5
28752256 28779552
64 295245
83 32805
84 10935
85 3645

## index
8

## state fluent hash keys (first line is the number of keys)
5
26 1
65 5120
84 1280
85 640
86 160
## kleene state fluent hash keys (first line is the number of keys)
5
26 1
65 295245
84 32805
85 10935
86 1215

## index
9

## state fluent hash keys (first line is the number of keys)
5
27 1
66 2560
85 1280
86 320
88 40
## kleene state fluent hash keys (first line is the number of keys)
5
28779552 28812256
66 98415
85 32805
86 3645
88 135

## index
10

## state fluent hash keys (first line is the number of keys)
5
28 1
67 2560
76 80
87 320
89 320
## kleene state fluent hash keys (first line is the number of keys)
5
28790816 28833648
67 98415
76 405
87 3645
89 3645

## index
11

## state fluent hash keys (first line is the number of keys)
5
29 1
69 5120
87 640
89 640
90 320
## kleene state fluent hash keys (first line is the number of keys)
5
28812256 28855040
69 295245
87 10935
89 10935
90 3645

## index
12

## state fluent hash keys (first line is the number of keys)
5
30 1
70 5120
89 1280
90 640
91 320
## kleene state fluent hash keys (first line is the number of keys)
5
28833648 28876432
70 295245
89 32805
90 10935
91 3645

## index
13

## state fluent hash keys (first line is the number of keys)
5
31 1
71 5120
90 1280
91 640
92 320
## kleene state fluent hash keys (first line is the number of keys)
5
28855040 28897824
71 295245
90 32805
91 10935
92 3645

## index
14

## state fluent hash keys (first line is the number of keys)
5
32 1
72 5120
91 1280
92 640
93 320
## kleene state fluent hash keys (first line is the number of keys)
5
28876432 28919216
72 295245
91 32805
92 10935
93 3645

## index
15

## state fluent hash keys (first line is the number of keys)
5
33 1
73 5120
92 1280
93 640
94 320
## kleene state fluent hash keys (first line is the number of keys)
5
28897824 28940848
73 295245
92 32805
93 10935
94 3645

## index
16

## state fluent hash keys (first line is the number of keys)
5
34 1
74 5120
93 1280
94 640
95 640
## kleene state fluent hash keys (first line is the number of keys)
5
34 1
74 295245
93 32805
94 10935
95 10935

## index
17

## state fluent hash keys (first line is the number of keys)
5
35 1
75 5120
77 1280
94 1280
95 1280
## kleene state fluent hash keys (first line is the number of keys)
5
35 1
75 295245
77 32805
94 32805
95 32805

