#####TASK##### Here
## name
tamarisk_inst_mdp__14
## horizon
100
## discount factor
1
## number of action fluents
20
## number of det state fluents
0
## number of prob state fluents
60
## number of preconds
0
## number of actions
21
## number of hashing functions
61
## initial state
1 0 0 0 0 1 0 0 0 0 0 0 0 1 0 0 0 0 0 0 1 1 0 0 1 0 1 0 0 1 0 0 0 1 0 1 0 0 1 0 1 1 1 1 0 1 1 0 0 1 0 0 0 0 0 0 0 1 1 0 
## 1 if task is deterministic
0
## 1 if state hashing possible
1
## 1 if kleene state hashing possible
0


#####ACTION FLUENTS#####
## index
0
## name
eradicate(r1)
## number of values
2
## values
0 false
1 true

## index
1
## name
eradicate(r10)
## number of values
2
## values
0 false
1 true

## index
2
## name
eradicate(r2)
## number of values
2
## values
0 false
1 true

## index
3
## name
eradicate(r3)
## number of values
2
## values
0 false
1 true

## index
4
## name
eradicate(r4)
## number of values
2
## values
0 false
1 true

## index
5
## name
eradicate(r5)
## number of values
2
## values
0 false
1 true

## index
6
## name
eradicate(r6)
## number of values
2
## values
0 false
1 true

## index
7
## name
eradicate(r7)
## number of values
2
## values
0 false
1 true

## index
8
## name
eradicate(r8)
## number of values
2
## values
0 false
1 true

## index
9
## name
eradicate(r9)
## number of values
2
## values
0 false
1 true

## index
10
## name
restore(r1)
## number of values
2
## values
0 false
1 true

## index
11
## name
restore(r10)
## number of values
2
## values
0 false
1 true

## index
12
## name
restore(r2)
## number of values
2
## values
0 false
1 true

## index
13
## name
restore(r3)
## number of values
2
## values
0 false
1 true

## index
14
## name
restore(r4)
## number of values
2
## values
0 false
1 true

## index
15
## name
restore(r5)
## number of values
2
## values
0 false
1 true

## index
16
## name
restore(r6)
## number of values
2
## values
0 false
1 true

## index
17
## name
restore(r7)
## number of values
2
## values
0 false
1 true

## index
18
## name
restore(r8)
## number of values
2
## values
0 false
1 true

## index
19
## name
restore(r9)
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####


#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
native-at(s10s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(30) $s(0)) : Bernoulli($c(0.2))) (and(~($s(30)) $s(0) $a(11)) : $c(1)) (and(~($s(30)) ~($s(0)) $a(11)) : Bernoulli($c(0.9))) ($s(0) : Bernoulli($c(0.95))) (and(~($s(30)) ~($s(0))) : Bernoulli($c(0.1))) ($c(1) : $s(0)) )
## hash index
0
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
1
## name
native-at(s10s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(31) $s(1)) : Bernoulli($c(0.2))) (and(~($s(31)) $s(1) $a(11)) : $c(1)) (and(~($s(31)) ~($s(1)) $a(11)) : Bernoulli($c(0.9))) ($s(1) : Bernoulli($c(0.95))) (and(~($s(31)) ~($s(1))) : Bernoulli($c(0.1))) ($c(1) : $s(1)) )
## hash index
1
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
2
## name
native-at(s10s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(32) $s(2)) : Bernoulli($c(0.2))) (and(~($s(32)) $s(2) $a(11)) : $c(1)) (and(~($s(32)) ~($s(2)) $a(11)) : Bernoulli($c(0.9))) ($s(2) : Bernoulli($c(0.95))) (and(~($s(32)) ~($s(2))) : Bernoulli($c(0.1))) ($c(1) : $s(2)) )
## hash index
2
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 1
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
3
## name
native-at(s1s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(33) $s(3)) : Bernoulli($c(0.2))) (and(~($s(33)) $s(3) $a(10)) : $c(1)) (and(~($s(33)) ~($s(3)) $a(10)) : Bernoulli($c(0.9))) ($s(3) : Bernoulli($c(0.95))) (and(~($s(33)) ~($s(3))) : Bernoulli($c(0.1))) ($c(1) : $s(3)) )
## hash index
3
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
4
## name
native-at(s1s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(34) $s(4)) : Bernoulli($c(0.2))) (and(~($s(34)) $s(4) $a(10)) : $c(1)) (and(~($s(34)) ~($s(4)) $a(10)) : Bernoulli($c(0.9))) ($s(4) : Bernoulli($c(0.95))) (and(~($s(34)) ~($s(4))) : Bernoulli($c(0.1))) ($c(1) : $s(4)) )
## hash index
4
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
5
## name
native-at(s1s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(35) $s(5)) : Bernoulli($c(0.2))) (and(~($s(35)) $s(5) $a(10)) : $c(1)) (and(~($s(35)) ~($s(5)) $a(10)) : Bernoulli($c(0.9))) ($s(5) : Bernoulli($c(0.95))) (and(~($s(35)) ~($s(5))) : Bernoulli($c(0.1))) ($c(1) : $s(5)) )
## hash index
5
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 1
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
6
## name
native-at(s2s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(36) $s(6)) : Bernoulli($c(0.2))) (and(~($s(36)) $s(6) $a(12)) : $c(1)) (and(~($s(36)) ~($s(6)) $a(12)) : Bernoulli($c(0.9))) ($s(6) : Bernoulli($c(0.95))) (and(~($s(36)) ~($s(6))) : Bernoulli($c(0.1))) ($c(1) : $s(6)) )
## hash index
6
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
7
## name
native-at(s2s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(37) $s(7)) : Bernoulli($c(0.2))) (and(~($s(37)) $s(7) $a(12)) : $c(1)) (and(~($s(37)) ~($s(7)) $a(12)) : Bernoulli($c(0.9))) ($s(7) : Bernoulli($c(0.95))) (and(~($s(37)) ~($s(7))) : Bernoulli($c(0.1))) ($c(1) : $s(7)) )
## hash index
7
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
8
## name
native-at(s2s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(38) $s(8)) : Bernoulli($c(0.2))) (and(~($s(38)) $s(8) $a(12)) : $c(1)) (and(~($s(38)) ~($s(8)) $a(12)) : Bernoulli($c(0.9))) ($s(8) : Bernoulli($c(0.95))) (and(~($s(38)) ~($s(8))) : Bernoulli($c(0.1))) ($c(1) : $s(8)) )
## hash index
8
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 1
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
9
## name
native-at(s3s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(39) $s(9)) : Bernoulli($c(0.2))) (and(~($s(39)) $s(9) $a(13)) : $c(1)) (and(~($s(39)) ~($s(9)) $a(13)) : Bernoulli($c(0.9))) ($s(9) : Bernoulli($c(0.95))) (and(~($s(39)) ~($s(9))) : Bernoulli($c(0.1))) ($c(1) : $s(9)) )
## hash index
9
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
10
## name
native-at(s3s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(40) $s(10)) : Bernoulli($c(0.2))) (and(~($s(40)) $s(10) $a(13)) : $c(1)) (and(~($s(40)) ~($s(10)) $a(13)) : Bernoulli($c(0.9))) ($s(10) : Bernoulli($c(0.95))) (and(~($s(40)) ~($s(10))) : Bernoulli($c(0.1))) ($c(1) : $s(10)) )
## hash index
10
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
11
## name
native-at(s3s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(41) $s(11)) : Bernoulli($c(0.2))) (and(~($s(41)) $s(11) $a(13)) : $c(1)) (and(~($s(41)) ~($s(11)) $a(13)) : Bernoulli($c(0.9))) ($s(11) : Bernoulli($c(0.95))) (and(~($s(41)) ~($s(11))) : Bernoulli($c(0.1))) ($c(1) : $s(11)) )
## hash index
11
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 1
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
12
## name
native-at(s4s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(42) $s(12)) : Bernoulli($c(0.2))) (and(~($s(42)) $s(12) $a(14)) : $c(1)) (and(~($s(42)) ~($s(12)) $a(14)) : Bernoulli($c(0.9))) ($s(12) : Bernoulli($c(0.95))) (and(~($s(42)) ~($s(12))) : Bernoulli($c(0.1))) ($c(1) : $s(12)) )
## hash index
12
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
13
## name
native-at(s4s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(43) $s(13)) : Bernoulli($c(0.2))) (and(~($s(43)) $s(13) $a(14)) : $c(1)) (and(~($s(43)) ~($s(13)) $a(14)) : Bernoulli($c(0.9))) ($s(13) : Bernoulli($c(0.95))) (and(~($s(43)) ~($s(13))) : Bernoulli($c(0.1))) ($c(1) : $s(13)) )
## hash index
13
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
14
## name
native-at(s4s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(44) $s(14)) : Bernoulli($c(0.2))) (and(~($s(44)) $s(14) $a(14)) : $c(1)) (and(~($s(44)) ~($s(14)) $a(14)) : Bernoulli($c(0.9))) ($s(14) : Bernoulli($c(0.95))) (and(~($s(44)) ~($s(14))) : Bernoulli($c(0.1))) ($c(1) : $s(14)) )
## hash index
14
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
15
## name
native-at(s5s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(45) $s(15)) : Bernoulli($c(0.2))) (and(~($s(45)) $s(15) $a(15)) : $c(1)) (and(~($s(45)) ~($s(15)) $a(15)) : Bernoulli($c(0.9))) ($s(15) : Bernoulli($c(0.95))) (and(~($s(45)) ~($s(15))) : Bernoulli($c(0.1))) ($c(1) : $s(15)) )
## hash index
15
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
16
## name
native-at(s5s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(46) $s(16)) : Bernoulli($c(0.2))) (and(~($s(46)) $s(16) $a(15)) : $c(1)) (and(~($s(46)) ~($s(16)) $a(15)) : Bernoulli($c(0.9))) ($s(16) : Bernoulli($c(0.95))) (and(~($s(46)) ~($s(16))) : Bernoulli($c(0.1))) ($c(1) : $s(16)) )
## hash index
16
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
17
## name
native-at(s5s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(47) $s(17)) : Bernoulli($c(0.2))) (and(~($s(47)) $s(17) $a(15)) : $c(1)) (and(~($s(47)) ~($s(17)) $a(15)) : Bernoulli($c(0.9))) ($s(17) : Bernoulli($c(0.95))) (and(~($s(47)) ~($s(17))) : Bernoulli($c(0.1))) ($c(1) : $s(17)) )
## hash index
17
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
18
## name
native-at(s6s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(48) $s(18)) : Bernoulli($c(0.2))) (and(~($s(48)) $s(18) $a(16)) : $c(1)) (and(~($s(48)) ~($s(18)) $a(16)) : Bernoulli($c(0.9))) ($s(18) : Bernoulli($c(0.95))) (and(~($s(48)) ~($s(18))) : Bernoulli($c(0.1))) ($c(1) : $s(18)) )
## hash index
18
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
19
## name
native-at(s6s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(49) $s(19)) : Bernoulli($c(0.2))) (and(~($s(49)) $s(19) $a(16)) : $c(1)) (and(~($s(49)) ~($s(19)) $a(16)) : Bernoulli($c(0.9))) ($s(19) : Bernoulli($c(0.95))) (and(~($s(49)) ~($s(19))) : Bernoulli($c(0.1))) ($c(1) : $s(19)) )
## hash index
19
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
20
## name
native-at(s6s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(50) $s(20)) : Bernoulli($c(0.2))) (and(~($s(50)) $s(20) $a(16)) : $c(1)) (and(~($s(50)) ~($s(20)) $a(16)) : Bernoulli($c(0.9))) ($s(20) : Bernoulli($c(0.95))) (and(~($s(50)) ~($s(20))) : Bernoulli($c(0.1))) ($c(1) : $s(20)) )
## hash index
20
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 1
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
21
## name
native-at(s7s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(51) $s(21)) : Bernoulli($c(0.2))) (and(~($s(51)) $s(21) $a(17)) : $c(1)) (and(~($s(51)) ~($s(21)) $a(17)) : Bernoulli($c(0.9))) ($s(21) : Bernoulli($c(0.95))) (and(~($s(51)) ~($s(21))) : Bernoulli($c(0.1))) ($c(1) : $s(21)) )
## hash index
21
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
22
## name
native-at(s7s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(52) $s(22)) : Bernoulli($c(0.2))) (and(~($s(52)) $s(22) $a(17)) : $c(1)) (and(~($s(52)) ~($s(22)) $a(17)) : Bernoulli($c(0.9))) ($s(22) : Bernoulli($c(0.95))) (and(~($s(52)) ~($s(22))) : Bernoulli($c(0.1))) ($c(1) : $s(22)) )
## hash index
22
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
23
## name
native-at(s7s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(53) $s(23)) : Bernoulli($c(0.2))) (and(~($s(53)) $s(23) $a(17)) : $c(1)) (and(~($s(53)) ~($s(23)) $a(17)) : Bernoulli($c(0.9))) ($s(23) : Bernoulli($c(0.95))) (and(~($s(53)) ~($s(23))) : Bernoulli($c(0.1))) ($c(1) : $s(23)) )
## hash index
23
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 1
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
24
## name
native-at(s8s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(54) $s(24)) : Bernoulli($c(0.2))) (and(~($s(54)) $s(24) $a(18)) : $c(1)) (and(~($s(54)) ~($s(24)) $a(18)) : Bernoulli($c(0.9))) ($s(24) : Bernoulli($c(0.95))) (and(~($s(54)) ~($s(24))) : Bernoulli($c(0.1))) ($c(1) : $s(24)) )
## hash index
24
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
25
## name
native-at(s8s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(55) $s(25)) : Bernoulli($c(0.2))) (and(~($s(55)) $s(25) $a(18)) : $c(1)) (and(~($s(55)) ~($s(25)) $a(18)) : Bernoulli($c(0.9))) ($s(25) : Bernoulli($c(0.95))) (and(~($s(55)) ~($s(25))) : Bernoulli($c(0.1))) ($c(1) : $s(25)) )
## hash index
25
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
26
## name
native-at(s8s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(56) $s(26)) : Bernoulli($c(0.2))) (and(~($s(56)) $s(26) $a(18)) : $c(1)) (and(~($s(56)) ~($s(26)) $a(18)) : Bernoulli($c(0.9))) ($s(26) : Bernoulli($c(0.95))) (and(~($s(56)) ~($s(26))) : Bernoulli($c(0.1))) ($c(1) : $s(26)) )
## hash index
26
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
27
## name
native-at(s9s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(57) $s(27)) : Bernoulli($c(0.2))) (and(~($s(57)) $s(27) $a(19)) : $c(1)) (and(~($s(57)) ~($s(27)) $a(19)) : Bernoulli($c(0.9))) ($s(27) : Bernoulli($c(0.95))) (and(~($s(57)) ~($s(27))) : Bernoulli($c(0.1))) ($c(1) : $s(27)) )
## hash index
27
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
28
## name
native-at(s9s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(58) $s(28)) : Bernoulli($c(0.2))) (and(~($s(58)) $s(28) $a(19)) : $c(1)) (and(~($s(58)) ~($s(28)) $a(19)) : Bernoulli($c(0.9))) ($s(28) : Bernoulli($c(0.95))) (and(~($s(58)) ~($s(28))) : Bernoulli($c(0.1))) ($c(1) : $s(28)) )
## hash index
28
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
29
## name
native-at(s9s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(59) $s(29)) : Bernoulli($c(0.2))) (and(~($s(59)) $s(29) $a(19)) : $c(1)) (and(~($s(59)) ~($s(29)) $a(19)) : Bernoulli($c(0.9))) ($s(29) : Bernoulli($c(0.95))) (and(~($s(59)) ~($s(29))) : Bernoulli($c(0.1))) ($c(1) : $s(29)) )
## hash index
29
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
30
## name
tamarisk-at(s10s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(30) $s(0)) : Bernoulli($c(0.8))) (and(~($s(30)) $a(1)) : $c(0)) (and($s(30) $a(1)) : Bernoulli($c(0.1))) ($s(30) : Bernoulli($c(0.95))) (and(~($s(30)) ~($s(0))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(31) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(32) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(57) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(58) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(59) : $c(0.4)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(30)) )
## hash index
30
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 1
20 0

## index
31
## name
tamarisk-at(s10s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(31) $s(1)) : Bernoulli($c(0.8))) (and(~($s(31)) $a(1)) : $c(0)) (and($s(31) $a(1)) : Bernoulli($c(0.1))) ($s(31) : Bernoulli($c(0.95))) (and(~($s(31)) ~($s(1))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(30) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(32) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(57) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(58) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(59) : $c(0.4)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(31)) )
## hash index
31
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 1
20 0

## index
32
## name
tamarisk-at(s10s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(32) $s(2)) : Bernoulli($c(0.8))) (and(~($s(32)) $a(1)) : $c(0)) (and($s(32) $a(1)) : Bernoulli($c(0.1))) ($s(32) : Bernoulli($c(0.95))) (and(~($s(32)) ~($s(2))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(30) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(31) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(57) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(58) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(59) : $c(0.4)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(32)) )
## hash index
32
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 1
20 0

## index
33
## name
tamarisk-at(s1s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(33) $s(3)) : Bernoulli($c(0.8))) (and(~($s(33)) $a(0)) : $c(0)) (and($s(33) $a(0)) : Bernoulli($c(0.1))) ($s(33) : Bernoulli($c(0.95))) (and(~($s(33)) ~($s(3))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(34) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(35) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(36) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(37) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(38) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(33)) )
## hash index
33
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 1

## index
34
## name
tamarisk-at(s1s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(34) $s(4)) : Bernoulli($c(0.8))) (and(~($s(34)) $a(0)) : $c(0)) (and($s(34) $a(0)) : Bernoulli($c(0.1))) ($s(34) : Bernoulli($c(0.95))) (and(~($s(34)) ~($s(4))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(33) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(35) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(36) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(37) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(38) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(34)) )
## hash index
34
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 1

## index
35
## name
tamarisk-at(s1s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(35) $s(5)) : Bernoulli($c(0.8))) (and(~($s(35)) $a(0)) : $c(0)) (and($s(35) $a(0)) : Bernoulli($c(0.1))) ($s(35) : Bernoulli($c(0.95))) (and(~($s(35)) ~($s(5))) : Bernoulli(+(*(-($c(1) *(*(switch( ($s(33) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(34) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(36) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(37) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(38) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(35)) )
## hash index
35
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 1

## index
36
## name
tamarisk-at(s2s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(36) $s(6)) : Bernoulli($c(0.8))) (and(~($s(36)) $a(2)) : $c(0)) (and($s(36) $a(2)) : Bernoulli($c(0.1))) ($s(36) : Bernoulli($c(0.95))) (and(~($s(36)) ~($s(6))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(37) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(38) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(33) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(34) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(35) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(39) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(40) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(41) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(36)) )
## hash index
36
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 1
19 0
20 0

## index
37
## name
tamarisk-at(s2s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(37) $s(7)) : Bernoulli($c(0.8))) (and(~($s(37)) $a(2)) : $c(0)) (and($s(37) $a(2)) : Bernoulli($c(0.1))) ($s(37) : Bernoulli($c(0.95))) (and(~($s(37)) ~($s(7))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(36) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(38) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(33) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(34) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(35) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(39) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(40) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(41) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(37)) )
## hash index
37
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 1
19 0
20 0

## index
38
## name
tamarisk-at(s2s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(38) $s(8)) : Bernoulli($c(0.8))) (and(~($s(38)) $a(2)) : $c(0)) (and($s(38) $a(2)) : Bernoulli($c(0.1))) ($s(38) : Bernoulli($c(0.95))) (and(~($s(38)) ~($s(8))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(36) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(37) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(33) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(34) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(35) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(39) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(40) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(41) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(38)) )
## hash index
38
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 0
18 1
19 0
20 0

## index
39
## name
tamarisk-at(s3s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(39) $s(9)) : Bernoulli($c(0.8))) (and(~($s(39)) $a(3)) : $c(0)) (and($s(39) $a(3)) : Bernoulli($c(0.1))) ($s(39) : Bernoulli($c(0.95))) (and(~($s(39)) ~($s(9))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(40) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(41) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(36) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(37) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(38) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(42) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(43) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(44) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(39)) )
## hash index
39
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 1
18 0
19 0
20 0

## index
40
## name
tamarisk-at(s3s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(40) $s(10)) : Bernoulli($c(0.8))) (and(~($s(40)) $a(3)) : $c(0)) (and($s(40) $a(3)) : Bernoulli($c(0.1))) ($s(40) : Bernoulli($c(0.95))) (and(~($s(40)) ~($s(10))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(39) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(41) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(36) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(37) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(38) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(42) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(43) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(44) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(40)) )
## hash index
40
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 1
18 0
19 0
20 0

## index
41
## name
tamarisk-at(s3s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(41) $s(11)) : Bernoulli($c(0.8))) (and(~($s(41)) $a(3)) : $c(0)) (and($s(41) $a(3)) : Bernoulli($c(0.1))) ($s(41) : Bernoulli($c(0.95))) (and(~($s(41)) ~($s(11))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(39) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(40) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(36) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(37) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(38) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(42) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(43) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(44) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(41)) )
## hash index
41
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 0
17 1
18 0
19 0
20 0

## index
42
## name
tamarisk-at(s4s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(42) $s(12)) : Bernoulli($c(0.8))) (and(~($s(42)) $a(4)) : $c(0)) (and($s(42) $a(4)) : Bernoulli($c(0.1))) ($s(42) : Bernoulli($c(0.95))) (and(~($s(42)) ~($s(12))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(43) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(44) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(39) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(40) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(41) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(45) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(46) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(47) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(42)) )
## hash index
42
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 1
17 0
18 0
19 0
20 0

## index
43
## name
tamarisk-at(s4s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(43) $s(13)) : Bernoulli($c(0.8))) (and(~($s(43)) $a(4)) : $c(0)) (and($s(43) $a(4)) : Bernoulli($c(0.1))) ($s(43) : Bernoulli($c(0.95))) (and(~($s(43)) ~($s(13))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(42) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(44) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(39) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(40) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(41) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(45) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(46) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(47) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(43)) )
## hash index
43
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 1
17 0
18 0
19 0
20 0

## index
44
## name
tamarisk-at(s4s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(44) $s(14)) : Bernoulli($c(0.8))) (and(~($s(44)) $a(4)) : $c(0)) (and($s(44) $a(4)) : Bernoulli($c(0.1))) ($s(44) : Bernoulli($c(0.95))) (and(~($s(44)) ~($s(14))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(42) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(43) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(39) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(40) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(41) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(45) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(46) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(47) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(44)) )
## hash index
44
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 0
16 1
17 0
18 0
19 0
20 0

## index
45
## name
tamarisk-at(s5s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(45) $s(15)) : Bernoulli($c(0.8))) (and(~($s(45)) $a(5)) : $c(0)) (and($s(45) $a(5)) : Bernoulli($c(0.1))) ($s(45) : Bernoulli($c(0.95))) (and(~($s(45)) ~($s(15))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(46) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(47) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(42) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(43) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(44) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(48) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(49) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(50) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(45)) )
## hash index
45
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 1
16 0
17 0
18 0
19 0
20 0

## index
46
## name
tamarisk-at(s5s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(46) $s(16)) : Bernoulli($c(0.8))) (and(~($s(46)) $a(5)) : $c(0)) (and($s(46) $a(5)) : Bernoulli($c(0.1))) ($s(46) : Bernoulli($c(0.95))) (and(~($s(46)) ~($s(16))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(45) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(47) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(42) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(43) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(44) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(48) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(49) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(50) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(46)) )
## hash index
46
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 1
16 0
17 0
18 0
19 0
20 0

## index
47
## name
tamarisk-at(s5s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(47) $s(17)) : Bernoulli($c(0.8))) (and(~($s(47)) $a(5)) : $c(0)) (and($s(47) $a(5)) : Bernoulli($c(0.1))) ($s(47) : Bernoulli($c(0.95))) (and(~($s(47)) ~($s(17))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(45) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(46) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(42) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(43) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(44) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(48) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(49) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(50) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(47)) )
## hash index
47
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 0
15 1
16 0
17 0
18 0
19 0
20 0

## index
48
## name
tamarisk-at(s6s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(48) $s(18)) : Bernoulli($c(0.8))) (and(~($s(48)) $a(6)) : $c(0)) (and($s(48) $a(6)) : Bernoulli($c(0.1))) ($s(48) : Bernoulli($c(0.95))) (and(~($s(48)) ~($s(18))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(49) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(50) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(45) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(46) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(47) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(51) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(52) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(53) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(48)) )
## hash index
48
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 0

## index
49
## name
tamarisk-at(s6s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(49) $s(19)) : Bernoulli($c(0.8))) (and(~($s(49)) $a(6)) : $c(0)) (and($s(49) $a(6)) : Bernoulli($c(0.1))) ($s(49) : Bernoulli($c(0.95))) (and(~($s(49)) ~($s(19))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(48) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(50) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(45) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(46) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(47) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(51) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(52) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(53) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(49)) )
## hash index
49
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 0

## index
50
## name
tamarisk-at(s6s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(50) $s(20)) : Bernoulli($c(0.8))) (and(~($s(50)) $a(6)) : $c(0)) (and($s(50) $a(6)) : Bernoulli($c(0.1))) ($s(50) : Bernoulli($c(0.95))) (and(~($s(50)) ~($s(20))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(48) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(49) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(45) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(46) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(47) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(51) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(52) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(53) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(50)) )
## hash index
50
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 0
14 1
15 0
16 0
17 0
18 0
19 0
20 0

## index
51
## name
tamarisk-at(s7s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(51) $s(21)) : Bernoulli($c(0.8))) (and(~($s(51)) $a(7)) : $c(0)) (and($s(51) $a(7)) : Bernoulli($c(0.1))) ($s(51) : Bernoulli($c(0.95))) (and(~($s(51)) ~($s(21))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(52) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(53) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(48) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(49) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(50) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(54) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(55) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(56) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(51)) )
## hash index
51
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 1
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
52
## name
tamarisk-at(s7s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(52) $s(22)) : Bernoulli($c(0.8))) (and(~($s(52)) $a(7)) : $c(0)) (and($s(52) $a(7)) : Bernoulli($c(0.1))) ($s(52) : Bernoulli($c(0.95))) (and(~($s(52)) ~($s(22))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(51) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(53) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(48) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(49) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(50) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(54) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(55) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(56) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(52)) )
## hash index
52
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 1
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
53
## name
tamarisk-at(s7s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(53) $s(23)) : Bernoulli($c(0.8))) (and(~($s(53)) $a(7)) : $c(0)) (and($s(53) $a(7)) : Bernoulli($c(0.1))) ($s(53) : Bernoulli($c(0.95))) (and(~($s(53)) ~($s(23))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(51) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(52) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(48) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(49) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(50) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(54) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(55) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(56) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(53)) )
## hash index
53
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 0
13 1
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
54
## name
tamarisk-at(s8s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(54) $s(24)) : Bernoulli($c(0.8))) (and(~($s(54)) $a(8)) : $c(0)) (and($s(54) $a(8)) : Bernoulli($c(0.1))) ($s(54) : Bernoulli($c(0.95))) (and(~($s(54)) ~($s(24))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(55) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(56) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(51) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(52) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(53) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(57) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(58) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(59) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(54)) )
## hash index
54
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 1
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
55
## name
tamarisk-at(s8s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(55) $s(25)) : Bernoulli($c(0.8))) (and(~($s(55)) $a(8)) : $c(0)) (and($s(55) $a(8)) : Bernoulli($c(0.1))) ($s(55) : Bernoulli($c(0.95))) (and(~($s(55)) ~($s(25))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(54) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(56) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(51) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(52) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(53) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(57) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(58) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(59) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(55)) )
## hash index
55
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 1
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
56
## name
tamarisk-at(s8s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(56) $s(26)) : Bernoulli($c(0.8))) (and(~($s(56)) $a(8)) : $c(0)) (and($s(56) $a(8)) : Bernoulli($c(0.1))) ($s(56) : Bernoulli($c(0.95))) (and(~($s(56)) ~($s(26))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(54) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(55) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(51) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(52) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(53) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(57) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(58) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(59) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(56)) )
## hash index
56
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 0
12 1
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
57
## name
tamarisk-at(s9s1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(57) $s(27)) : Bernoulli($c(0.8))) (and(~($s(57)) $a(9)) : $c(0)) (and($s(57) $a(9)) : Bernoulli($c(0.1))) ($s(57) : Bernoulli($c(0.95))) (and(~($s(57)) ~($s(27))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(58) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(59) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(54) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(55) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(56) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(30) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(31) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(32) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(57)) )
## hash index
57
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 1
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
58
## name
tamarisk-at(s9s2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(58) $s(28)) : Bernoulli($c(0.8))) (and(~($s(58)) $a(9)) : $c(0)) (and($s(58) $a(9)) : Bernoulli($c(0.1))) ($s(58) : Bernoulli($c(0.95))) (and(~($s(58)) ~($s(28))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(57) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(59) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(54) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(55) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(56) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(30) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(31) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(32) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(58)) )
## hash index
58
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 1
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0

## index
59
## name
tamarisk-at(s9s3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(59) $s(29)) : Bernoulli($c(0.8))) (and(~($s(59)) $a(9)) : $c(0)) (and($s(59) $a(9)) : Bernoulli($c(0.1))) ($s(59) : Bernoulli($c(0.95))) (and(~($s(59)) ~($s(29))) : Bernoulli(+(*(-($c(1) *(*(*(switch( ($s(57) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(58) : $c(0.4)) ($c(1) : $c(1)) )) *(switch( ($s(54) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(55) : $c(0.4)) ($c(1) : $c(1)) ) switch( ($s(56) : $c(0.4)) ($c(1) : $c(1)) ))) *(switch( ($s(30) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(31) : $c(0.85)) ($c(1) : $c(1)) ) switch( ($s(32) : $c(0.85)) ($c(1) : $c(1)) )))) $c(0.9)) $c(0.1)))) ($c(1) : $s(59)) )
## hash index
59
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0
9 0
10 0
11 1
12 0
13 0
14 0
15 0
16 0
17 0
18 0
19 0
20 0



#####REWARD#####
## formula
+(*(or($s(33) $s(34) $s(35)) $c(-5)) *(or($s(36) $s(37) $s(38)) $c(-5)) *(or($s(39) $s(40) $s(41)) $c(-5)) *(or($s(42) $s(43) $s(44)) $c(-5)) *(or($s(45) $s(46) $s(47)) $c(-5)) *(or($s(48) $s(49) $s(50)) $c(-5)) *(or($s(51) $s(52) $s(53)) $c(-5)) *(or($s(54) $s(55) $s(56)) $c(-5)) *(or($s(57) $s(58) $s(59)) $c(-5)) *(or($s(30) $s(31) $s(32)) $c(-5)) *($s(33) $c(-0.5)) *($s(34) $c(-0.5)) *($s(35) $c(-0.5)) *($s(36) $c(-0.5)) *($s(37) $c(-0.5)) *($s(38) $c(-0.5)) *($s(39) $c(-0.5)) *($s(40) $c(-0.5)) *($s(41) $c(-0.5)) *($s(42) $c(-0.5)) *($s(43) $c(-0.5)) *($s(44) $c(-0.5)) *($s(45) $c(-0.5)) *($s(46) $c(-0.5)) *($s(47) $c(-0.5)) *($s(48) $c(-0.5)) *($s(49) $c(-0.5)) *($s(50) $c(-0.5)) *($s(51) $c(-0.5)) *($s(52) $c(-0.5)) *($s(53) $c(-0.5)) *($s(54) $c(-0.5)) *($s(55) $c(-0.5)) *($s(56) $c(-0.5)) *($s(57) $c(-0.5)) *($s(58) $c(-0.5)) *($s(59) $c(-0.5)) *($s(30) $c(-0.5)) *($s(31) $c(-0.5)) *($s(32) $c(-0.5)) *(and(~($s(33)) ~($s(3))) $c(-0.25)) *(and(~($s(34)) ~($s(4))) $c(-0.25)) *(and(~($s(35)) ~($s(5))) $c(-0.25)) *(and(~($s(36)) ~($s(6))) $c(-0.25)) *(and(~($s(37)) ~($s(7))) $c(-0.25)) *(and(~($s(38)) ~($s(8))) $c(-0.25)) *(and(~($s(39)) ~($s(9))) $c(-0.25)) *(and(~($s(40)) ~($s(10))) $c(-0.25)) *(and(~($s(41)) ~($s(11))) $c(-0.25)) *(and(~($s(42)) ~($s(12))) $c(-0.25)) *(and(~($s(43)) ~($s(13))) $c(-0.25)) *(and(~($s(44)) ~($s(14))) $c(-0.25)) *(and(~($s(45)) ~($s(15))) $c(-0.25)) *(and(~($s(46)) ~($s(16))) $c(-0.25)) *(and(~($s(47)) ~($s(17))) $c(-0.25)) *(and(~($s(48)) ~($s(18))) $c(-0.25)) *(and(~($s(49)) ~($s(19))) $c(-0.25)) *(and(~($s(50)) ~($s(20))) $c(-0.25)) *(and(~($s(51)) ~($s(21))) $c(-0.25)) *(and(~($s(52)) ~($s(22))) $c(-0.25)) *(and(~($s(53)) ~($s(23))) $c(-0.25)) *(and(~($s(54)) ~($s(24))) $c(-0.25)) *(and(~($s(55)) ~($s(25))) $c(-0.25)) *(and(~($s(56)) ~($s(26))) $c(-0.25)) *(and(~($s(57)) ~($s(27))) $c(-0.25)) *(and(~($s(58)) ~($s(28))) $c(-0.25)) *(and(~($s(59)) ~($s(29))) $c(-0.25)) *(and(~($s(30)) ~($s(0))) $c(-0.25)) *(and(~($s(31)) ~($s(1))) $c(-0.25)) *(and(~($s(32)) ~($s(2))) $c(-0.25)) *($a(0) $c(-0.49)) *($a(2) $c(-0.49)) *($a(3) $c(-0.49)) *($a(4) $c(-0.49)) *($a(5) $c(-0.49)) *($a(6) $c(-0.49)) *($a(7) $c(-0.49)) *($a(8) $c(-0.49)) *($a(9) $c(-0.49)) *($a(1) $c(-0.49)) *($a(10) $c(-0.9)) *($a(12) $c(-0.9)) *($a(13) $c(-0.9)) *($a(14) $c(-0.9)) *($a(15) $c(-0.9)) *($a(16) $c(-0.9)) *($a(17) $c(-0.9)) *($a(18) $c(-0.9)) *($a(19) $c(-0.9)) *($a(11) $c(-0.9)) *(and($a(10) ~($s(33)) ~($s(3))) $c(-0.4)) *(and($a(10) ~($s(34)) ~($s(4))) $c(-0.4)) *(and($a(10) ~($s(35)) ~($s(5))) $c(-0.4)) *(and($a(12) ~($s(36)) ~($s(6))) $c(-0.4)) *(and($a(12) ~($s(37)) ~($s(7))) $c(-0.4)) *(and($a(12) ~($s(38)) ~($s(8))) $c(-0.4)) *(and($a(13) ~($s(39)) ~($s(9))) $c(-0.4)) *(and($a(13) ~($s(40)) ~($s(10))) $c(-0.4)) *(and($a(13) ~($s(41)) ~($s(11))) $c(-0.4)) *(and($a(14) ~($s(42)) ~($s(12))) $c(-0.4)) *(and($a(14) ~($s(43)) ~($s(13))) $c(-0.4)) *(and($a(14) ~($s(44)) ~($s(14))) $c(-0.4)) *(and($a(15) ~($s(45)) ~($s(15))) $c(-0.4)) *(and($a(15) ~($s(46)) ~($s(16))) $c(-0.4)) *(and($a(15) ~($s(47)) ~($s(17))) $c(-0.4)) *(and($a(16) ~($s(48)) ~($s(18))) $c(-0.4)) *(and($a(16) ~($s(49)) ~($s(19))) $c(-0.4)) *(and($a(16) ~($s(50)) ~($s(20))) $c(-0.4)) *(and($a(17) ~($s(51)) ~($s(21))) $c(-0.4)) *(and($a(17) ~($s(52)) ~($s(22))) $c(-0.4)) *(and($a(17) ~($s(53)) ~($s(23))) $c(-0.4)) *(and($a(18) ~($s(54)) ~($s(24))) $c(-0.4)) *(and($a(18) ~($s(55)) ~($s(25))) $c(-0.4)) *(and($a(18) ~($s(56)) ~($s(26))) $c(-0.4)) *(and($a(19) ~($s(57)) ~($s(27))) $c(-0.4)) *(and($a(19) ~($s(58)) ~($s(28))) $c(-0.4)) *(and($a(19) ~($s(59)) ~($s(29))) $c(-0.4)) *(and($a(11) ~($s(30)) ~($s(0))) $c(-0.4)) *(and($a(11) ~($s(31)) ~($s(1))) $c(-0.4)) *(and($a(11) ~($s(32)) ~($s(2))) $c(-0.4)))
## min
-74.6
## max
-0
## independent from actions
0
## hash index
60
## caching type
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 2
3 3
4 4
5 5
6 6
7 7
8 8
9 9
10 10
11 11
12 12
13 13
14 14
15 15
16 16
17 17
18 18
19 19
20 20


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
4
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
5
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
6
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
7
## state
0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
8
## state
0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
9
## state
0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
10
## state
0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
11
## state
0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
12
## state
0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
13
## state
0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
14
## state
0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
15
## state
0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
16
## state
0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
17
## state
0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
18
## state
0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
19
## state
0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
20
## state
1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####

#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1
## state fluent hash keys (first line is the number of keys)
2
0 2
30 2
## kleene state fluent hash keys (first line is the number of keys)
2
0 2
30 2

## index
1
## state hash key (for each value in the domain)
0 2
## state fluent hash keys (first line is the number of keys)
2
1 2
31 2
## kleene state fluent hash keys (first line is the number of keys)
2
170752000 2
31 2

## index
2
## state hash key (for each value in the domain)
0 4
## state fluent hash keys (first line is the number of keys)
2
2 2
32 2
## kleene state fluent hash keys (first line is the number of keys)
2
170737488 2
32 2

## index
3
## state hash key (for each value in the domain)
0 8
## state fluent hash keys (first line is the number of keys)
2
3 2
33 2
## kleene state fluent hash keys (first line is the number of keys)
2
170737440 2
33 2

## index
4
## state hash key (for each value in the domain)
0 16
## state fluent hash keys (first line is the number of keys)
2
4 2
34 2
## kleene state fluent hash keys (first line is the number of keys)
2
170797456 2
34 2

## index
5
## state hash key (for each value in the domain)
0 32
## state fluent hash keys (first line is the number of keys)
2
5 2
35 2
## kleene state fluent hash keys (first line is the number of keys)
2
170782944 2
35 2

## index
6
## state hash key (for each value in the domain)
0 64
## state fluent hash keys (first line is the number of keys)
2
6 2
36 2
## kleene state fluent hash keys (first line is the number of keys)
2
170752288 2
36 2

## index
7
## state hash key (for each value in the domain)
0 128
## state fluent hash keys (first line is the number of keys)
2
7 2
37 2
## kleene state fluent hash keys (first line is the number of keys)
2
170713984 2
37 2

## index
8
## state hash key (for each value in the domain)
0 256
## state fluent hash keys (first line is the number of keys)
2
8 2
38 2
## kleene state fluent hash keys (first line is the number of keys)
2
170752192 2
38 2

## index
9
## state hash key (for each value in the domain)
0 512
## state fluent hash keys (first line is the number of keys)
2
9 2
39 2
## kleene state fluent hash keys (first line is the number of keys)
2
170945072 2
39 2

## index
10
## state hash key (for each value in the domain)
0 1024
## state fluent hash keys (first line is the number of keys)
2
10 2
40 2
## kleene state fluent hash keys (first line is the number of keys)
2
170716768 2
40 2

## index
11
## state hash key (for each value in the domain)
0 2048
## state fluent hash keys (first line is the number of keys)
2
11 2
41 2
## kleene state fluent hash keys (first line is the number of keys)
2
170715888 2
41 2

## index
12
## state hash key (for each value in the domain)
0 4096
## state fluent hash keys (first line is the number of keys)
2
12 2
42 2
## kleene state fluent hash keys (first line is the number of keys)
2
170715840 2
42 2

## index
13
## state hash key (for each value in the domain)
0 8192
## state fluent hash keys (first line is the number of keys)
2
13 2
43 2
## kleene state fluent hash keys (first line is the number of keys)
2
170719552 2
43 2

## index
14
## state hash key (for each value in the domain)
0 16384
## state fluent hash keys (first line is the number of keys)
2
14 2
44 2
## kleene state fluent hash keys (first line is the number of keys)
2
170718624 2
44 2

## index
15
## state hash key (for each value in the domain)
0 32768
## state fluent hash keys (first line is the number of keys)
2
15 2
45 2
## kleene state fluent hash keys (first line is the number of keys)
2
170717744 2
45 2

## index
16
## state hash key (for each value in the domain)
0 65536
## state fluent hash keys (first line is the number of keys)
2
16 2
46 2
## kleene state fluent hash keys (first line is the number of keys)
2
170722336 2
46 2

## index
17
## state hash key (for each value in the domain)
0 131072
## state fluent hash keys (first line is the number of keys)
2
17 2
47 2
## kleene state fluent hash keys (first line is the number of keys)
2
170721408 2
47 2

## index
18
## state hash key (for each value in the domain)
0 262144
## state fluent hash keys (first line is the number of keys)
2
18 2
48 2
## kleene state fluent hash keys (first line is the number of keys)
2
170720528 2
48 2

## index
19
## state hash key (for each value in the domain)
0 524288
## state fluent hash keys (first line is the number of keys)
2
19 2
49 2
## kleene state fluent hash keys (first line is the number of keys)
2
170725120 2
49 2

## index
20
## state hash key (for each value in the domain)
0 1048576
## state fluent hash keys (first line is the number of keys)
2
20 2
50 2
## kleene state fluent hash keys (first line is the number of keys)
2
170724192 2
50 2

## index
21
## state hash key (for each value in the domain)
0 2097152
## state fluent hash keys (first line is the number of keys)
2
21 2
51 2
## kleene state fluent hash keys (first line is the number of keys)
2
170723312 2
51 2

## index
22
## state hash key (for each value in the domain)
0 4194304
## state fluent hash keys (first line is the number of keys)
2
22 2
52 2
## kleene state fluent hash keys (first line is the number of keys)
2
170727904 2
52 2

## index
23
## state hash key (for each value in the domain)
0 8388608
## state fluent hash keys (first line is the number of keys)
2
23 2
53 2
## kleene state fluent hash keys (first line is the number of keys)
2
170726976 2
53 2

## index
24
## state hash key (for each value in the domain)
0 16777216
## state fluent hash keys (first line is the number of keys)
2
24 2
54 2
## kleene state fluent hash keys (first line is the number of keys)
2
170726096 2
54 2

## index
25
## state hash key (for each value in the domain)
0 33554432
## state fluent hash keys (first line is the number of keys)
2
25 2
55 2
## kleene state fluent hash keys (first line is the number of keys)
2
170729760 2
55 2

## index
26
## state hash key (for each value in the domain)
0 67108864
## state fluent hash keys (first line is the number of keys)
2
26 2
56 2
## kleene state fluent hash keys (first line is the number of keys)
2
170798528 2
56 2

## index
27
## state hash key (for each value in the domain)
0 134217728
## state fluent hash keys (first line is the number of keys)
2
27 2
57 2
## kleene state fluent hash keys (first line is the number of keys)
2
170732544 2
57 2

## index
28
## state hash key (for each value in the domain)
0 268435456
## state fluent hash keys (first line is the number of keys)
2
28 2
58 2
## kleene state fluent hash keys (first line is the number of keys)
2
170752928 2
58 2

## index
29
## state hash key (for each value in the domain)
0 536870912
## state fluent hash keys (first line is the number of keys)
2
29 2
59 2
## kleene state fluent hash keys (first line is the number of keys)
2
170733520 2
59 2

## index
30
## state hash key (for each value in the domain)
0 1073741824
## state fluent hash keys (first line is the number of keys)
7
0 4
30 4
31 4
32 4
57 4
58 4
59 4
## kleene state fluent hash keys (first line is the number of keys)
7
174784864 171290528
30 6
31 6
32 6
57 6
58 6
59 6

## index
31
## state hash key (for each value in the domain)
0 2147483648
## state fluent hash keys (first line is the number of keys)
7
1 4
30 8
31 8
32 8
57 8
58 8
59 8
## kleene state fluent hash keys (first line is the number of keys)
7
171175296 170944928
30 18
31 18
32 18
57 18
58 18
59 18

## index
32
## state hash key (for each value in the domain)
0 4294967296
## state fluent hash keys (first line is the number of keys)
7
2 4
30 16
31 16
32 16
57 16
58 16
59 16
## kleene state fluent hash keys (first line is the number of keys)
7
171290528 170828688
30 54
31 54
32 54
57 54
58 54
59 54

## index
33
## state hash key (for each value in the domain)
0 8589934592
## state fluent hash keys (first line is the number of keys)
7
3 4
33 4
34 4
35 4
36 4
37 4
38 4
## kleene state fluent hash keys (first line is the number of keys)
7
170944928 170943840
33 6
34 6
35 6
36 6
37 6
38 6

## index
34
## state hash key (for each value in the domain)
0 17179869184
## state fluent hash keys (first line is the number of keys)
7
4 4
33 8
34 8
35 8
36 8
37 8
38 8
## kleene state fluent hash keys (first line is the number of keys)
7
170828688 172102032
33 18
34 18
35 18
36 18
37 18
38 18

## index
35
## state hash key (for each value in the domain)
0 34359738368
## state fluent hash keys (first line is the number of keys)
7
5 4
33 16
34 16
35 16
36 16
37 16
38 16
## kleene state fluent hash keys (first line is the number of keys)
7
5 6
33 54
34 54
35 54
36 54
37 54
38 54

## index
36
## state hash key (for each value in the domain)
0 68719476736
## state fluent hash keys (first line is the number of keys)
10
6 4
33 32
34 32
35 32
36 32
37 32
38 32
39 4
40 4
41 4
## kleene state fluent hash keys (first line is the number of keys)
10
38414384 38060048
33 162
34 162
35 162
36 162
37 162
38 162
39 6
40 6
41 6

## index
37
## state hash key (for each value in the domain)
0 137438953472
## state fluent hash keys (first line is the number of keys)
10
7 4
33 64
34 64
35 64
36 64
37 64
38 64
39 8
40 8
41 8
## kleene state fluent hash keys (first line is the number of keys)
10
171407200 38060048
33 486
34 486
35 486
36 486
37 486
38 486
39 18
40 18
41 18

## index
38
## state hash key (for each value in the domain)
0 274877906944
## state fluent hash keys (first line is the number of keys)
10
8 4
33 128
34 128
35 128
36 128
37 128
38 128
39 16
40 16
41 16
## kleene state fluent hash keys (first line is the number of keys)
10
171407472 38060048
33 1458
34 1458
35 1458
36 1458
37 1458
38 1458
39 54
40 54
41 54

## index
39
## state hash key (for each value in the domain)
0 549755813888
## state fluent hash keys (first line is the number of keys)
10
9 4
36 256
37 256
38 256
39 32
40 32
41 32
42 4
43 4
44 4
## kleene state fluent hash keys (first line is the number of keys)
10
171407744 38060048
36 4374
37 4374
38 4374
39 162
40 162
41 162
42 6
43 6
44 6

## index
40
## state hash key (for each value in the domain)
0 1099511627776
## state fluent hash keys (first line is the number of keys)
10
10 4
36 512
37 512
38 512
39 64
40 64
41 64
42 8
43 8
44 8
## kleene state fluent hash keys (first line is the number of keys)
10
171754624 38060048
36 13122
37 13122
38 13122
39 486
40 486
41 486
42 18
43 18
44 18

## index
41
## state hash key (for each value in the domain)
0 2199023255552
## state fluent hash keys (first line is the number of keys)
10
11 4
36 1024
37 1024
38 1024
39 128
40 128
41 128
42 16
43 16
44 16
## kleene state fluent hash keys (first line is the number of keys)
10
171754896 38060048
36 39366
37 39366
38 39366
39 1458
40 1458
41 1458
42 54
43 54
44 54

## index
42
## state hash key (for each value in the domain)
0 4398046511104
## state fluent hash keys (first line is the number of keys)
10
12 4
39 256
40 256
41 256
42 32
43 32
44 32
45 4
46 4
47 4
## kleene state fluent hash keys (first line is the number of keys)
10
170943840 172449456
39 4374
40 4374
41 4374
42 162
43 162
44 162
45 6
46 6
47 6

## index
43
## state hash key (for each value in the domain)
0 8796093022208
## state fluent hash keys (first line is the number of keys)
10
13 4
39 512
40 512
41 512
42 64
43 64
44 64
45 8
46 8
47 8
## kleene state fluent hash keys (first line is the number of keys)
10
13 6
39 13122
40 13122
41 13122
42 486
43 486
44 486
45 18
46 18
47 18

## index
44
## state hash key (for each value in the domain)
0 17592186044416
## state fluent hash keys (first line is the number of keys)
10
14 4
39 1024
40 1024
41 1024
42 128
43 128
44 128
45 16
46 16
47 16
## kleene state fluent hash keys (first line is the number of keys)
10
14 6
39 39366
40 39366
41 39366
42 1458
43 1458
44 1458
45 54
46 54
47 54

## index
45
## state hash key (for each value in the domain)
0 35184372088832
## state fluent hash keys (first line is the number of keys)
10
15 4
42 256
43 256
44 256
45 32
46 32
47 32
48 4
49 4
50 4
## kleene state fluent hash keys (first line is the number of keys)
10
172102032 172796880
42 4374
43 4374
44 4374
45 162
46 162
47 162
48 6
49 6
50 6

## index
46
## state hash key (for each value in the domain)
0 70368744177664
## state fluent hash keys (first line is the number of keys)
10
16 4
42 512
43 512
44 512
45 64
46 64
47 64
48 8
49 8
50 8
## kleene state fluent hash keys (first line is the number of keys)
10
16 6
42 13122
43 13122
44 13122
45 486
46 486
47 486
48 18
49 18
50 18

## index
47
## state hash key (for each value in the domain)
0 140737488355328
## state fluent hash keys (first line is the number of keys)
10
17 4
42 1024
43 1024
44 1024
45 128
46 128
47 128
48 16
49 16
50 16
## kleene state fluent hash keys (first line is the number of keys)
10
17 6
42 39366
43 39366
44 39366
45 1458
46 1458
47 1458
48 54
49 54
50 54

## index
48
## state hash key (for each value in the domain)
0 281474976710656
## state fluent hash keys (first line is the number of keys)
10
18 4
45 256
46 256
47 256
48 32
49 32
50 32
51 4
52 4
53 4
## kleene state fluent hash keys (first line is the number of keys)
10
172449456 173144880
45 4374
46 4374
47 4374
48 162
49 162
50 162
51 6
52 6
53 6

## index
49
## state hash key (for each value in the domain)
0 562949953421312
## state fluent hash keys (first line is the number of keys)
10
19 4
45 512
46 512
47 512
48 64
49 64
50 64
51 8
52 8
53 8
## kleene state fluent hash keys (first line is the number of keys)
10
19 6
45 13122
46 13122
47 13122
48 486
49 486
50 486
51 18
52 18
53 18

## index
50
## state hash key (for each value in the domain)
0 1125899906842624
## state fluent hash keys (first line is the number of keys)
10
20 4
45 1024
46 1024
47 1024
48 128
49 128
50 128
51 16
52 16
53 16
## kleene state fluent hash keys (first line is the number of keys)
10
20 6
45 39366
46 39366
47 39366
48 1458
49 1458
50 1458
51 54
52 54
53 54

## index
51
## state hash key (for each value in the domain)
0 2251799813685248
## state fluent hash keys (first line is the number of keys)
10
21 4
48 256
49 256
50 256
51 32
52 32
53 32
54 4
55 4
56 4
## kleene state fluent hash keys (first line is the number of keys)
10
172796880 173492704
48 4374
49 4374
50 4374
51 162
52 162
53 162
54 6
55 6
56 6

## index
52
## state hash key (for each value in the domain)
0 4503599627370496
## state fluent hash keys (first line is the number of keys)
10
22 4
48 512
49 512
50 512
51 64
52 64
53 64
54 8
55 8
56 8
## kleene state fluent hash keys (first line is the number of keys)
10
22 6
48 13122
49 13122
50 13122
51 486
52 486
53 486
54 18
55 18
56 18

## index
53
## state hash key (for each value in the domain)
0 9007199254740992
## state fluent hash keys (first line is the number of keys)
10
23 4
48 1024
49 1024
50 1024
51 128
52 128
53 128
54 16
55 16
56 16
## kleene state fluent hash keys (first line is the number of keys)
10
23 6
48 39366
49 39366
50 39366
51 1458
52 1458
53 1458
54 54
55 54
56 54

## index
54
## state hash key (for each value in the domain)
0 18014398509481984
## state fluent hash keys (first line is the number of keys)
10
24 4
51 256
52 256
53 256
54 32
55 32
56 32
57 32
58 32
59 32
## kleene state fluent hash keys (first line is the number of keys)
10
173144880 140464626437088
0 0
52 4374
53 4374
54 162
55 162
56 162
57 162
58 162
59 162

## index
55
## state hash key (for each value in the domain)
0 36028797018963968
## state fluent hash keys (first line is the number of keys)
10
25 4
51 512
52 512
53 512
54 64
55 64
56 64
57 64
58 64
59 64
## kleene state fluent hash keys (first line is the number of keys)
10
25 6
51 13122
52 13122
53 13122
54 486
55 486
56 486
57 486
58 486
59 486

## index
56
## state hash key (for each value in the domain)
0 72057594037927936
## state fluent hash keys (first line is the number of keys)
10
26 4
51 1024
52 1024
53 1024
54 128
55 128
56 128
57 128
58 128
59 128
## kleene state fluent hash keys (first line is the number of keys)
10
26 6
51 39366
52 39366
53 39366
54 1458
55 1458
56 1458
57 1458
58 1458
59 1458

## index
57
## state hash key (for each value in the domain)
0 144115188075855872
## state fluent hash keys (first line is the number of keys)
10
27 4
30 32
31 32
32 32
54 256
55 256
56 256
57 256
58 256
59 256
## kleene state fluent hash keys (first line is the number of keys)
10
0 38060048
30 162
31 162
32 162
54 4374
55 4374
56 4374
57 4374
58 4374
59 4374

## index
58
## state hash key (for each value in the domain)
0 288230376151711744
## state fluent hash keys (first line is the number of keys)
10
28 4
30 64
31 64
32 64
54 512
55 512
56 512
57 512
58 512
59 512
## kleene state fluent hash keys (first line is the number of keys)
10
28 6
30 486
31 486
32 486
54 13122
55 13122
56 13122
57 13122
58 13122
59 13122

## index
59
## state hash key (for each value in the domain)
0 576460752303423488
## state fluent hash keys (first line is the number of keys)
10
29 4
30 128
31 128
32 128
54 1024
55 1024
56 1024
57 1024
58 1024
59 1024
## kleene state fluent hash keys (first line is the number of keys)
10
173028048 38060048
30 1458
31 1458
32 1458
54 39366
55 39366
56 39366
57 39366
58 39366
59 39366

