#####TASK##### Here
## name
elevators_inst_mdp__11
## horizon
100
## discount factor
1
## number of action fluents
8
## number of det state fluents
20
## number of prob state fluents
8
## number of preconds
0
## number of actions
9
## number of hashing functions
29
## initial state
1 0 0 0 0 0 1 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 0 
## 1 if task is deterministic
0
## 1 if state hashing possible
1
## 1 if kleene state hashing possible
1


#####ACTION FLUENTS#####
## index
0
## name
close-door(e0)
## number of values
2
## values
0 false
1 true

## index
1
## name
close-door(e1)
## number of values
2
## values
0 false
1 true

## index
2
## name
move-current-dir(e0)
## number of values
2
## values
0 false
1 true

## index
3
## name
move-current-dir(e1)
## number of values
2
## values
0 false
1 true

## index
4
## name
open-door-going-down(e0)
## number of values
2
## values
0 false
1 true

## index
5
## name
open-door-going-down(e1)
## number of values
2
## values
0 false
1 true

## index
6
## name
open-door-going-up(e0)
## number of values
2
## values
0 false
1 true

## index
7
## name
open-door-going-up(e1)
## number of values
2
## values
0 false
1 true



#####DET STATE FLUENTS AND CPFS#####
## index
0
## name
elevator-at-floor(e0, f0)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(12)) ~($a(2))) : $s(0)) (and($a(2) ~($s(14)) $s(1)) : $c(1)) (and($a(2) $s(14) ~($s(0))) : $s(0)) (and($a(2) ~($s(14))) : $s(0)) ($c(1) : $c(0)) )
## hash index
0
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0

## index
1
## name
elevator-at-floor(e0, f1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(12)) ~($a(2))) : $s(1)) (and($a(2) $s(14) $s(0)) : $c(1)) (and($a(2) ~($s(14)) $s(2)) : $c(1)) (and($a(2) $s(14) ~($s(1))) : $s(1)) (and($a(2) ~($s(14)) ~($s(1))) : $s(1)) ($c(1) : $c(0)) )
## hash index
1
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0

## index
2
## name
elevator-at-floor(e0, f2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(12)) ~($a(2))) : $s(2)) (and($a(2) $s(14) $s(1)) : $c(1)) (and($a(2) ~($s(14)) $s(3)) : $c(1)) (and($a(2) $s(14) ~($s(2))) : $s(2)) (and($a(2) ~($s(14)) ~($s(2))) : $s(2)) ($c(1) : $c(0)) )
## hash index
2
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0

## index
3
## name
elevator-at-floor(e0, f3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(12)) ~($a(2))) : $s(3)) (and($a(2) $s(14) $s(2)) : $c(1)) (and($a(2) ~($s(14)) $s(4)) : $c(1)) (and($a(2) $s(14) ~($s(3))) : $s(3)) (and($a(2) ~($s(14)) ~($s(3))) : $s(3)) ($c(1) : $c(0)) )
## hash index
3
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0

## index
4
## name
elevator-at-floor(e0, f4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(12)) ~($a(2))) : $s(4)) (and($a(2) $s(14) $s(3)) : $c(1)) (and($a(2) ~($s(14)) $s(5)) : $c(1)) (and($a(2) $s(14) ~($s(4))) : $s(4)) (and($a(2) ~($s(14)) ~($s(4))) : $s(4)) ($c(1) : $c(0)) )
## hash index
4
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0

## index
5
## name
elevator-at-floor(e0, f5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(12)) ~($a(2))) : $s(5)) (and($a(2) $s(14) $s(4)) : $c(1)) (and($a(2) $s(14)) : $s(5)) (and($a(2) ~($s(14)) ~($s(5))) : $s(5)) ($c(1) : $c(0)) )
## hash index
5
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 1
7 0
8 0

## index
6
## name
elevator-at-floor(e1, f0)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(13)) ~($a(3))) : $s(6)) (and($a(3) ~($s(15)) $s(7)) : $c(1)) (and($a(3) $s(15) ~($s(6))) : $s(6)) (and($a(3) ~($s(15))) : $s(6)) ($c(1) : $c(0)) )
## hash index
6
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0

## index
7
## name
elevator-at-floor(e1, f1)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(13)) ~($a(3))) : $s(7)) (and($a(3) $s(15) $s(6)) : $c(1)) (and($a(3) ~($s(15)) $s(8)) : $c(1)) (and($a(3) $s(15) ~($s(7))) : $s(7)) (and($a(3) ~($s(15)) ~($s(7))) : $s(7)) ($c(1) : $c(0)) )
## hash index
7
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0

## index
8
## name
elevator-at-floor(e1, f2)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(13)) ~($a(3))) : $s(8)) (and($a(3) $s(15) $s(7)) : $c(1)) (and($a(3) ~($s(15)) $s(9)) : $c(1)) (and($a(3) $s(15) ~($s(8))) : $s(8)) (and($a(3) ~($s(15)) ~($s(8))) : $s(8)) ($c(1) : $c(0)) )
## hash index
8
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0

## index
9
## name
elevator-at-floor(e1, f3)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(13)) ~($a(3))) : $s(9)) (and($a(3) $s(15) $s(8)) : $c(1)) (and($a(3) ~($s(15)) $s(10)) : $c(1)) (and($a(3) $s(15) ~($s(9))) : $s(9)) (and($a(3) ~($s(15)) ~($s(9))) : $s(9)) ($c(1) : $c(0)) )
## hash index
9
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0

## index
10
## name
elevator-at-floor(e1, f4)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(13)) ~($a(3))) : $s(10)) (and($a(3) $s(15) $s(9)) : $c(1)) (and($a(3) ~($s(15)) $s(11)) : $c(1)) (and($a(3) $s(15) ~($s(10))) : $s(10)) (and($a(3) ~($s(15)) ~($s(10))) : $s(10)) ($c(1) : $c(0)) )
## hash index
10
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0

## index
11
## name
elevator-at-floor(e1, f5)
## number of values
2
## values
0 false
1 true
## formula
switch( (or(~($s(13)) ~($a(3))) : $s(11)) (and($a(3) $s(15) $s(10)) : $c(1)) (and($a(3) $s(15)) : $s(11)) (and($a(3) ~($s(15)) ~($s(11))) : $s(11)) ($c(1) : $c(0)) )
## hash index
11
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 1
6 0
7 0
8 0

## index
12
## name
elevator-closed(e0)
## number of values
2
## values
0 false
1 true
## formula
or(and($s(12) ~($a(6)) ~($a(4))) $a(0))
## hash index
12
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 2
5 0
6 0
7 0
8 3

## index
13
## name
elevator-closed(e1)
## number of values
2
## values
0 false
1 true
## formula
or(and($s(13) ~($a(7)) ~($a(5))) $a(1))
## hash index
13
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 2
4 0
5 0
6 0
7 3
8 0

## index
14
## name
elevator-dir-up(e0)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(6) : $c(1)) ($a(4) : $c(0)) ($c(1) : $s(14)) )
## hash index
14
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 1
3 0
4 2
5 0
6 0
7 0
8 0

## index
15
## name
elevator-dir-up(e1)
## number of values
2
## values
0 false
1 true
## formula
switch( ($a(7) : $c(1)) ($a(5) : $c(0)) ($c(1) : $s(15)) )
## hash index
15
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 1
2 0
3 2
4 0
5 0
6 0
7 0
8 0

## index
16
## name
person-in-elevator-going-down(e0)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(16) : ~($s(0))) ($c(1) : or(and($s(1) ~($s(14)) ~($s(12)) $s(20)) and($s(2) ~($s(14)) ~($s(12)) $s(21)) and($s(3) ~($s(14)) ~($s(12)) $s(22)) and($s(4) ~($s(14)) ~($s(12)) $s(23)))) )
## hash index
16
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
17
## name
person-in-elevator-going-down(e1)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(17) : ~($s(6))) ($c(1) : or(and($s(7) ~($s(15)) ~($s(13)) $s(20)) and($s(8) ~($s(15)) ~($s(13)) $s(21)) and($s(9) ~($s(15)) ~($s(13)) $s(22)) and($s(10) ~($s(15)) ~($s(13)) $s(23)))) )
## hash index
17
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
18
## name
person-in-elevator-going-up(e0)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(18) : ~($s(5))) ($c(1) : or(and($s(1) $s(14) ~($s(12)) $s(24)) and($s(2) $s(14) ~($s(12)) $s(25)) and($s(3) $s(14) ~($s(12)) $s(26)) and($s(4) $s(14) ~($s(12)) $s(27)))) )
## hash index
18
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
19
## name
person-in-elevator-going-up(e1)
## number of values
2
## values
0 false
1 true
## formula
switch( ($s(19) : ~($s(11))) ($c(1) : or(and($s(7) $s(15) ~($s(13)) $s(24)) and($s(8) $s(15) ~($s(13)) $s(25)) and($s(9) $s(15) ~($s(13)) $s(26)) and($s(10) $s(15) ~($s(13)) $s(27)))) )
## hash index
19
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0



#####PROB STATE FLUENTS AND CPFS#####
## index
0
## name
person-waiting-down(f1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(20) ~(or(and($s(1) ~($s(14)) ~($s(12))) and($s(7) ~($s(15)) ~($s(13)))))) : $c(1)) ($c(1) : Bernoulli($c(0.009690392))) )
## hash index
20
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
1
## name
person-waiting-down(f2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(21) ~(or(and($s(2) ~($s(14)) ~($s(12))) and($s(8) ~($s(15)) ~($s(13)))))) : $c(1)) ($c(1) : Bernoulli($c(0.008311705))) )
## hash index
21
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
2
## name
person-waiting-down(f3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(22) ~(or(and($s(3) ~($s(14)) ~($s(12))) and($s(9) ~($s(15)) ~($s(13)))))) : $c(1)) ($c(1) : Bernoulli($c(0.010309356))) )
## hash index
22
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
3
## name
person-waiting-down(f4)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(23) ~(or(and($s(4) ~($s(14)) ~($s(12))) and($s(10) ~($s(15)) ~($s(13)))))) : $c(1)) ($c(1) : Bernoulli($c(0.009304608))) )
## hash index
23
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
4
## name
person-waiting-up(f1)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(24) ~(or(and($s(1) $s(14) ~($s(12))) and($s(7) $s(15) ~($s(13)))))) : $c(1)) ($c(1) : Bernoulli($c(0.009690392))) )
## hash index
24
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
5
## name
person-waiting-up(f2)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(25) ~(or(and($s(2) $s(14) ~($s(12))) and($s(8) $s(15) ~($s(13)))))) : $c(1)) ($c(1) : Bernoulli($c(0.008311705))) )
## hash index
25
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
6
## name
person-waiting-up(f3)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(26) ~(or(and($s(3) $s(14) ~($s(12))) and($s(9) $s(15) ~($s(13)))))) : $c(1)) ($c(1) : Bernoulli($c(0.010309356))) )
## hash index
26
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0

## index
7
## name
person-waiting-up(f4)
## number of values
2
## values
0 false
1 true
## formula
switch( (and($s(27) ~(or(and($s(4) $s(14) ~($s(12))) and($s(10) $s(15) ~($s(13)))))) : $c(1)) ($c(1) : Bernoulli($c(0.009304608))) )
## hash index
27
## caching type 
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0



#####REWARD#####
## formula
+(*(and($s(18) $s(14)) $c(-0.75)) *(and($s(19) $s(15)) $c(-0.75)) *(and($s(16) ~($s(14))) $c(-0.75)) *(and($s(17) ~($s(15))) $c(-0.75)) *(and($s(18) ~($s(14))) $c(-3)) *(and($s(19) ~($s(15))) $c(-3)) *(and($s(16) $s(14)) $c(-3)) *(and($s(17) $s(15)) $c(-3)) -(-($c(0) $s(24)) $s(20)) -(-($c(0) $s(25)) $s(21)) -(-($c(0) $s(26)) $s(22)) -(-($c(0) $s(27)) $s(23)))
## min
-23
## max
0
## independent from actions
1
## hash index
28
## caching type
NONE
## kleene caching type
NONE
## action hash keys
0 0
1 0
2 0
3 0
4 0
5 0
6 0
7 0
8 0


#####PRECONDITIONS#####


#####ACTION STATES#####
## index
0
## state
0 0 0 0 0 0 0 0 
## relevant preconditions
0


## index
1
## state
0 0 0 0 0 0 0 1 
## relevant preconditions
0


## index
2
## state
0 0 0 0 0 0 1 0 
## relevant preconditions
0


## index
3
## state
0 0 0 0 0 1 0 0 
## relevant preconditions
0


## index
4
## state
0 0 0 0 1 0 0 0 
## relevant preconditions
0


## index
5
## state
0 0 0 1 0 0 0 0 
## relevant preconditions
0


## index
6
## state
0 0 1 0 0 0 0 0 
## relevant preconditions
0


## index
7
## state
0 1 0 0 0 0 0 0 
## relevant preconditions
0


## index
8
## state
1 0 0 0 0 0 0 0 
## relevant preconditions
0



#####HASH KEYS OF DETERMINISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
0 2
1 2
16 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
1
## state hash key (for each value in the domain)
0 2
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
0 4
1 4
2 2
16 2
18 1
20 1
24 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
2
## state hash key (for each value in the domain)
0 4
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
1 8
2 4
3 2
16 4
18 2
21 1
25 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
3
## state hash key (for each value in the domain)
0 8
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
2 8
3 4
4 2
16 8
18 4
22 1
26 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
4
## state hash key (for each value in the domain)
0 16
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
3 8
4 4
5 2
16 16
18 8
23 1
27 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
5
## state hash key (for each value in the domain)
0 32
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
4 8
5 4
18 16
## kleene state fluent hash keys (first line is the number of keys)
0

## index
6
## state hash key (for each value in the domain)
0 64
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
6 2
7 2
17 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
7
## state hash key (for each value in the domain)
0 128
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
6 4
7 4
8 2
17 2
19 1
20 2
24 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
8
## state hash key (for each value in the domain)
0 256
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
7 8
8 4
9 2
17 4
19 2
21 2
25 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
9
## state hash key (for each value in the domain)
0 512
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
8 8
9 4
10 2
17 8
19 4
22 2
26 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
10
## state hash key (for each value in the domain)
0 1024
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
7
9 8
10 4
11 2
17 16
19 8
23 2
27 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
11
## state hash key (for each value in the domain)
0 2048
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
3
10 8
11 4
19 16
## kleene state fluent hash keys (first line is the number of keys)
0

## index
12
## state hash key (for each value in the domain)
0 4096
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
17
0 8
1 16
2 16
3 16
4 16
5 8
12 4
16 32
18 32
20 4
21 4
22 4
23 4
24 4
25 4
26 4
27 4
## kleene state fluent hash keys (first line is the number of keys)
0

## index
13
## state hash key (for each value in the domain)
0 8192
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
17
6 8
7 16
8 16
9 16
10 16
11 8
13 4
17 32
19 32
20 8
21 8
22 8
23 8
24 8
25 8
26 8
27 8
## kleene state fluent hash keys (first line is the number of keys)
0

## index
14
## state hash key (for each value in the domain)
0 16384
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
18
0 16
1 32
2 32
3 32
4 32
5 16
14 3
16 64
18 64
20 16
21 16
22 16
23 16
24 16
25 16
26 16
27 16
28 1
## kleene state fluent hash keys (first line is the number of keys)
0

## index
15
## state hash key (for each value in the domain)
0 32768
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
18
6 16
7 32
8 32
9 32
10 32
11 16
15 3
17 64
19 64
20 32
21 32
22 32
23 32
24 32
25 32
26 32
27 32
28 2
## kleene state fluent hash keys (first line is the number of keys)
0

## index
16
## state hash key (for each value in the domain)
0 65536
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
16 128
28 4
## kleene state fluent hash keys (first line is the number of keys)
0

## index
17
## state hash key (for each value in the domain)
0 131072
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
17 128
28 8
## kleene state fluent hash keys (first line is the number of keys)
0

## index
18
## state hash key (for each value in the domain)
0 262144
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
18 128
28 16
## kleene state fluent hash keys (first line is the number of keys)
0

## index
19
## state hash key (for each value in the domain)
0 524288
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
2
19 128
28 32
## kleene state fluent hash keys (first line is the number of keys)
0


#####HASH KEYS OF PROBABILISTIC STATE FLUENTS#####
## index
0
## state hash key (for each value in the domain)
0 1048576
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
16 256
17 256
20 64
28 64
## kleene state fluent hash keys (first line is the number of keys)
4
7302928 6561
17 6561
20 729
28 729

## index
1
## state hash key (for each value in the domain)
0 2097152
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
16 512
17 512
21 64
28 128
## kleene state fluent hash keys (first line is the number of keys)
4
7297984 19683
17 19683
21 729
28 2187

## index
2
## state hash key (for each value in the domain)
0 4194304
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
16 1024
17 1024
22 64
28 256
## kleene state fluent hash keys (first line is the number of keys)
4
7373856 59049
17 59049
22 729
28 6561

## index
3
## state hash key (for each value in the domain)
0 8388608
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
16 2048
17 2048
23 64
28 512
## kleene state fluent hash keys (first line is the number of keys)
4
7303008 177147
17 177147
23 729
28 19683

## index
4
## state hash key (for each value in the domain)
0 16777216
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
18 256
19 256
24 64
28 1024
## kleene state fluent hash keys (first line is the number of keys)
4
7473248 6561
19 6561
24 729
28 59049

## index
5
## state hash key (for each value in the domain)
0 33554432
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
18 512
19 512
25 64
28 2048
## kleene state fluent hash keys (first line is the number of keys)
4
7480832 19683
19 19683
25 729
28 177147

## index
6
## state hash key (for each value in the domain)
0 67108864
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
18 1024
19 1024
26 64
28 4096
## kleene state fluent hash keys (first line is the number of keys)
4
7488416 59049
19 59049
26 729
28 531441

## index
7
## state hash key (for each value in the domain)
0 134217728
## kleene state hash key base
0
## state fluent hash keys (first line is the number of keys)
4
18 2048
19 2048
27 64
28 8192
## kleene state fluent hash keys (first line is the number of keys)
4
7496000 177147
19 177147
27 729
28 1594323

